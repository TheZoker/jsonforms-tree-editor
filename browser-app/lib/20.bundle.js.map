{"version":3,"sources":["webpack:///../node_modules/@theia/filesystem/src/browser/download/file-download-command-contribution.ts","webpack:///../node_modules/@theia/navigator/src/browser/navigator-container.ts","webpack:///../node_modules/@theia/navigator/src/browser/navigator-contribution.ts","webpack:///../node_modules/@theia/navigator/src/browser/navigator-decorator-service.ts","webpack:///../node_modules/@theia/navigator/src/browser/navigator-filter.ts","webpack:///../node_modules/@theia/navigator/src/browser/navigator-frontend-module.ts","webpack:///../node_modules/@theia/navigator/src/browser/navigator-keybinding-context.ts","webpack:///../node_modules/@theia/navigator/src/browser/navigator-model.ts","webpack:///../node_modules/@theia/navigator/src/browser/navigator-preferences.ts","webpack:///../node_modules/@theia/navigator/src/browser/navigator-tree.ts","webpack:///../node_modules/@theia/navigator/src/browser/navigator-widget.tsx","webpack:///../node_modules/@theia/navigator/src/browser/style/index.css?ff16","webpack:///../node_modules/@theia/workspace/src/browser/index.ts","webpack:///../node_modules/brace-expansion/index.js","webpack:///../node_modules/brace-expansion/node_modules/balanced-match/index.js","webpack:///../node_modules/concat-map/index.js","webpack:///../node_modules/@theia/navigator/src/browser/style/index.css","webpack:///../node_modules/minimatch/minimatch.js"],"names":[],"mappings":"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C1B;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ,EAAE;AACV,2BAA2B;AAC3B,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,YAAY,KAAK,QAAQ,EAAE,IAAI,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,mBAAmB,YAAY;AAC/B;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,mCAAmC,2BAA2B;AAC9D;;AAEA,iBAAiB,cAAc;AAC/B,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;ACvMa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;AC1DA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACZA,2BAA2B,mBAAO,CAAC,6FAA2C;AAC9E;;;AAGA;AACA,cAAc,QAAS,y2BAAy2B,4CAA4C,yCAAyC,mBAAmB,yBAAyB,GAAG,iEAAiE,mBAAmB,sBAAsB,GAAG,wCAAwC,yBAAyB,GAAG,sCAAsC,mDAAmD,yCAAyC,4CAA4C,uBAAuB,mDAAmD,oBAAoB,sBAAsB,yBAAyB,0BAA0B,uBAAuB,0BAA0B,oDAAoD,GAAG,iCAAiC,4BAA4B;;AAE/qD;;;;;;;;;;;;ACPA;AACA;;AAEA,YAAY;AACZ;AACA,SAAS,mBAAO,CAAC,sDAAM;AACvB,CAAC;;AAED;AACA,aAAa,mBAAO,CAAC,iEAAiB;;AAEtC;AACA,QAAQ,uCAAuC;AAC/C,QAAQ,2BAA2B;AACnC,QAAQ,2BAA2B;AACnC,QAAQ,2BAA2B;AACnC,QAAQ;AACR;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC,IAAI;;AAE7C;AACA;AACA;;AAEA;AACA,gCAAgC;;AAEhC,aAAa;AACb;AACA;AACA;AACA;AACA,GAAG,IAAI;AACP;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,KAAK;AACL,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK,IAAI;AACT,KAAK,GAAG;AACR,KAAK,KAAK;AACV,KAAK,IAAI,IAAI,EAAE;AACf,KAAK,IAAI,EAAE,IAAI;AACf;AACA;AACA,KAAK,IAAI,OAAO,IAAI;AACpB,KAAK,EAAE,OAAO,EAAE;AAChB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAsB,IAAI;AAC1B;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,IAAI;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,IAAI;AACvC;AACA;AACA;AACA,gCAAgC,EAAE,EAAE,KAAK;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wCAAwC,QAAQ;AAChD;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,sBAAsB;AACrC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,6CAA6C;AAC7C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,QAAQ;AAChC;AACA;AACA;;AAEA,aAAa,gBAAgB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK,6CAA6C;;AAElD;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,2BAA2B;AAC3B","file":"20.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { notEmpty } from '@theia/core/lib/common/objects';\nimport { UriSelection } from '@theia/core/lib/common/selection';\nimport { SelectionService } from '@theia/core/lib/common/selection-service';\nimport { Command, CommandContribution, CommandRegistry } from '@theia/core/lib/common/command';\nimport { UriAwareCommandHandler, UriCommandHandler } from '@theia/core/lib/common/uri-command-handler';\nimport { FileDownloadService } from './file-download-service';\n\n@injectable()\nexport class FileDownloadCommandContribution implements CommandContribution {\n\n    @inject(FileDownloadService)\n    protected readonly downloadService: FileDownloadService;\n\n    @inject(SelectionService)\n    protected readonly selectionService: SelectionService;\n\n    registerCommands(registry: CommandRegistry): void {\n        const handler = new UriAwareCommandHandler<URI[]>(this.selectionService, this.downloadHandler(), { multi: true });\n        registry.registerCommand(FileDownloadCommands.DOWNLOAD, handler);\n    }\n\n    protected downloadHandler(): UriCommandHandler<URI[]> {\n        return {\n            execute: uris => this.executeDownload(uris),\n            isEnabled: uris => this.isDownloadEnabled(uris),\n            isVisible: uris => this.isDownloadVisible(uris),\n        };\n    }\n\n    protected async executeDownload(uris: URI[]): Promise<void> {\n        this.downloadService.download(uris);\n    }\n\n    protected isDownloadEnabled(uris: URI[]): boolean {\n        return uris.length > 0 && uris.every(u => u.scheme === 'file');\n    }\n\n    protected isDownloadVisible(uris: URI[]): boolean {\n        return this.isDownloadEnabled(uris);\n    }\n\n    protected getUris(uri: Object | undefined): URI[] {\n        if (uri === undefined) {\n            return [];\n        }\n        return (Array.isArray(uri) ? uri : [uri]).map(u => this.getUri(u)).filter(notEmpty);\n    }\n\n    protected getUri(uri: Object | undefined): URI | undefined {\n        if (uri instanceof URI) {\n            return uri;\n        }\n        if (UriSelection.is(uri)) {\n            return uri.uri;\n        }\n        return undefined;\n    }\n\n}\n\nexport namespace FileDownloadCommands {\n\n    export const DOWNLOAD: Command = {\n        id: 'file.download'\n    };\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Container, interfaces } from 'inversify';\nimport { Tree, TreeModel, TreeProps, defaultTreeProps, TreeDecoratorService } from '@theia/core/lib/browser';\nimport { createFileTreeContainer, FileTree, FileTreeModel, FileTreeWidget } from '@theia/filesystem/lib/browser';\nimport { bindContributionProvider } from '@theia/core/lib/common/contribution-provider';\nimport { FileNavigatorTree } from './navigator-tree';\nimport { FileNavigatorModel } from './navigator-model';\nimport { FileNavigatorWidget } from './navigator-widget';\nimport { NAVIGATOR_CONTEXT_MENU } from './navigator-contribution';\nimport { NavigatorDecoratorService, NavigatorTreeDecorator } from './navigator-decorator-service';\n\nexport const FILE_NAVIGATOR_PROPS = <TreeProps>{\n    ...defaultTreeProps,\n    contextMenuPath: NAVIGATOR_CONTEXT_MENU,\n    multiSelect: true,\n    search: true\n};\n\nexport function createFileNavigatorContainer(parent: interfaces.Container): Container {\n    const child = createFileTreeContainer(parent);\n\n    child.unbind(FileTree);\n    child.bind(FileNavigatorTree).toSelf();\n    child.rebind(Tree).toService(FileNavigatorTree);\n\n    child.unbind(FileTreeModel);\n    child.bind(FileNavigatorModel).toSelf();\n    child.rebind(TreeModel).toService(FileNavigatorModel);\n\n    child.unbind(FileTreeWidget);\n    child.bind(FileNavigatorWidget).toSelf();\n\n    child.rebind(TreeProps).toConstantValue(FILE_NAVIGATOR_PROPS);\n\n    child.bind(NavigatorDecoratorService).toSelf().inSingletonScope();\n    child.rebind(TreeDecoratorService).toService(NavigatorDecoratorService);\n    bindContributionProvider(child, NavigatorTreeDecorator);\n\n    return child;\n}\n\nexport function createFileNavigatorWidget(parent: interfaces.Container): FileNavigatorWidget {\n    return createFileNavigatorContainer(parent).get(FileNavigatorWidget);\n}\n","/********************************************************************************\n * Copyright (C) 2017-2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { AbstractViewContribution } from '@theia/core/lib/browser/shell/view-contribution';\nimport {\n    Navigatable, SelectableTreeNode, Widget, KeybindingRegistry, CommonCommands,\n    OpenerService, FrontendApplicationContribution, FrontendApplication, CompositeTreeNode\n} from '@theia/core/lib/browser';\nimport { FileDownloadCommands } from '@theia/filesystem/lib/browser/download/file-download-command-contribution';\nimport { CommandRegistry, MenuModelRegistry, MenuPath, isOSX, Command } from '@theia/core/lib/common';\nimport { SHELL_TABBAR_CONTEXT_MENU } from '@theia/core/lib/browser';\nimport { WorkspaceCommands, WorkspaceService, WorkspacePreferences } from '@theia/workspace/lib/browser';\nimport { FILE_NAVIGATOR_ID, FileNavigatorWidget } from './navigator-widget';\nimport { FileNavigatorPreferences } from './navigator-preferences';\nimport { NavigatorKeybindingContexts } from './navigator-keybinding-context';\nimport { FileNavigatorFilter } from './navigator-filter';\nimport { WorkspaceNode } from './navigator-tree';\n\nexport namespace FileNavigatorCommands {\n    export const REVEAL_IN_NAVIGATOR: Command = {\n        id: 'navigator.reveal',\n        label: 'Reveal in Files'\n    };\n    export const TOGGLE_HIDDEN_FILES: Command = {\n        id: 'navigator.toggle.hidden.files',\n        label: 'Toggle Hidden Files'\n    };\n    export const COLLAPSE_ALL: Command = {\n        id: 'navigator.collapse.all'\n    };\n}\n\nexport const NAVIGATOR_CONTEXT_MENU: MenuPath = ['navigator-context-menu'];\n\nexport namespace NavigatorContextMenu {\n    export const OPEN = [...NAVIGATOR_CONTEXT_MENU, '1_open'];\n    export const OPEN_WITH = [...OPEN, 'open_with'];\n    export const CLIPBOARD = [...NAVIGATOR_CONTEXT_MENU, '2_clipboard'];\n    export const MOVE = [...NAVIGATOR_CONTEXT_MENU, '3_move'];\n    export const NEW = [...NAVIGATOR_CONTEXT_MENU, '4_new'];\n    export const DIFF = [...NAVIGATOR_CONTEXT_MENU, '5_diff'];\n    export const WORKSPACE = [...NAVIGATOR_CONTEXT_MENU, '6_workspace'];\n    export const ACTIONS = [...NAVIGATOR_CONTEXT_MENU, '7_actions'];\n}\n\n@injectable()\nexport class FileNavigatorContribution extends AbstractViewContribution<FileNavigatorWidget> implements FrontendApplicationContribution {\n\n    constructor(\n        @inject(FileNavigatorPreferences) protected readonly fileNavigatorPreferences: FileNavigatorPreferences,\n        @inject(OpenerService) protected readonly openerService: OpenerService,\n        @inject(FileNavigatorFilter) protected readonly fileNavigatorFilter: FileNavigatorFilter,\n        @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService,\n        @inject(WorkspacePreferences) protected readonly workspacePreferences: WorkspacePreferences\n    ) {\n        super({\n            widgetId: FILE_NAVIGATOR_ID,\n            widgetName: 'Files',\n            defaultWidgetOptions: {\n                area: 'left',\n                rank: 100\n            },\n            toggleCommandId: 'fileNavigator:toggle',\n            toggleKeybinding: 'ctrlcmd+shift+e'\n        });\n    }\n\n    @postConstruct()\n    protected async init() {\n        await this.fileNavigatorPreferences.ready;\n        this.shell.currentChanged.connect(() => this.onCurrentWidgetChangedHandler());\n    }\n\n    async initializeLayout(app: FrontendApplication): Promise<void> {\n        await this.openView();\n    }\n\n    registerCommands(registry: CommandRegistry): void {\n        super.registerCommands(registry);\n        registry.registerCommand(FileNavigatorCommands.REVEAL_IN_NAVIGATOR, {\n            execute: () => this.openView({ activate: true }).then(() => this.selectWidgetFileNode(this.shell.currentWidget)),\n            isEnabled: () => Navigatable.is(this.shell.currentWidget),\n            isVisible: () => Navigatable.is(this.shell.currentWidget)\n        });\n        registry.registerCommand(FileNavigatorCommands.TOGGLE_HIDDEN_FILES, {\n            execute: () => {\n                this.fileNavigatorFilter.toggleHiddenFiles();\n            },\n            isEnabled: () => true,\n            isVisible: () => true\n        });\n        registry.registerCommand(FileNavigatorCommands.COLLAPSE_ALL, {\n            execute: () => this.collapseFileNavigatorTree(),\n            isEnabled: () => this.workspaceService.opened,\n            isVisible: () => this.workspaceService.opened\n        });\n    }\n\n    registerMenus(registry: MenuModelRegistry): void {\n        super.registerMenus(registry);\n        registry.registerMenuAction(SHELL_TABBAR_CONTEXT_MENU, {\n            commandId: FileNavigatorCommands.REVEAL_IN_NAVIGATOR.id,\n            label: 'Reveal in Files',\n            order: '5'\n        });\n\n        registry.registerMenuAction(NavigatorContextMenu.OPEN, {\n            commandId: CommonCommands.OPEN.id\n        });\n        registry.registerSubmenu(NavigatorContextMenu.OPEN_WITH, 'Open With');\n        this.openerService.getOpeners().then(openers => {\n            for (const opener of openers) {\n                const openWithCommand = WorkspaceCommands.FILE_OPEN_WITH(opener);\n                registry.registerMenuAction(NavigatorContextMenu.OPEN_WITH, {\n                    commandId: openWithCommand.id,\n                    label: opener.label,\n                    icon: opener.iconClass\n                });\n            }\n        });\n\n        // registry.registerMenuAction([CONTEXT_MENU_PATH, CUT_MENU_GROUP], {\n        //     commandId: Commands.FILE_CUT\n        // });\n\n        registry.registerMenuAction(NavigatorContextMenu.CLIPBOARD, {\n            commandId: CommonCommands.COPY.id\n        });\n        registry.registerMenuAction(NavigatorContextMenu.CLIPBOARD, {\n            commandId: CommonCommands.PASTE.id\n        });\n\n        registry.registerMenuAction(NavigatorContextMenu.MOVE, {\n            commandId: WorkspaceCommands.FILE_RENAME.id\n        });\n        registry.registerMenuAction(NavigatorContextMenu.MOVE, {\n            commandId: WorkspaceCommands.FILE_DELETE.id\n        });\n        registry.registerMenuAction(NavigatorContextMenu.MOVE, {\n            commandId: WorkspaceCommands.FILE_DUPLICATE.id\n        });\n        registry.registerMenuAction(NavigatorContextMenu.MOVE, {\n            commandId: FileDownloadCommands.DOWNLOAD.id,\n            label: 'Download',\n            order: 'z' // Should be the last item in the \"move\" menu group.\n        });\n\n        registry.registerMenuAction(NavigatorContextMenu.NEW, {\n            commandId: WorkspaceCommands.NEW_FILE.id\n        });\n        registry.registerMenuAction(NavigatorContextMenu.NEW, {\n            commandId: WorkspaceCommands.NEW_FOLDER.id\n        });\n        registry.registerMenuAction(NavigatorContextMenu.DIFF, {\n            commandId: WorkspaceCommands.FILE_COMPARE.id\n        });\n        registry.registerMenuAction(NavigatorContextMenu.ACTIONS, {\n            commandId: FileNavigatorCommands.COLLAPSE_ALL.id,\n            label: 'Collapse All'\n        });\n\n        this.workspacePreferences.ready.then(() => {\n            if (this.workspacePreferences['workspace.supportMultiRootWorkspace']) {\n                registry.registerMenuAction(NavigatorContextMenu.WORKSPACE, {\n                    commandId: WorkspaceCommands.ADD_FOLDER.id\n                });\n                registry.registerMenuAction(NavigatorContextMenu.WORKSPACE, {\n                    commandId: WorkspaceCommands.REMOVE_FOLDER.id\n                });\n            }\n        });\n    }\n\n    registerKeybindings(registry: KeybindingRegistry): void {\n        super.registerKeybindings(registry);\n        registry.registerKeybinding({\n            command: FileNavigatorCommands.REVEAL_IN_NAVIGATOR.id,\n            keybinding: 'alt+r'\n        });\n\n        registry.registerKeybinding({\n            command: WorkspaceCommands.FILE_DELETE.id,\n            keybinding: 'del',\n            context: NavigatorKeybindingContexts.navigatorActive\n        });\n        if (isOSX) {\n            registry.registerKeybinding({\n                command: WorkspaceCommands.FILE_DELETE.id,\n                keybinding: 'cmd+backspace',\n                context: NavigatorKeybindingContexts.navigatorActive\n            });\n        }\n\n        registry.registerKeybinding({\n            command: WorkspaceCommands.FILE_RENAME.id,\n            keybinding: 'f2',\n            context: NavigatorKeybindingContexts.navigatorActive\n        });\n\n        registry.registerKeybinding({\n            command: FileNavigatorCommands.TOGGLE_HIDDEN_FILES.id,\n            keybinding: 'ctrlcmd+i',\n            context: NavigatorKeybindingContexts.navigatorActive\n        });\n    }\n\n    /**\n     * Reveals and selects node in the file navigator to which given widget is related.\n     * Does nothing if given widget undefined or doesn't have related resource.\n     *\n     * @param widget widget file resource of which should be revealed and selected\n     */\n    async selectWidgetFileNode(widget: Widget | undefined): Promise<void> {\n        if (Navigatable.is(widget)) {\n            const resourceUri = widget.getResourceUri();\n            if (resourceUri) {\n                const { model } = await this.widget;\n                const node = await model.revealFile(resourceUri);\n                if (SelectableTreeNode.is(node)) {\n                    model.selectNode(node);\n                }\n            }\n        }\n    }\n\n    protected onCurrentWidgetChangedHandler(): void {\n        if (this.fileNavigatorPreferences['navigator.autoReveal']) {\n            this.selectWidgetFileNode(this.shell.currentWidget);\n        }\n    }\n\n    /**\n     * Collapse file navigator nodes and set focus on first visible node\n     * - single root workspace: collapse all nodes except root\n     * - multiple root workspace: collapse all nodes, even roots\n     */\n    async collapseFileNavigatorTree(): Promise<void> {\n        const { model } = await this.widget;\n\n        // collapse all child nodes which are not the root (single root workspace)\n        // collapse all root nodes (multiple root workspace)\n        let root = model.root as CompositeTreeNode;\n        if (WorkspaceNode.is(root) && root.children.length === 1) {\n            root = root.children[0];\n        }\n        root.children.forEach(child => CompositeTreeNode.is(child) && model.collapseAll(child));\n\n        // select first visible node\n        const firstChild = WorkspaceNode.is(root) ? root.children[0] : root;\n        if (SelectableTreeNode.is(firstChild)) {\n            await model.selectNode(firstChild);\n        }\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, named } from 'inversify';\nimport { ContributionProvider } from '@theia/core/lib/common/contribution-provider';\nimport { TreeDecorator, AbstractTreeDecoratorService } from '@theia/core/lib/browser/tree/tree-decorator';\n\n/**\n * Symbol for all decorators that would like to contribute into the navigator.\n */\nexport const NavigatorTreeDecorator = Symbol('NavigatorTreeDecorator');\n\n/**\n * Decorator service for the navigator.\n */\n@injectable()\nexport class NavigatorDecoratorService extends AbstractTreeDecoratorService {\n\n    constructor(@inject(ContributionProvider) @named(NavigatorTreeDecorator) protected readonly contributions: ContributionProvider<TreeDecorator>) {\n        super(contributions.getContributions());\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport { Minimatch } from 'minimatch';\nimport { MaybePromise } from '@theia/core/lib/common/types';\nimport { Event, Emitter } from '@theia/core/lib/common/event';\nimport { PreferenceChangeEvent } from '@theia/core/lib/browser/preferences';\nimport { FileNavigatorPreferences, FileNavigatorConfiguration } from './navigator-preferences';\n\n/**\n * Filter for omitting elements from the navigator. For more details on the exclusion patterns,\n * one should check either the manual with `man 5 gitignore` or just [here](https://git-scm.com/docs/gitignore).\n */\n@injectable()\nexport class FileNavigatorFilter {\n\n    protected readonly emitter: Emitter<void>;\n\n    protected filterPredicate: FileNavigatorFilter.Predicate;\n\n    protected showHiddenFiles: boolean;\n\n    constructor(@inject(FileNavigatorPreferences) protected readonly preferences: FileNavigatorPreferences) {\n        this.emitter = new Emitter<void>();\n        this.filterPredicate = this.createFilterPredicate(this.preferences['navigator.exclude']);\n        preferences.onPreferenceChanged(this.onPreferenceChanged.bind(this));\n    }\n\n    async filter<T extends { id: string }>(items: MaybePromise<T[]>): Promise<T[]> {\n        return (await items).filter(item => this.filterItem(item));\n    }\n\n    get onFilterChanged(): Event<void> {\n        return this.emitter.event;\n    }\n\n    protected filterItem(item: { id: string }): boolean {\n        return this.filterPredicate.filter(item);\n    }\n\n    protected fireFilterChanged() {\n        this.emitter.fire(undefined);\n    }\n\n    protected onPreferenceChanged(event: PreferenceChangeEvent<FileNavigatorConfiguration>): void {\n        let hasChanged = false;\n        const { preferenceName, newValue } = event;\n        if (preferenceName === 'navigator.exclude') {\n            this.filterPredicate = this.createFilterPredicate(newValue as FileNavigatorFilter.Exclusions | undefined || {});\n            hasChanged = true;\n        }\n        if (hasChanged) {\n            this.fireFilterChanged();\n        }\n    }\n\n    protected createFilterPredicate(exclusions: FileNavigatorFilter.Exclusions): FileNavigatorFilter.Predicate {\n        return new FileNavigatorFilterPredicate(this.interceptExclusions(exclusions));\n    }\n\n    toggleHiddenFiles(): void {\n        this.showHiddenFiles = !this.showHiddenFiles;\n        this.filterPredicate = this.createFilterPredicate(this.preferences['navigator.exclude'] || {});\n        this.fireFilterChanged();\n    }\n\n    protected interceptExclusions(exclusions: FileNavigatorFilter.Exclusions): FileNavigatorFilter.Exclusions {\n        return {\n            ...exclusions,\n            '**/.*': this.showHiddenFiles\n        };\n    }\n\n}\n\nexport namespace FileNavigatorFilter {\n\n    /**\n     * File navigator filter predicate.\n     */\n    export interface Predicate {\n\n        /**\n         * Returns `true` if the item should filtered our from the navigator. Otherwise, `true`.\n         *\n         * @param item the identifier of a tree node.\n         */\n        filter(item: { id: string }): boolean;\n\n    }\n\n    export namespace Predicate {\n\n        /**\n         * Wraps a bunch of predicates and returns with a new one that evaluates to `true` if\n         * each of the wrapped predicates evaluates to `true`. Otherwise, `false`.\n         */\n        export function and(...predicates: Predicate[]): Predicate {\n            return {\n                filter: id => predicates.every(predicate => predicate.filter(id))\n            };\n        }\n\n    }\n\n    /**\n     * Type for the exclusion patterns. The property keys are the patterns, values are whether the exclusion is enabled or not.\n     */\n    export interface Exclusions {\n        [key: string]: boolean;\n    }\n\n}\n\n/**\n * Concrete filter navigator filter predicate that is decoupled from the preferences.\n */\nexport class FileNavigatorFilterPredicate implements FileNavigatorFilter.Predicate {\n\n    private readonly delegate: FileNavigatorFilter.Predicate;\n\n    constructor(exclusions: FileNavigatorFilter.Exclusions) {\n        const patterns = Object.keys(exclusions).map(pattern => ({ pattern, enabled: exclusions[pattern] })).filter(object => object.enabled).map(object => object.pattern);\n        this.delegate = FileNavigatorFilter.Predicate.and(...patterns.map(pattern => this.createDelegate(pattern)));\n    }\n\n    filter(item: { id: string }): boolean {\n        return this.delegate.filter(item);\n    }\n\n    protected createDelegate(pattern: string): FileNavigatorFilter.Predicate {\n        const delegate = new Minimatch(pattern, { matchBase: true });\n        return {\n            filter: item => !delegate.match(item.id)\n        };\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from 'inversify';\nimport { KeybindingContext, bindViewContribution, FrontendApplicationContribution } from '@theia/core/lib/browser';\nimport { FileNavigatorWidget, FILE_NAVIGATOR_ID } from './navigator-widget';\nimport { NavigatorActiveContext } from './navigator-keybinding-context';\nimport { FileNavigatorContribution } from './navigator-contribution';\nimport { createFileNavigatorWidget } from './navigator-container';\nimport { WidgetFactory } from '@theia/core/lib/browser/widget-manager';\nimport { bindFileNavigatorPreferences } from './navigator-preferences';\nimport { FileNavigatorFilter } from './navigator-filter';\nimport '../../src/browser/style/index.css';\n\nexport default new ContainerModule(bind => {\n    bindFileNavigatorPreferences(bind);\n    bind(FileNavigatorFilter).toSelf().inSingletonScope();\n\n    bindViewContribution(bind, FileNavigatorContribution);\n    bind(FrontendApplicationContribution).toService(FileNavigatorContribution);\n\n    bind(KeybindingContext).to(NavigatorActiveContext).inSingletonScope();\n\n    bind(FileNavigatorWidget).toDynamicValue(ctx =>\n        createFileNavigatorWidget(ctx.container)\n    );\n    bind(WidgetFactory).toDynamicValue(context => ({\n        id: FILE_NAVIGATOR_ID,\n        createWidget: () => context.container.get<FileNavigatorWidget>(FileNavigatorWidget)\n    }));\n});\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { KeybindingContext, ApplicationShell } from '@theia/core/lib/browser';\nimport { FileNavigatorWidget } from './navigator-widget';\n\nexport namespace NavigatorKeybindingContexts {\n    export const navigatorActive = 'navigatorActive';\n}\n\n@injectable()\nexport class NavigatorActiveContext implements KeybindingContext {\n\n    readonly id: string = NavigatorKeybindingContexts.navigatorActive;\n\n    @inject(ApplicationShell)\n    protected readonly applicationShell: ApplicationShell;\n\n    isEnabled(): boolean {\n        return this.applicationShell.activeWidget instanceof FileNavigatorWidget;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { FileNode, FileTreeModel } from '@theia/filesystem/lib/browser';\nimport { OpenerService, open, TreeNode, ExpandableTreeNode } from '@theia/core/lib/browser';\nimport { FileNavigatorTree, WorkspaceRootNode, WorkspaceNode } from './navigator-tree';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\n\n@injectable()\nexport class FileNavigatorModel extends FileTreeModel {\n\n    @inject(OpenerService) protected readonly openerService: OpenerService;\n    @inject(FileNavigatorTree) protected readonly tree: FileNavigatorTree;\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n\n    @postConstruct()\n    protected init(): void {\n        this.toDispose.push(\n            this.workspaceService.onWorkspaceChanged(event => {\n                this.updateRoot();\n            })\n        );\n        super.init();\n    }\n\n    previewNode(node: TreeNode): void {\n        if (FileNode.is(node)) {\n            open(this.openerService, node.uri, { mode: 'reveal', preview: true });\n        }\n    }\n\n    protected doOpenNode(node: TreeNode): void {\n        if (FileNode.is(node)) {\n            open(this.openerService, node.uri);\n        } else {\n            super.doOpenNode(node);\n        }\n    }\n\n    *getNodesByUri(uri: URI): IterableIterator<TreeNode> {\n        const workspace = this.root;\n        if (WorkspaceNode.is(workspace)) {\n            for (const root of workspace.children) {\n                const id = this.tree.createId(root, uri);\n                const node = this.getNode(id);\n                if (node) {\n                    yield node;\n                }\n            }\n        }\n    }\n\n    async updateRoot(): Promise<void> {\n        this.root = await this.createRoot();\n    }\n\n    protected async createRoot(): Promise<TreeNode | undefined> {\n        if (this.workspaceService.opened) {\n            const workspaceNode = WorkspaceNode.createRoot();\n            const roots = await this.workspaceService.roots;\n            for (const root of roots) {\n                workspaceNode.children.push(\n                    await this.tree.createWorkspaceRoot(root, workspaceNode)\n                );\n            }\n            return workspaceNode;\n        }\n    }\n\n    /**\n     * Move the given source file or directory to the given target directory.\n     */\n    async move(source: TreeNode, target: TreeNode) {\n        if (source.parent && WorkspaceRootNode.is(source)) {\n            // do not support moving a root folder\n            return;\n        }\n        await super.move(source, target);\n    }\n\n    /**\n     * Reveals node in the navigator by given file uri.\n     *\n     * @param uri uri to file which should be revealed in the navigator\n     * @returns file tree node if the file with given uri was revealed, undefined otherwise\n     */\n    async revealFile(uri: URI): Promise<TreeNode | undefined> {\n        if (!uri.path.isAbsolute) {\n            return undefined;\n        }\n        let node = await this.getNodeClosestToRootByUri(uri);\n\n        // success stop condition\n        // we have to reach workspace root because expanded node could be inside collapsed one\n        if (WorkspaceRootNode.is(node)) {\n            if (ExpandableTreeNode.is(node)) {\n                if (!node.expanded) {\n                    await this.expandNode(node);\n                }\n                return node;\n            }\n            // shouldn't happen, root node is always directory, i.e. expandable\n            return undefined;\n        }\n\n        // fail stop condition\n        if (uri.path.isRoot) {\n            // file system root is reached but workspace root wasn't found, it means that\n            // given uri is not in workspace root folder or points to not existing file.\n            return undefined;\n        }\n\n        if (await this.revealFile(uri.parent)) {\n            if (node === undefined) {\n                // get node if it wasn't mounted into navigator tree before expansion\n                node = await this.getNodeClosestToRootByUri(uri);\n            }\n            if (ExpandableTreeNode.is(node) && !node.expanded) {\n                await this.expandNode(node);\n            }\n            return node;\n        }\n        return undefined;\n    }\n\n    protected getNodeClosestToRootByUri(uri: URI): TreeNode | undefined {\n        const nodes = [...this.getNodesByUri(uri)];\n        return nodes.length > 0\n            ? nodes.reduce((node1, node2) => // return the node closest to the workspace root\n                node1.id.length >= node2.id.length ? node1 : node2\n            ) : undefined;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces } from 'inversify';\nimport { createPreferenceProxy, PreferenceProxy, PreferenceService, PreferenceContribution, PreferenceSchema } from '@theia/core/lib/browser';\n\n// tslint:disable:max-line-length\n\nexport const FileNavigatorConfigSchema: PreferenceSchema = {\n    'type': 'object',\n    properties: {\n        'navigator.autoReveal': {\n            type: 'boolean',\n            description: 'Selects file under editing in the navigator.',\n            default: true\n        },\n        'navigator.exclude': {\n            type: 'object',\n            description: `\nConfigure glob patterns for excluding files and folders from the navigator. A resource that matches any of the enabled patterns, will be filtered out from the navigator. For more details about the exclusion patterns, see: \\`man 5 gitignore\\`.`,\n            default: {\n                '**/.git': true\n            }\n        }\n    }\n};\n\nexport interface FileNavigatorConfiguration {\n    'navigator.autoReveal': boolean;\n    'navigator.exclude': { [key: string]: boolean };\n}\n\nexport const FileNavigatorPreferences = Symbol('NavigatorPreferences');\nexport type FileNavigatorPreferences = PreferenceProxy<FileNavigatorConfiguration>;\n\nexport function createNavigatorPreferences(preferences: PreferenceService): FileNavigatorPreferences {\n    return createPreferenceProxy(preferences, FileNavigatorConfigSchema);\n}\n\nexport function bindFileNavigatorPreferences(bind: interfaces.Bind): void {\n    bind(FileNavigatorPreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        return createNavigatorPreferences(preferences);\n    });\n    bind(PreferenceContribution).toConstantValue({ schema: FileNavigatorConfigSchema });\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { FileTree, DirNode } from '@theia/filesystem/lib/browser';\nimport { FileStat } from '@theia/filesystem/lib/common';\nimport URI from '@theia/core/lib/common/uri';\nimport { TreeNode, CompositeTreeNode, SelectableTreeNode } from '@theia/core/lib/browser';\nimport { FileNavigatorFilter } from './navigator-filter';\n\n@injectable()\nexport class FileNavigatorTree extends FileTree {\n\n    @inject(FileNavigatorFilter) protected readonly filter: FileNavigatorFilter;\n\n    @postConstruct()\n    protected init(): void {\n        this.toDispose.push(this.filter.onFilterChanged(() => this.refresh()));\n    }\n\n    async resolveChildren(parent: CompositeTreeNode): Promise<TreeNode[]> {\n        if (WorkspaceNode.is(parent)) {\n            return parent.children;\n        }\n        return this.filter.filter(super.resolveChildren(parent));\n    }\n\n    protected toNodeId(uri: URI, parent: CompositeTreeNode): string {\n        const workspaceRootNode = WorkspaceRootNode.find(parent);\n        if (workspaceRootNode) {\n            return this.createId(workspaceRootNode, uri);\n        }\n        return super.toNodeId(uri, parent);\n    }\n    createId(root: WorkspaceRootNode, uri: URI): string {\n        const id = super.toNodeId(uri, root);\n        return id === root.id ? id : `${root.id}:${id}`;\n    }\n\n    async createWorkspaceRoot(rootFolder: FileStat, workspaceNode: WorkspaceNode): Promise<WorkspaceRootNode> {\n        return (await this.toNode(rootFolder, workspaceNode)) as WorkspaceRootNode;\n    }\n}\n\nexport interface WorkspaceNode extends CompositeTreeNode, SelectableTreeNode {\n    children: WorkspaceRootNode[];\n}\nexport namespace WorkspaceNode {\n    export const id = 'WorkspaceNodeId';\n    export const name = 'WorkspaceNode';\n\n    export function is(node: TreeNode | undefined): node is WorkspaceNode {\n        return CompositeTreeNode.is(node) && node.name === WorkspaceNode.name;\n    }\n\n    export function createRoot(): WorkspaceNode {\n        return {\n            id: WorkspaceNode.id,\n            name: WorkspaceNode.name,\n            parent: undefined,\n            children: [],\n            visible: false,\n            selected: false\n        };\n    }\n}\n\nexport interface WorkspaceRootNode extends DirNode {\n    parent: WorkspaceNode;\n}\nexport namespace WorkspaceRootNode {\n    export function is(node: TreeNode | undefined): node is WorkspaceRootNode {\n        return DirNode.is(node) && WorkspaceNode.is(node.parent);\n    }\n\n    export function find(node: TreeNode | undefined): WorkspaceRootNode | undefined {\n        if (node) {\n            if (is(node)) {\n                return node;\n            }\n            return find(node.parent);\n        }\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, postConstruct } from 'inversify';\nimport { Message } from '@phosphor/messaging';\nimport URI from '@theia/core/lib/common/uri';\nimport { CommandService, SelectionService } from '@theia/core/lib/common';\nimport { CommonCommands, CorePreferences } from '@theia/core/lib/browser';\nimport {\n    ContextMenuRenderer, ExpandableTreeNode,\n    TreeProps, TreeModel, TreeNode,\n    SelectableTreeNode, CompositeTreeNode\n} from '@theia/core/lib/browser';\nimport { FileTreeWidget, FileNode } from '@theia/filesystem/lib/browser';\nimport { WorkspaceService, WorkspaceCommands } from '@theia/workspace/lib/browser';\nimport { ApplicationShell } from '@theia/core/lib/browser/shell/application-shell';\nimport { WorkspaceNode } from './navigator-tree';\nimport { FileNavigatorModel } from './navigator-model';\nimport { FileSystem } from '@theia/filesystem/lib/common/filesystem';\nimport { isOSX, environment } from '@theia/core';\nimport * as React from 'react';\n\nexport const FILE_NAVIGATOR_ID = 'files';\nexport const LABEL = 'Files';\nexport const CLASS = 'theia-Files';\n\n@injectable()\nexport class FileNavigatorWidget extends FileTreeWidget {\n\n    @inject(CorePreferences) protected readonly corePreferences: CorePreferences;\n\n    constructor(\n        @inject(TreeProps) readonly props: TreeProps,\n        @inject(FileNavigatorModel) readonly model: FileNavigatorModel,\n        @inject(ContextMenuRenderer) contextMenuRenderer: ContextMenuRenderer,\n        @inject(CommandService) protected readonly commandService: CommandService,\n        @inject(SelectionService) protected readonly selectionService: SelectionService,\n        @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService,\n        @inject(ApplicationShell) protected readonly shell: ApplicationShell,\n        @inject(FileSystem) protected readonly fileSystem: FileSystem\n    ) {\n        super(props, model, contextMenuRenderer);\n        this.id = FILE_NAVIGATOR_ID;\n        this.title.label = LABEL;\n        this.title.caption = LABEL;\n        this.title.iconClass = 'fa navigator-tab-icon';\n        this.addClass(CLASS);\n        this.initialize();\n    }\n\n    @postConstruct()\n    protected init(): void {\n        super.init();\n        this.toDispose.pushAll([\n            this.model.onSelectionChanged(selection => {\n                if (this.shell.activeWidget === this) {\n                    this.selectionService.selection = selection;\n                }\n            }),\n            this.model.onExpansionChanged(node => {\n                if (node.expanded && node.children.length === 1) {\n                    const child = node.children[0];\n                    if (ExpandableTreeNode.is(child) && !child.expanded) {\n                        this.model.expandNode(child);\n                    }\n                }\n            })\n        ]);\n    }\n\n    protected onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        this.selectionService.selection = this.model.selectedNodes;\n        const root = this.model.root;\n        if (CompositeTreeNode.is(root) && root.children.length === 1) {\n            const child = root.children[0];\n            if (SelectableTreeNode.is(child) && !child.selected && ExpandableTreeNode.is(child)) {\n                this.model.selectNode(child);\n                this.model.expandNode(child);\n            }\n        }\n    }\n\n    protected async initialize(): Promise<void> {\n        await this.model.updateRoot();\n    }\n\n    protected enableDndOnMainPanel(): void {\n        const mainPanelNode = this.shell.mainPanel.node;\n        this.addEventListener(mainPanelNode, 'drop', async ({ dataTransfer }) => {\n            const treeNode = dataTransfer && this.getTreeNodeFromData(dataTransfer) || undefined;\n\n            if (FileNode.is(treeNode)) {\n                this.commandService.executeCommand(CommonCommands.OPEN.id, treeNode.uri);\n            }\n        });\n        const handler = (e: DragEvent) => {\n            if (e.dataTransfer) {\n                e.dataTransfer.dropEffect = 'link';\n                e.preventDefault();\n            }\n        };\n        this.addEventListener(mainPanelNode, 'dragover', handler);\n        this.addEventListener(mainPanelNode, 'dragenter', handler);\n    }\n\n    protected getContainerTreeNode(): TreeNode | undefined {\n        const root = this.model.root;\n        if (this.workspaceService.isMultiRootWorkspaceOpened) {\n            return root;\n        }\n        if (WorkspaceNode.is(root)) {\n            return root.children[0];\n        }\n        return undefined;\n    }\n\n    protected deflateForStorage(node: TreeNode): object {\n        // tslint:disable-next-line:no-any\n        const copy = { ...node } as any;\n        if (copy.uri) {\n            copy.uri = copy.uri.toString();\n        }\n        return super.deflateForStorage(copy);\n    }\n\n    // tslint:disable-next-line:no-any\n    protected inflateFromStorage(node: any, parent?: TreeNode): TreeNode {\n        if (node.uri) {\n            node.uri = new URI(node.uri);\n        }\n        return super.inflateFromStorage(node, parent);\n    }\n\n    protected renderTree(model: TreeModel): React.ReactNode {\n        return super.renderTree(model) || this.renderOpenWorkspaceDiv();\n    }\n\n    protected onAfterAttach(msg: Message): void {\n        super.onAfterAttach(msg);\n        this.addClipboardListener(this.node, 'copy', e => this.handleCopy(e));\n        this.addClipboardListener(this.node, 'paste', e => this.handlePaste(e));\n        this.enableDndOnMainPanel();\n    }\n\n    protected handleCopy(event: ClipboardEvent): void {\n        const uris = this.model.selectedFileStatNodes.map(node => node.uri.toString());\n        if (uris.length > 0) {\n            event.clipboardData.setData('text/plain', uris.join('\\n'));\n            event.preventDefault();\n        }\n    }\n\n    protected handlePaste(event: ClipboardEvent): void {\n        const raw = event.clipboardData.getData('text/plain');\n        if (!raw) {\n            return;\n        }\n        const uri = new URI(raw);\n        if (this.model.copy(uri)) {\n            event.preventDefault();\n        }\n    }\n\n    protected canOpenWorkspaceFileAndFolder: boolean = isOSX || !environment.electron.is();\n\n    protected readonly openWorkspace = () => this.doOpenWorkspace();\n    protected doOpenWorkspace() {\n        this.commandService.executeCommand(WorkspaceCommands.OPEN_WORKSPACE.id);\n    }\n\n    protected readonly openFolder = () => this.doOpenFolder();\n    protected doOpenFolder() {\n        this.commandService.executeCommand(WorkspaceCommands.OPEN_FOLDER.id);\n    }\n\n    /**\n     * Instead of rendering the file resources from the workspace, we render a placeholder\n     * button when the workspace root is not yet set.\n     */\n    protected renderOpenWorkspaceDiv(): React.ReactNode {\n        let openButton;\n\n        if (this.canOpenWorkspaceFileAndFolder) {\n            openButton = <button className='open-workspace-button' title='Select a folder or a workspace-file to open as your workspace' onClick={this.openWorkspace}>\n                Open Workspace\n            </button>;\n        } else {\n            openButton = <button className='open-workspace-button' title='Select a folder as your workspace root' onClick={this.openFolder}>\n                Open Folder\n            </button>;\n        }\n\n        return <div className='theia-navigator-container'>\n            <div className='center'>You have not yet opened a workspace.</div>\n            <div className='open-workspace-button-container'>\n                {openButton}\n            </div>\n        </div>;\n    }\n\n    protected handleClickEvent(node: TreeNode | undefined, event: React.MouseEvent<HTMLElement>): void {\n        if (node && this.corePreferences['list.openMode'] === 'singleClick') {\n            this.model.previewNode(node);\n        }\n        super.handleClickEvent(node, event);\n    }\n\n}\n","\nvar content = require(\"!!../../../../../css-loader/index.js!./index.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../css-loader/index.js!./index.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../css-loader/index.js!./index.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './workspace-commands';\nexport * from './workspace-service';\nexport * from './workspace-frontend-contribution';\nexport * from './workspace-frontend-module';\nexport * from './workspace-preferences';\n","var concatMap = require('concat-map');\nvar balanced = require('balanced-match');\n\nmodule.exports = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction identity(e) {\n  return e;\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = m.body.indexOf(',') >= 0;\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*\\}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length)\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\n","'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n","module.exports = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2017 TypeFox and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n.theia-navigator-container {\\n    font-size: var(--theia-ui-font-size1);\\n    color: var(--theia-ui-font-color1);\\n    padding: 5px;\\n    position: relative;\\n}\\n\\n.theia-navigator-container .open-workspace-button-container {\\n    margin: auto;\\n    margin-top: 5px;\\n}\\n\\n.theia-navigator-container .center {\\n    text-align: center;\\n}\\n\\n.p-Widget .open-workspace-button {\\n    border: 1px solid var(--theia-border-color1);\\n    color: var(--theia-ui-font-color1);\\n    font-size: var(--theia-ui-font-size1);\\n    border-radius: 0;\\n    background-color: var(--theia-accent-color3);\\n    outline: none;\\n    cursor: pointer;\\n    padding-left: 12px;\\n    padding-right: 12px;\\n    padding-top: 4px;\\n    padding-bottom: 4px;\\n    width: calc(100% - var(--theia-ui-padding)*4);\\n}\\n\\n.navigator-tab-icon::before {\\n    content: \\\"\\\\F0C5\\\"\\n}\\n\", \"\"]);\n\n// exports\n","module.exports = minimatch\nminimatch.Minimatch = Minimatch\n\nvar path = { sep: '/' }\ntry {\n  path = require('path')\n} catch (er) {}\n\nvar GLOBSTAR = minimatch.GLOBSTAR = Minimatch.GLOBSTAR = {}\nvar expand = require('brace-expansion')\n\nvar plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n}\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]'\n\n// * => any number of characters\nvar star = qmark + '*?'\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?'\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?'\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!')\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/\n\nminimatch.filter = filter\nfunction filter (pattern, options) {\n  options = options || {}\n  return function (p, i, list) {\n    return minimatch(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  a = a || {}\n  b = b || {}\n  var t = {}\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k]\n  })\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k]\n  })\n  return t\n}\n\nminimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return minimatch\n\n  var orig = minimatch\n\n  var m = function minimatch (p, pattern, options) {\n    return orig.minimatch(p, pattern, ext(def, options))\n  }\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  }\n\n  return m\n}\n\nMinimatch.defaults = function (def) {\n  if (!def || !Object.keys(def).length) return Minimatch\n  return minimatch.defaults(def).Minimatch\n}\n\nfunction minimatch (p, pattern, options) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  // \"\" only matches \"\"\n  if (pattern.trim() === '') return p === ''\n\n  return new Minimatch(pattern, options).match(p)\n}\n\nfunction Minimatch (pattern, options) {\n  if (!(this instanceof Minimatch)) {\n    return new Minimatch(pattern, options)\n  }\n\n  if (typeof pattern !== 'string') {\n    throw new TypeError('glob pattern string required')\n  }\n\n  if (!options) options = {}\n  pattern = pattern.trim()\n\n  // windows support: need to use /, not \\\n  if (path.sep !== '/') {\n    pattern = pattern.split(path.sep).join('/')\n  }\n\n  this.options = options\n  this.set = []\n  this.pattern = pattern\n  this.regexp = null\n  this.negate = false\n  this.comment = false\n  this.empty = false\n\n  // make the set of regexps etc.\n  this.make()\n}\n\nMinimatch.prototype.debug = function () {}\n\nMinimatch.prototype.make = make\nfunction make () {\n  // don't do it more than once.\n  if (this._made) return\n\n  var pattern = this.pattern\n  var options = this.options\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true\n    return\n  }\n  if (!pattern) {\n    this.empty = true\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate()\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand()\n\n  if (options.debug) this.debug = console.error\n\n  this.debug(this.pattern, set)\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  })\n\n  this.debug(this.pattern, set)\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this)\n\n  this.debug(this.pattern, set)\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  })\n\n  this.debug(this.pattern, set)\n\n  this.set = set\n}\n\nMinimatch.prototype.parseNegate = parseNegate\nfunction parseNegate () {\n  var pattern = this.pattern\n  var negate = false\n  var options = this.options\n  var negateOffset = 0\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate\n    negateOffset++\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset)\n  this.negate = negate\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n}\n\nMinimatch.prototype.braceExpand = braceExpand\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch) {\n      options = this.options\n    } else {\n      options = {}\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern\n\n  if (typeof pattern === 'undefined') {\n    throw new TypeError('undefined pattern')\n  }\n\n  if (options.nobrace ||\n    !pattern.match(/\\{.*\\}/)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand(pattern)\n}\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch.prototype.parse = parse\nvar SUBPARSE = {}\nfunction parse (pattern, isSub) {\n  if (pattern.length > 1024 * 64) {\n    throw new TypeError('pattern is too long')\n  }\n\n  var options = this.options\n\n  // shortcuts\n  if (!options.noglobstar && pattern === '**') return GLOBSTAR\n  if (pattern === '') return ''\n\n  var re = ''\n  var hasMagic = !!options.nocase\n  var escaping = false\n  // ? => one single character\n  var patternListStack = []\n  var negativeLists = []\n  var stateChar\n  var inClass = false\n  var reClassStart = -1\n  var classStart = -1\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)'\n  var self = this\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star\n          hasMagic = true\n        break\n        case '?':\n          re += qmark\n          hasMagic = true\n        break\n        default:\n          re += '\\\\' + stateChar\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re)\n      stateChar = false\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c)\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c\n      escaping = false\n      continue\n    }\n\n    switch (c) {\n      case '/':\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n\n      case '\\\\':\n        clearStateChar()\n        escaping = true\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c)\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class')\n          if (c === '!' && i === classStart + 1) c = '^'\n          re += c\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar)\n        clearStateChar()\n        stateChar = c\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar()\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '('\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\('\n          continue\n        }\n\n        patternListStack.push({\n          type: stateChar,\n          start: i - 1,\n          reStart: re.length,\n          open: plTypes[stateChar].open,\n          close: plTypes[stateChar].close\n        })\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:'\n        this.debug('plType %j %j', stateChar, re)\n        stateChar = false\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)'\n          continue\n        }\n\n        clearStateChar()\n        hasMagic = true\n        var pl = patternListStack.pop()\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        re += pl.close\n        if (pl.type === '!') {\n          negativeLists.push(pl)\n        }\n        pl.reEnd = re.length\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|'\n          escaping = false\n          continue\n        }\n\n        clearStateChar()\n        re += '|'\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar()\n\n        if (inClass) {\n          re += '\\\\' + c\n          continue\n        }\n\n        inClass = true\n        classStart = i\n        reClassStart = re.length\n        re += c\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c\n          escaping = false\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        if (inClass) {\n          // split where the last [ was, make sure we don't have\n          // an invalid re. if so, re-walk the contents of the\n          // would-be class to re-translate any characters that\n          // were passed through as-is\n          // TODO: It would probably be faster to determine this\n          // without a try/catch and a new RegExp, but it's tricky\n          // to do safely.  For now, this is safe and works.\n          var cs = pattern.substring(classStart + 1, i)\n          try {\n            RegExp('[' + cs + ']')\n          } catch (er) {\n            // not a valid class!\n            var sp = this.parse(cs, SUBPARSE)\n            re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]'\n            hasMagic = hasMagic || sp[1]\n            inClass = false\n            continue\n          }\n        }\n\n        // finish up the class.\n        hasMagic = true\n        inClass = false\n        re += c\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar()\n\n        if (escaping) {\n          // no need\n          escaping = false\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\'\n        }\n\n        re += c\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1)\n    sp = this.parse(cs, SUBPARSE)\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0]\n    hasMagic = hasMagic || sp[1]\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + pl.open.length)\n    this.debug('setting tail', re, pl)\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\'\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    })\n\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re)\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type\n\n    hasMagic = true\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar()\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\'\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false\n  switch (re.charAt(0)) {\n    case '.':\n    case '[':\n    case '(': addPatternStart = true\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n]\n\n    var nlBefore = re.slice(0, nl.reStart)\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8)\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd)\n    var nlAfter = re.slice(nl.reEnd)\n\n    nlLast += nlAfter\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1\n    var cleanAfter = nlAfter\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '')\n    }\n    nlAfter = cleanAfter\n\n    var dollar = ''\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$'\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast\n    re = newRe\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : ''\n  try {\n    var regExp = new RegExp('^' + re + '$', flags)\n  } catch (er) {\n    // If it was an invalid regular expression, then it can't match\n    // anything.  This trick looks for a character after the end of\n    // the string, which is of course impossible, except in multi-line\n    // mode, but it's not a /m regex.\n    return new RegExp('$.')\n  }\n\n  regExp._glob = pattern\n  regExp._src = re\n\n  return regExp\n}\n\nminimatch.makeRe = function (pattern, options) {\n  return new Minimatch(pattern, options || {}).makeRe()\n}\n\nMinimatch.prototype.makeRe = makeRe\nfunction makeRe () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set\n\n  if (!set.length) {\n    this.regexp = false\n    return this.regexp\n  }\n  var options = this.options\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot\n  var flags = options.nocase ? 'i' : ''\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|')\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$'\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$'\n\n  try {\n    this.regexp = new RegExp(re, flags)\n  } catch (ex) {\n    this.regexp = false\n  }\n  return this.regexp\n}\n\nminimatch.match = function (list, pattern, options) {\n  options = options || {}\n  var mm = new Minimatch(pattern, options)\n  list = list.filter(function (f) {\n    return mm.match(f)\n  })\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern)\n  }\n  return list\n}\n\nMinimatch.prototype.match = match\nfunction match (f, partial) {\n  this.debug('match', f, this.pattern)\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options\n\n  // windows: need to use /, not \\\n  if (path.sep !== '/') {\n    f = f.split(path.sep).join('/')\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit)\n  this.debug(this.pattern, 'split', f)\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set\n  this.debug(this.pattern, 'set', set)\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename\n  var i\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i]\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i]\n    var file = f\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename]\n    }\n    var hit = this.matchOne(file, pattern, partial)\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n}\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern })\n\n  this.debug('matchOne', file.length, pattern.length)\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop')\n    var p = pattern[pi]\n    var f = file[fi]\n\n    this.debug(pattern, p, f)\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    if (p === false) return false\n\n    if (p === GLOBSTAR) {\n      this.debug('GLOBSTAR', [pattern, p, f])\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi\n      var pr = pi + 1\n      if (pr === pl) {\n        this.debug('** at the end')\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr]\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee)\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee)\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr)\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue')\n          fr++\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr)\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit\n    if (typeof p === 'string') {\n      if (options.nocase) {\n        hit = f.toLowerCase() === p.toLowerCase()\n      } else {\n        hit = f === p\n      }\n      this.debug('string match', p, f, hit)\n    } else {\n      hit = f.match(p)\n      this.debug('pattern match', p, f, hit)\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    var emptyFileEnd = (fi === fl - 1) && (file[fi] === '')\n    return emptyFileEnd\n  }\n\n  // should be unreachable.\n  throw new Error('wtf?')\n}\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n"],"sourceRoot":""}