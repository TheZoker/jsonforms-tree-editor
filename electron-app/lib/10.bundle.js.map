{"version":3,"sources":["webpack:///../node_modules/@theia/filesystem/src/browser/download/file-download-service.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;;;;;;;;;;;kFAckF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElF,qGAA+C;AAE/C,4HAAwD;AACxD,oIAA4D;AAC5D,gJAAmF;AACnF,oIAAqD;AAIrD;IADA;QAMc,kBAAa,GAAa,EAAE,CAAC;QAC7B,oBAAe,GAAW,CAAC,CAAC;IAkI1C,CAAC;4BAxIY,mBAAmB;IAiBtB,sCAAQ,GAAd,UAAe,IAAW;;;;;;wBACtB,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;4BACnB,sBAAO;yBACV;;;;wBAGG,UAAU,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;6BAChC,KAAI,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,GAA/B,wBAA+B;wBAC/B,qBAAM,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,qBAAmB,CAAC,qBAAqB,EAAE;gCACvE,SAAS,EAAE,+BAAkB,CAAC,KAAK;gCACnC,IAAI,EAAE,uCAAuC;gCAC7C,OAAO,EAAE,uBAAuB;gCAChC,QAAQ,EAAE,CAAC;6BACd,CAAC;;wBALF,SAKE,CAAC;;;wBAEP,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;wBACnB,qBAAM,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;;wBAA1C,QAAQ,GAAG,SAA+B;wBAChD,qBAAM,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,qBAAmB,CAAC,qBAAqB,CAAC;;wBAA7E,SAA6E,CAAC;wBAChE,qBAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,IAAI,CAAC;;wBAAxC,KAAK,GAAG,SAAgC;wBACtC,WAAuB,QAAQ,OAAzB,EAAE,UAAU,GAAK,QAAQ,WAAb,CAAc;6BACpC,SAAM,KAAK,GAAG,GAAd,wBAAc;wBACd,qBAAM,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,KAAK,CAAC;;wBAAzC,SAAyC,CAAC;;4BAE1C,MAAM,IAAI,KAAK,CAAC,sCAAoC,QAAM,WAAM,UAAU,MAAG,CAAC,CAAC;;;;wBAGnF,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,sCAAoC,IAAI,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAhB,CAAgB,CAAC,MAAG,EAAE,GAAC,CAAC,CAAC;;;wBAE7F,IAAI,UAAU,KAAK,SAAS,EAAE;4BACpB,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;4BACvD,IAAI,OAAO,KAAK,CAAC,CAAC,EAAE;gCAChB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;6BACzC;4BACD,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,KAAK,CAAC,EAAE;gCACjC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,qBAAmB,CAAC,qBAAqB,CAAC,CAAC;6BAC3E;yBACJ;;;;;;KAER;IAEe,2CAAa,GAA7B,UAA8B,QAAkB,EAAE,KAAa;;;;;;;wBAG1C,qBAAM,QAAQ,CAAC,IAAI,EAAE;;wBAA5B,IAAI,GAAG,SAAqB;wBAClC,GAAG,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;wBAChC,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE;4BAC3B,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;4BAC1C,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;yBACtC;wBACD,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC;wBACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;wBAC7B,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;;;wBAEpB,IAAI,GAAG,EAAE;4BACL,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;yBAC5B;;;;;;KAER;IAEe,mCAAK,GAArB,UAAsB,QAAkB,EAAE,IAAW;;;;;;wBAC7C,KAAK,GAAG,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,uBAAuB,CAAC,CAAC,GAAG,EAAE,CAAC;wBACrG,IAAI,KAAK,EAAE;4BACP,sBAAO,KAAK,EAAC;yBAChB;wBAEK,YAAS,IAAI,MAAZ,GAAG,SAAU;6BAChB,KAAI,CAAC,MAAM,KAAK,CAAC,GAAjB,wBAAiB;wBACJ,qBAAM,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;;wBAAxD,IAAI,GAAG,SAAiD;wBAC9D,IAAI,IAAI,KAAK,SAAS,EAAE;4BACpB,MAAM,IAAI,KAAK,CAAC,iFAA+E,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAG,CAAC,CAAC;yBACzH;wBACD,KAAK,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC;wBACtB,sBAAO,IAAI,CAAC,WAAW,CAAC,CAAC,CAAI,KAAK,SAAM,CAAC,CAAC,CAAC,KAAK,EAAC;4BAErD,sBAAU,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,SAAM,EAAC;;;;KACxC;IAES,qCAAO,GAAjB,UAAkB,IAAW;QACzB,IAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACpC,OAAO,IAAI,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IAClC,CAAC;IAES,yCAAW,GAArB,UAAsB,IAAW;QAC7B,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YACnB,OAAO;gBACH,IAAI,EAAE,SAAS;gBACf,MAAM,EAAE,KAAK;aAChB,CAAC;SACL;QACD,OAAO;YACH,MAAM,EAAE,KAAK;YACb,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACrC,OAAO,EAAE,IAAI,OAAO,CAAC,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC;SAC/D,CAAC;IACN,CAAC;IAES,kCAAI,GAAd,UAAe,IAAW;QACtB,OAAO;YACH,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAhB,CAAgB,CAAC;SACxC,CAAC;IACN,CAAC;IAES,iCAAG,GAAb,UAAc,IAAW;QACrB,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;QACjC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;YACnB,sCAAsC;YAChC,wBAAa,EAAZ,WAAY,CAAC;YACpB,OAAU,QAAQ,cAAS,GAAG,CAAC,QAAQ,EAAI,CAAC;SAC/C;QACD,OAAO,QAAQ,CAAC;IAEpB,CAAC;IAES,sCAAQ,GAAlB;QACI,IAAM,GAAG,GAAG,IAAI,mBAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC,UAAU,EAAE,CAAC,QAAQ,EAAE,CAAC;QACpE,OAAO,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;IACtD,CAAC;;IApIgB,yCAAqB,GAAG,0BAA0B,CAAC;IAOpE;QADC,kBAAM,CAAC,gBAAO,CAAC;;uDACmB;IAGnC;QADC,kBAAM,CAAC,uBAAU,CAAC;;2DACuB;IAG1C;QADC,kBAAM,CAAC,sBAAS,CAAC;;0DACsB;IAf/B,mBAAmB;QAD/B,sBAAU,EAAE;OACA,mBAAmB,CAwI/B;IAAD,0BAAC;CAAA;AAxIY,kDAAmB","file":"10.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { ILogger } from '@theia/core/lib/common/logger';\nimport { Endpoint } from '@theia/core/lib/browser/endpoint';\nimport { StatusBar, StatusBarAlignment } from '@theia/core/lib/browser/status-bar';\nimport { FileSystem } from '../../common/filesystem';\nimport { FileDownloadData } from '../../common/download/file-download-data';\n\n@injectable()\nexport class FileDownloadService {\n\n    protected static PREPARING_DOWNLOAD_ID = 'theia-preparing-download';\n\n    protected anchor: HTMLAnchorElement | undefined;\n    protected downloadQueue: number[] = [];\n    protected downloadCounter: number = 0;\n\n    @inject(ILogger)\n    protected readonly logger: ILogger;\n\n    @inject(FileSystem)\n    protected readonly fileSystem: FileSystem;\n\n    @inject(StatusBar)\n    protected readonly statusBar: StatusBar;\n\n    async download(uris: URI[]): Promise<void> {\n        if (uris.length === 0) {\n            return;\n        }\n        let downloadId: number | undefined;\n        try {\n            downloadId = this.downloadCounter++;\n            if (this.downloadQueue.length === 0) {\n                await this.statusBar.setElement(FileDownloadService.PREPARING_DOWNLOAD_ID, {\n                    alignment: StatusBarAlignment.RIGHT,\n                    text: '$(spinner~spin) Preparing download...',\n                    tooltip: 'Preparing download...',\n                    priority: 1\n                });\n            }\n            this.downloadQueue.push(downloadId);\n            const response = await fetch(this.request(uris));\n            await this.statusBar.removeElement(FileDownloadService.PREPARING_DOWNLOAD_ID);\n            const title = await this.title(response, uris);\n            const { status, statusText } = response;\n            if (status === 200) {\n                await this.forceDownload(response, title);\n            } else {\n                throw new Error(`Received unexpected status code: ${status}. [${statusText}]`);\n            }\n        } catch (e) {\n            this.logger.error(`Error occurred when downloading: ${uris.map(u => u.toString(true))}.`, e);\n        } finally {\n            if (downloadId !== undefined) {\n                const indexOf = this.downloadQueue.indexOf(downloadId);\n                if (indexOf !== -1) {\n                    this.downloadQueue.splice(indexOf, 1);\n                }\n                if (this.downloadQueue.length === 0) {\n                    this.statusBar.removeElement(FileDownloadService.PREPARING_DOWNLOAD_ID);\n                }\n            }\n        }\n    }\n\n    protected async forceDownload(response: Response, title: string): Promise<void> {\n        let url: string | undefined;\n        try {\n            const blob = await response.blob();\n            url = URL.createObjectURL(blob);\n            if (this.anchor === undefined) {\n                this.anchor = document.createElement('a');\n                this.anchor.style.display = 'none';\n            }\n            this.anchor.href = url;\n            this.anchor.download = title;\n            this.anchor.click();\n        } finally {\n            if (url) {\n                URL.revokeObjectURL(url);\n            }\n        }\n    }\n\n    protected async title(response: Response, uris: URI[]): Promise<string> {\n        let title = (response.headers.get('Content-Disposition') || '').split('attachment; filename=').pop();\n        if (title) {\n            return title;\n        }\n        // tslint:disable-next-line:whitespace\n        const [uri,] = uris;\n        if (uris.length === 1) {\n            const stat = await this.fileSystem.getFileStat(uri.toString());\n            if (stat === undefined) {\n                throw new Error(`Unexpected error occurred when downloading file. Files does not exist. URI: ${uri.toString(true)}.`);\n            }\n            title = uri.path.base;\n            return stat.isDirectory ? `${title}.tar` : title;\n        }\n        return `${uri.parent.path.name}.tar`;\n    }\n\n    protected request(uris: URI[]): Request {\n        const url = this.url(uris);\n        const init = this.requestInit(uris);\n        return new Request(url, init);\n    }\n\n    protected requestInit(uris: URI[]): RequestInit {\n        if (uris.length === 1) {\n            return {\n                body: undefined,\n                method: 'GET'\n            };\n        }\n        return {\n            method: 'PUT',\n            body: JSON.stringify(this.body(uris)),\n            headers: new Headers({ 'Content-Type': 'application/json' }),\n        };\n    }\n\n    protected body(uris: URI[]): FileDownloadData {\n        return {\n            uris: uris.map(u => u.toString(true))\n        };\n    }\n\n    protected url(uris: URI[]): string {\n        const endpoint = this.endpoint();\n        if (uris.length === 1) {\n            // tslint:disable-next-line:whitespace\n            const [uri,] = uris;\n            return `${endpoint}/?uri=${uri.toString()}`;\n        }\n        return endpoint;\n\n    }\n\n    protected endpoint(): string {\n        const url = new Endpoint({ path: 'files' }).getRestUrl().toString();\n        return url.endsWith('/') ? url.slice(0, -1) : url;\n    }\n\n}\n"],"sourceRoot":""}