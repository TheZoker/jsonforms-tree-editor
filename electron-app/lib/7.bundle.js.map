{"version":3,"sources":["webpack:///../node_modules/@theia/languages/src/browser/language-client-contribution.ts","webpack:///../node_modules/@theia/languages/src/browser/language-client-factory.ts","webpack:///../node_modules/@theia/languages/src/browser/language-client-provider-impl.ts","webpack:///../node_modules/@theia/languages/src/browser/language-client-provider.ts","webpack:///../node_modules/@theia/languages/src/browser/language-client-services.ts","webpack:///../node_modules/@theia/languages/src/browser/languages-frontend-contribution.ts","webpack:///../node_modules/@theia/languages/src/browser/languages-frontend-module.ts","webpack:///../node_modules/@theia/languages/src/browser/window-impl.ts","webpack:///../node_modules/@theia/languages/src/browser/workspace-symbols.ts","webpack:///../node_modules/@theia/languages/src/common/index.ts","webpack:///../node_modules/@theia/languages/src/common/language-contribution.ts","webpack:///../node_modules/@theia/workspace/src/browser/index.ts","webpack:///../node_modules/glob-to-regexp/index.js","webpack:///../node_modules/monaco-languageclient/src/connection.ts","webpack:///../node_modules/monaco-languageclient/src/console-window.ts","webpack:///../node_modules/monaco-languageclient/src/disposable.ts","webpack:///../node_modules/monaco-languageclient/src/index.ts","webpack:///../node_modules/monaco-languageclient/src/monaco-commands.ts","webpack:///../node_modules/monaco-languageclient/src/monaco-converter.ts","webpack:///../node_modules/monaco-languageclient/src/monaco-diagnostic-collection.ts","webpack:///../node_modules/monaco-languageclient/src/monaco-language-client.ts","webpack:///../node_modules/monaco-languageclient/src/monaco-languages.ts","webpack:///../node_modules/monaco-languageclient/src/monaco-services.ts","webpack:///../node_modules/monaco-languageclient/src/monaco-workspace.ts","webpack:///../node_modules/monaco-languageclient/src/services.ts","webpack:///../node_modules/monaco-languageclient/src/vscode-api.ts","webpack:///../node_modules/monaco-languageclient/src/vscode-compatibility.ts","webpack:///../node_modules/vscode-base-languageclient/lib/client.js","webpack:///../node_modules/vscode-base-languageclient/lib/codeConverter.js","webpack:///../node_modules/vscode-base-languageclient/lib/colorProvider.js","webpack:///../node_modules/vscode-base-languageclient/lib/foldingRange.js","webpack:///../node_modules/vscode-base-languageclient/lib/implementation.js","webpack:///../node_modules/vscode-base-languageclient/lib/protocolCodeLens.js","webpack:///../node_modules/vscode-base-languageclient/lib/protocolCompletionItem.js","webpack:///../node_modules/vscode-base-languageclient/lib/protocolConverter.js","webpack:///../node_modules/vscode-base-languageclient/lib/protocolDocumentLink.js","webpack:///../node_modules/vscode-base-languageclient/lib/typeDefinition.js","webpack:///../node_modules/vscode-base-languageclient/lib/utils/async.js","webpack:///../node_modules/vscode-base-languageclient/lib/utils/is.js","webpack:///../node_modules/vscode-base-languageclient/lib/utils/uuid.js","webpack:///../node_modules/vscode-base-languageclient/lib/workspaceFolders.js","webpack:///../node_modules/vscode-languageserver-protocol/lib/main.js","webpack:///../node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","webpack:///../node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js","webpack:///../node_modules/vscode-languageserver-protocol/lib/protocol.declaration.js","webpack:///../node_modules/vscode-languageserver-protocol/lib/protocol.foldingRange.js","webpack:///../node_modules/vscode-languageserver-protocol/lib/protocol.implementation.js","webpack:///../node_modules/vscode-languageserver-protocol/lib/protocol.js","webpack:///../node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js","webpack:///../node_modules/vscode-languageserver-protocol/lib/protocol.workspaceFolders.js","webpack:///../node_modules/vscode-languageserver-protocol/lib/utils/is.js","webpack:///../node_modules/vscode-languageserver-protocol/node_modules/vscode-jsonrpc/lib/cancellation.js","webpack:///../node_modules/vscode-languageserver-protocol/node_modules/vscode-jsonrpc/lib/events.js","webpack:///../node_modules/vscode-languageserver-protocol/node_modules/vscode-jsonrpc/lib/is.js","webpack:///../node_modules/vscode-languageserver-protocol/node_modules/vscode-jsonrpc/lib/linkedMap.js","webpack:///../node_modules/vscode-languageserver-protocol/node_modules/vscode-jsonrpc/lib/main.js","webpack:///../node_modules/vscode-languageserver-protocol/node_modules/vscode-jsonrpc/lib/messageReader.js","webpack:///../node_modules/vscode-languageserver-protocol/node_modules/vscode-jsonrpc/lib/messageWriter.js","webpack:///../node_modules/vscode-languageserver-protocol/node_modules/vscode-jsonrpc/lib/messages.js","webpack:///../node_modules/vscode-languageserver-protocol/node_modules/vscode-jsonrpc/lib/pipeSupport.js","webpack:///../node_modules/vscode-languageserver-protocol/node_modules/vscode-jsonrpc/lib/socketSupport.js"],"names":[],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;AAC/F;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kCAAkC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2FAA2F,qBAAqB;AAChH;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,+EAA+E,EAAE;AACzI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,iOAAiO,6EAA6E,EAAE;AAChT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,4CAA4C,qCAAqC,EAAE;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,oOAAoO,8EAA8E,EAAE;AACpT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,4CAA4C,qCAAqC,EAAE;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,GAAG,qCAAqC,GAAG,2CAA2C;AACvI,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,0HAA0H,EAAE;AAC7L;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E,UAAU;AACxF;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,gOAAgO,kFAAkF,EAAE,uCAAuC,oFAAoF,EAAE;AACjb;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,aAAa;AACb;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,iOAAiO,iGAAiG,EAAE;AACpU;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,GAAG,qCAAqC,GAAG,0DAA0D;AACtJ,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,UAAU;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+HAA+H,8BAA8B;AAC7J;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA,aAAa,EAAE,EAAE;AACjB;AACA;AACA,+DAA+D;AAC/D;AACA;AACA,aAAa,EAAE,EAAE;AACjB;AACA;AACA,+DAA+D;AAC/D;AACA;AACA,aAAa,EAAE,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2GAA2G,wBAAwB;AACnI;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,gBAAgB;AACnD;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2GAA2G,wBAAwB;AACnI;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,gBAAgB;AACnD;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,GAAG,qCAAqC;AACrF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,GAAG,qCAAqC;AACrF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,GAAG,qCAAqC;AACrF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,GAAG,qCAAqC;AACrF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,GAAG,qCAAqC;AACrF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,GAAG,qCAAqC;AACrF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,GAAG,qCAAqC;AACrF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,qGAAqG,eAAe;AACpH;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,GAAG,qCAAqC;AACrF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,kBAAkB;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,QAAQ,gBAAgB;AACvD;AACA;AACA;AACA;AACA,6BAA6B,0BAA0B;AACvD;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,GAAG,qCAAqC;AACrF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,GAAG,qCAAqC;AACrF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,GAAG,qCAAqC;AACrF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,GAAG,qCAAqC;AACrF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,GAAG,qCAAqC;AACrF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,GAAG,qCAAqC;AACrF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,UAAU;AACvF;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,4CAA4C,EAAE;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,0HAA0H,iBAAiB;AAC3I;AACA;AACA,sHAAsH,uDAAuD;AAC7K;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,uBAAuB;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,sFAAsF,UAAU;AAChG;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,gBAAgB;AACnD;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,6BAA6B,EAAE;AACvF;AACA;AACA;AACA;AACA,iDAAiD,6BAA6B,EAAE;AAChF,SAAS;AACT;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,+CAA+C,yCAAyC;AACxF;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,aAAa;AACb,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,wBAAwB,oDAAoD;AAC9H,wDAAwD,wCAAwC,EAAE;AAClG,+GAA+G,gDAAgD,EAAE;AACjK;AACA,8EAA8E,gDAAgD,EAAE;AAChI,iHAAiH,kDAAkD,EAAE;AACrK;AACA,gFAAgF,kDAAkD,EAAE;AACpI,qHAAqH,+CAA+C,EAAE;AACtK,yGAAyG;AACzG;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,8BAA8B;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,iCAAiC,gBAAgB;AACjD,qCAAqC,oBAAoB;AACzD;AACA,yDAAyD,2BAA2B,EAAE;AACtF;AACA;AACA;AACA,yDAAyD,2BAA2B,EAAE;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,mFAAmF,UAAU;AAC7F;AACA;AACA;AACA;AACA,wBAAwB,SAAS,iBAAiB;AAClD;AACA;AACA;AACA;AACA,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,6BAA6B;AACvF;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,+CAA+C,EAAE;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,0CAA0C,0BAA0B;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,oBAAoB;AAC3G;AACA;AACA;AACA;AACA,wBAAwB,SAAS,iBAAiB;AAClD;AACA;AACA;AACA;AACA,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+FAA+F,oBAAoB;AACnH;AACA;AACA;AACA;AACA;AACA,gCAAgC,SAAS,iBAAiB;AAC1D;AACA;AACA;AACA;AACA,6BAA6B,4BAA4B;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,qCAAqC,EAAE;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,UAAU;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,SAAS,iBAAiB;AAClD;AACA;AACA;AACA;AACA,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,UAAU;AAC7E;AACA;AACA;AACA;AACA,wBAAwB,SAAS,iBAAiB;AAClD;AACA;AACA;AACA;AACA,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,UAAU;AAC7E;AACA;AACA;AACA;AACA,wBAAwB,SAAS,iBAAiB;AAClD;AACA;AACA;AACA;AACA,qBAAqB,4BAA4B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,UAAU;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,SAAS,iBAAiB;AACtD;AACA;AACA;AACA;AACA,yBAAyB,4BAA4B;AACrD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF,UAAU;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,SAAS,iBAAiB;AACtD;AACA;AACA;AACA;AACA,yBAAyB,4BAA4B;AACrD;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sEAAsE,iEAAiE,EAAE;AACzI;AACA;AACA;AACA,sFAAsF,UAAU;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,SAAS,iBAAiB;AACtD;AACA;AACA;AACA;AACA,yBAAyB,4BAA4B;AACrD;AACA;AACA;AACA,oCAAoC,iBAAiB;AACrD;AACA,2GAA2G,SAAS,kBAAkB,EAAE;AACxI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACnmFA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,iFAAQ;AAC3B,YAAY,mBAAO,CAAC,kGAAgC;AACpD,SAAS,mBAAO,CAAC,8EAAY;AAC7B,+BAA+B,mBAAO,CAAC,0GAA0B;AACjE,yBAAyB,mBAAO,CAAC,8FAAoB;AACrD,6BAA6B,mBAAO,CAAC,sGAAwB;AAC7D;AACA,0CAA0C,yBAAyB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,kCAAkC,sBAAsB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,oCAAoC,2DAA2D;AAC/F,kCAAkC;AAClC,yBAAyB;AACzB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,wBAAwB;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9XA;AACA;AACA;AACA;AACa;AACb;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,kFAAc;AACjC,SAAS,mBAAO,CAAC,8EAAY;AAC7B,eAAe,mBAAO,CAAC,iFAAQ;AAC/B,uCAAuC,mBAAO,CAAC,kGAAgC;AAC/E,eAAe,mBAAO,CAAC,0EAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,GAAG,6BAA6B;AACjF,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AChHA;AACA;AACA;AACA;AACa;AACb;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,kFAAc;AACjC,SAAS,mBAAO,CAAC,8EAAY;AAC7B,eAAe,mBAAO,CAAC,iFAAQ;AAC/B,uCAAuC,mBAAO,CAAC,kGAAgC;AAC/E,eAAe,mBAAO,CAAC,0EAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,GAAG,6BAA6B;AACjF,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACjGA;AACA;AACA;AACA;AACa;AACb;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,kFAAc;AACjC,SAAS,mBAAO,CAAC,8EAAY;AAC7B,eAAe,mBAAO,CAAC,iFAAQ;AAC/B,uCAAuC,mBAAO,CAAC,kGAAgC;AAC/E,eAAe,mBAAO,CAAC,0EAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,GAAG,qCAAqC;AACzF,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,GAAG,6BAA6B;AACrF,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC/EA;AACA;AACA;AACA;AACa;AACb;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,iFAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACa;AACb;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,iFAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,iFAAQ;AAC3B,SAAS,mBAAO,CAAC,kGAAgC;AACjD,SAAS,mBAAO,CAAC,8EAAY;AAC7B,+BAA+B,mBAAO,CAAC,0GAA0B;AACjE,yBAAyB,mBAAO,CAAC,8FAAoB;AACrD,6BAA6B,mBAAO,CAAC,sGAAwB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;AAC/B;AACA,0CAA0C,8BAA8B;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E,iBAAiB;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,gBAAgB;AACnD;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnwBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,6BAA6B,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,6BAA6B,EAAE;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,8CAA8C,EAAE;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,UAAU;AACjF;AACA;AACA;AACA;AACA,2BAA2B,QAAQ,gBAAgB;AACnD;AACA;AACA;AACA;AACA,yBAAyB,0BAA0B;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E,iBAAiB;AAC5F;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,6BAA6B,EAAE;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACbrnBA;AACA;AACA;AACA;AACa;AACb;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,iFAAQ;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;ACxBA;AACA;AACA;AACA;AACa;AACb;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,kFAAc;AACjC,SAAS,mBAAO,CAAC,8EAAY;AAC7B,eAAe,mBAAO,CAAC,iFAAQ;AAC/B,uCAAuC,mBAAO,CAAC,kGAAgC;AAC/E,eAAe,mBAAO,CAAC,0EAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,GAAG,qCAAqC;AACzF,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,GAAG,6BAA6B;AACrF,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC/EA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,2BAA2B;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AClEA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,qBAAqB,EAAE;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACa;AACb;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA,CAAC;AACD,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,GAAG;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5GA;AACA;AACA;AACA;AACa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,kFAAc;AACjC,eAAe,mBAAO,CAAC,iFAAQ;AAC/B,uCAAuC,mBAAO,CAAC,kGAAgC;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,iCAAiC,EAAE;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,iCAAiC,EAAE;AACrG,sEAAsE,iCAAiC,EAAE;AACzG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,UAAU;AACvF;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,CAAC;AACD;;;;;;;;;;;;;AC3IA;AACA;AACA;AACA;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,8GAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAO,CAAC,gGAA6B;AAC9C,SAAS,mBAAO,CAAC,kFAAY;AAC7B;AACA;AACA;AACA;;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,8GAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,uGAAuG;;;;;;;;;;;;;AC1BxG;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,8GAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,2FAA2F;;;;;;;;;;;;;ACnB5F;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,8GAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qFAAqF;;;;;;;;;;;;;ACnBzE;AACb;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,8GAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+EAA+E;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wFAAwF;;;;;;;;;;;;;AClCzF;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,8GAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;;;;;;;;;;;;;AClB/F;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,kFAAY;AAC/B,yBAAyB,mBAAO,CAAC,8GAAgB;AACjD,kCAAkC,mBAAO,CAAC,gHAA2B;AACrE;AACA,kCAAkC,mBAAO,CAAC,gHAA2B;AACrE;AACA,oCAAoC,mBAAO,CAAC,oHAA6B;AACzE;AACA;AACA,iCAAiC,mBAAO,CAAC,8GAA0B;AACnE;AACA,iCAAiC,mBAAO,CAAC,8GAA0B;AACnE;AACA;AACA,gCAAgC,mBAAO,CAAC,4GAAyB;AACjE;AACA,+BAA+B,mBAAO,CAAC,0GAAwB;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,yEAAyE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wFAAwF;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wFAAwF;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4EAA4E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oGAAoG;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4EAA4E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+EAA+E;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qIAAqI;AACtI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gEAAgE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oGAAoG;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qFAAqF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iGAAiG;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6GAA6G;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4HAA4H;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kIAAkI;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+HAA+H;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4HAA4H;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+HAA+H;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,2IAA2I;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kIAAkI;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,yEAAyE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0DAA0D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,yHAAyH;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,uGAAuG;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,mEAAmE;AACpE;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,uGAAuG;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iGAAiG;AAClG;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4EAA4E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iGAAiG;AAClG;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0GAA0G;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,yHAAyH;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4HAA4H;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wFAAwF;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6GAA6G;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0GAA0G;;;;;;;;;;;;;AC9hB3G;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,8GAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;;;;;;;;;;;;;AClB/F;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,8GAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oGAAoG;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8IAA8I;;;;;;;;;;;;;ACrB/I;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzCA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,0GAAU;AACnC,WAAW,mBAAO,CAAC,kGAAM;AACzB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA,YAAY,YAAY,sBAAsB,EAAE;AAChD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChFA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6DAA6D;AAC9D;AACA;AACA,yBAAyB,YAAY,EAAE;AACvC,8BAA8B,oBAAoB;AAClD,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,gDAAgD;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,SAAS;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;;;;;;;;;;;;;AClIA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjCa;AACb;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,kCAAkC;AAClC;AACA;AACA,iBAAiB;AACjB,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,kCAAkC;AAClC;AACA;AACA,iBAAiB;AACjtRA;AACA;AACA;AACA;AACA;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,kGAAM;AACzB,mBAAmB,mBAAO,CAAC,8GAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAO,CAAC,wHAAiB;AACjD;AACA;AACA;AACA;AACA,wBAAwB,mBAAO,CAAC,wHAAiB;AACjD;AACA;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,0GAAU;AACnC;AACA;AACA;AACA,uBAAuB,mBAAO,CAAC,sHAAgB;AAC/C;AACA;AACA,oBAAoB,mBAAO,CAAC,gHAAa;AACzC,SAAS,mBAAO,CAAC,oHAAe;AAChC,SAAS,mBAAO,CAAC,wHAAiB;AAClC;AACA;AACA;AACA,CAAC,gDAAgD;AACjD;AACA,kBAAkB,EAAE;AACpB,iBAAiB,EAAE;AACnB,iBAAiB,EAAE;AACnB,gBAAgB;AAChB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA,CAAC,gEAAgE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gEAAgE;AACjE;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+EAA+E;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qFAAqF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oHAAoH,sBAAsB,wBAAwB,cAAc;AAChL;AACA;AACA,oHAAoH,sBAAsB;AAC1I;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4GAA4G,sBAAsB,wBAAwB,cAAc;AACxK;AACA;AACA,4GAA4G,sBAAsB;AAClI;AACA;AACA;AACA;AACA,8GAA8G,sBAAsB;AACpI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,oDAAoD;AACtI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,uBAAuB,yBAAyB,cAAc;AACxH;AACA;AACA,0DAA0D,uBAAuB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,eAAe,yBAAyB,cAAc;AAChH;AACA;AACA,0DAA0D,eAAe;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kGAAkG,iCAAiC;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wCAAwC;AAC1E;AACA,2CAA2C,eAAe,MAAM,WAAW;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,wCAAwC;AAC9E;AACA;AACA;AACA;AACA;AACA,gDAAgD,eAAe;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,4CAA4C;AACtF;AACA;AACA;AACA,0CAA0C,wCAAwC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,OAAO,MAAM,WAAW,8BAA8B,uBAAuB;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wCAAwC;AAC1E;AACA,4CAA4C,eAAe,MAAM,WAAW;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,wCAAwC;AAC9E;AACA;AACA;AACA;AACA;AACA,iDAAiD,eAAe;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,4CAA4C;AACtF;AACA;AACA;AACA,0CAA0C,wCAAwC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,sBAAsB,IAAI,mBAAmB;AAC7G,iDAAiD,uBAAuB,MAAM,WAAW,QAAQ,wCAAwC,KAAK,MAAM;AACpJ;AACA;AACA,gDAAgD,WAAW;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,yCAAyC;AACxE;AACA;AACA;AACA,+CAA+C,oBAAoB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,yDAAyD;AACzD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,0EAA0E,KAAK;AAC/E,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA,oDAAoD;AACpD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,gCAAgC;AACxG;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC15BA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,0GAAU;AACnC,WAAW,mBAAO,CAAC,kGAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,qDAAqD;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,4CAA4C;AACrF;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChOA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,0GAAU;AACnC,WAAW,mBAAO,CAAC,kGAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,qDAAqD;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7LA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,kGAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6DAA6D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpPA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,kBAAM;AAC7B,aAAa,mBAAO,CAAC,cAAI;AACzB,iBAAiB,mBAAO,CAAC,sBAAQ;AACjC,cAAc,mBAAO,CAAC,gBAAK;AAC3B,wBAAwB,mBAAO,CAAC,wHAAiB;AACjD,wBAAwB,mBAAO,CAAC,wHAAiB;AACjD;AACA;AACA;AACA,8CAA8C,aAAa;AAC3D;AACA;AACA;AACA,oDAAoD,aAAa;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,cAAc,mBAAO,CAAC,gBAAK;AAC3B,wBAAwB,mBAAO,CAAC,wHAAiB;AACjD,wBAAwB,mBAAO,CAAC,wHAAiB;AACjD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"7.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n// tslint:disable:no-any\n\nimport { injectable, inject } from 'inversify';\nimport { MaybePromise, MessageService, CommandRegistry } from '@theia/core';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common';\nimport { FrontendApplication, WebSocketConnectionProvider } from '@theia/core/lib/browser';\nimport {\n    LanguageContribution, ILanguageClient, LanguageClientOptions,\n    DocumentSelector, TextDocument, FileSystemWatcher,\n    Workspace, Languages, State\n} from './language-client-services';\nimport { MessageConnection, ResponseError } from 'vscode-jsonrpc';\nimport { LanguageClientFactory } from './language-client-factory';\nimport { WorkspaceService } from '@theia/workspace/lib/browser';\nimport { InitializeParams } from 'monaco-languageclient';\nimport { Deferred } from '@theia/core/lib/common/promise-util';\n\nexport const LanguageClientContribution = Symbol('LanguageClientContribution');\nexport interface LanguageClientContribution extends LanguageContribution {\n    readonly running: boolean;\n    readonly languageClient: Promise<ILanguageClient>;\n    waitForActivation(app: FrontendApplication): Promise<void>;\n    activate(app: FrontendApplication): Disposable;\n    deactivate(): void;\n    restart(): void;\n}\n\n@injectable()\nexport abstract class BaseLanguageClientContribution implements LanguageClientContribution {\n\n    abstract readonly id: string;\n    abstract readonly name: string;\n\n    protected _languageClient: ILanguageClient | undefined;\n\n    protected resolveReady: (languageClient: ILanguageClient) => void;\n    protected ready: Promise<ILanguageClient>;\n\n    @inject(MessageService) protected readonly messageService: MessageService;\n    @inject(CommandRegistry) protected readonly registry: CommandRegistry;\n    @inject(WorkspaceService) protected readonly workspaceService: WorkspaceService;\n    @inject(LanguageContribution.Service) protected readonly languageContributionService: LanguageContribution.Service;\n    @inject(WebSocketConnectionProvider) protected readonly connectionProvider: WebSocketConnectionProvider;\n\n    constructor(\n        @inject(Workspace) protected readonly workspace: Workspace,\n        @inject(Languages) protected readonly languages: Languages,\n        @inject(LanguageClientFactory) protected readonly languageClientFactory: LanguageClientFactory\n    ) {\n        this.waitForReady();\n    }\n\n    get languageClient(): Promise<ILanguageClient> {\n        return this._languageClient ? Promise.resolve(this._languageClient) : this.ready;\n    }\n\n    // tslint:disable-next-line:no-any\n    waitForActivation(app: FrontendApplication): Promise<any> {\n        // tslint:disable-next-line:no-any\n        const activationPromises: Promise<any>[] = [];\n        const workspaceContains = this.workspaceContains;\n        if (workspaceContains.length !== 0) {\n            activationPromises.push(this.waitForItemInWorkspace());\n        }\n        const documentSelector = this.documentSelector;\n        if (documentSelector) {\n            activationPromises.push(this.waitForOpenTextDocument(documentSelector));\n        }\n        if (activationPromises.length !== 0) {\n            return Promise.all([\n                this.workspace.ready,\n                Promise.race(activationPromises.map(p => new Promise(async resolve => {\n                    try {\n                        await p;\n                        resolve();\n                    } catch (e) {\n                        console.error(e);\n                    }\n                })))\n            ]);\n        }\n        return this.workspace.ready;\n    }\n\n    protected deferredConnection = new Deferred<MessageConnection>();\n\n    protected readonly toDeactivate = new DisposableCollection();\n    activate(): Disposable {\n        if (this.toDeactivate.disposed) {\n            if (!this._languageClient) {\n                this._languageClient = this.createLanguageClient(() => this.deferredConnection.promise);\n                this._languageClient.onDidChangeState(({ newState }) => {\n                    this.state = newState;\n                });\n            }\n            const toStop = new DisposableCollection(Disposable.create(() => { })); // mark as not disposed\n            this.toDeactivate.push(toStop);\n            this.doActivate(toStop);\n        }\n        return this.toDeactivate;\n    }\n    deactivate(): void {\n        this.toDeactivate.dispose();\n    }\n\n    protected stop = Promise.resolve();\n    protected async doActivate(toStop: DisposableCollection): Promise<void> {\n        try {\n            // make sure that the previous client is stopped to avoid duplicate commands and language services\n            await this.stop;\n            if (toStop.disposed) {\n                return;\n            }\n            const startParameters = await this.getStartParameters();\n            if (toStop.disposed) {\n                return;\n            }\n            const sessionId = await this.languageContributionService.create(this.id, startParameters);\n            if (toStop.disposed) {\n                this.languageContributionService.destroy(sessionId);\n                return;\n            }\n            toStop.push(Disposable.create(() => this.languageContributionService.destroy(sessionId)));\n            this.connectionProvider.listen({\n                path: LanguageContribution.getPath(this, sessionId),\n                onConnection: messageConnection => {\n                    this.deferredConnection.resolve(messageConnection);\n                    messageConnection.onDispose(() => this.deferredConnection = new Deferred<MessageConnection>());\n                    if (toStop.disposed) {\n                        messageConnection.dispose();\n                        return;\n                    }\n                    toStop.push(Disposable.create(() => this.stop = (async () => {\n                        try {\n                            // avoid calling stop if start failed\n                            await this._languageClient!.onReady();\n                            // remove all listerens\n                            await this._languageClient!.stop();\n                        } catch {\n                            try {\n                                // if start or stop failed make sure the the connection is closed\n                                messageConnection.dispose();\n                            } catch { /* no-op */ }\n                        }\n                    })()));\n                    toStop.push(messageConnection.onClose(() => this.restart()));\n                    this.onWillStart(this._languageClient!);\n                    this._languageClient!.start();\n                }\n            }, { reconnecting: false });\n        } catch (e) {\n            console.error(e);\n            if (!toStop.disposed) {\n                this.restart();\n            }\n        }\n    }\n\n    protected state: State | undefined;\n    get running(): boolean {\n        return !this.toDeactivate.disposed && this.state === State.Running;\n    }\n\n    restart(): void {\n        this.deactivate();\n        this.activate();\n    }\n\n    protected onWillStart(languageClient: ILanguageClient): void {\n        languageClient.onReady().then(() => this.onReady(languageClient));\n    }\n\n    protected onReady(languageClient: ILanguageClient): void {\n        this._languageClient = languageClient;\n        this.resolveReady(this._languageClient);\n        this.waitForReady();\n    }\n\n    protected waitForReady(): void {\n        this.ready = new Promise<ILanguageClient>(resolve =>\n            this.resolveReady = resolve\n        );\n    }\n\n    protected createLanguageClient(connection: MessageConnection | (() => MaybePromise<MessageConnection>)): ILanguageClient {\n        const clientOptions = this.createOptions();\n        return this.languageClientFactory.get(this, clientOptions, connection);\n    }\n\n    protected createOptions(): LanguageClientOptions {\n        const { id, documentSelector, fileEvents, configurationSection, initializationOptions } = this;\n        return {\n            documentSelector,\n            synchronize: { fileEvents, configurationSection },\n            initializationFailedHandler: err => this.handleInitializationFailed(err),\n            diagnosticCollectionName: id,\n            initializationOptions\n        };\n    }\n    protected handleInitializationFailed(err: ResponseError<InitializeParams> | Error | any): boolean {\n        this.deactivate();\n        const detail = err instanceof Error ? `: ${err.message}` : '.';\n        this.messageService.error(`Failed to start ${this.name} language server${detail}`, 'Retry').then(result => {\n            if (result) {\n                this.activate();\n            }\n        });\n        return false;\n    }\n\n    protected getStartParameters(): MaybePromise<any> {\n        return undefined;\n    }\n\n    // tslint:disable-next-line:no-any\n    protected get initializationOptions(): any | (() => any) | undefined {\n        return undefined;\n    }\n\n    protected get configurationSection(): string | string[] | undefined {\n        return undefined;\n    }\n\n    protected get workspaceContains(): string[] {\n        return [];\n    }\n\n    protected get documentSelector(): DocumentSelector | undefined {\n        return [this.id];\n    }\n\n    protected _fileEvents: FileSystemWatcher[] | undefined;\n    protected get fileEvents(): FileSystemWatcher[] {\n        return this._fileEvents = this._fileEvents || this.createFileEvents();\n    }\n    protected createFileEvents(): FileSystemWatcher[] {\n        const watchers = [];\n        if (this.workspace.createFileSystemWatcher) {\n            for (const globPattern of this.globPatterns) {\n                watchers.push(this.workspace.createFileSystemWatcher(globPattern));\n            }\n        }\n        return watchers;\n    }\n\n    protected get globPatterns(): string[] {\n        return [];\n    }\n\n    /**\n     * Check to see if one of the paths is in the current workspace.\n     */\n    // tslint:disable-next-line:no-any\n    protected async waitForItemInWorkspace(): Promise<any> {\n        const doesContain = await this.workspaceService.containsSome(this.workspaceContains);\n        if (!doesContain) {\n            return new Promise(resolve => { });\n        }\n        return doesContain;\n    }\n\n    // FIXME move it to the workspace\n    protected waitForOpenTextDocument(selector: DocumentSelector): Promise<TextDocument> {\n        const document = this.workspace.textDocuments.filter(doc =>\n            this.languages.match(selector, doc)\n        )[0];\n        if (document !== undefined) {\n            return Promise.resolve(document);\n        }\n        return new Promise<TextDocument>(resolve => {\n            const disposable = this.workspace.onDidOpenTextDocument(doc => {\n                if (this.languages.match(selector, doc)) {\n                    disposable.dispose();\n                    resolve(doc);\n                }\n            });\n        });\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { MessageConnection } from 'vscode-jsonrpc';\nimport { CommandRegistry, Disposable, MaybePromise } from '@theia/core/lib/common';\nimport { ErrorAction, RevealOutputChannelOn, CloseAction } from 'monaco-languageclient';\nimport {\n    Workspace, Languages, Window, Services,\n    ILanguageClient, LanguageClientOptions, MonacoLanguageClient,\n    createConnection, LanguageContribution\n} from './language-client-services';\n\n@injectable()\nexport class LanguageClientFactory {\n\n    @inject(CommandRegistry) protected readonly registry: CommandRegistry;\n\n    constructor(\n        @inject(Workspace) protected readonly workspace: Workspace,\n        @inject(Languages) protected readonly languages: Languages,\n        @inject(Window) protected readonly window: Window\n    ) {\n        Services.install({\n            workspace,\n            languages,\n            window,\n            commands: {\n                registerCommand: this.registerCommand.bind(this)\n            }\n        });\n    }\n\n    // tslint:disable-next-line:no-any\n    protected registerCommand(id: string, callback: (...args: any[]) => any, thisArg?: any): Disposable {\n        const execute = callback.bind(thisArg);\n        return this.registry.registerCommand({ id }, { execute });\n    }\n\n    get(contribution: LanguageContribution, clientOptions: LanguageClientOptions,\n        connectionProvider: MessageConnection | (() => MaybePromise<MessageConnection>)): ILanguageClient {\n        if (clientOptions.revealOutputChannelOn === undefined) {\n            clientOptions.revealOutputChannelOn = RevealOutputChannelOn.Never;\n        }\n        if (!clientOptions.errorHandler) {\n            clientOptions.errorHandler = {\n                // ignore connection errors\n                error: () => ErrorAction.Continue,\n                closed: () => CloseAction.DoNotRestart\n            };\n        }\n        const initializationFailedHandler = clientOptions.initializationFailedHandler;\n        clientOptions.initializationFailedHandler = e => !!initializationFailedHandler && initializationFailedHandler(e);\n        return new MonacoLanguageClient({\n            id: contribution.id,\n            name: contribution.name,\n            clientOptions,\n            connectionProvider: {\n                get: async (errorHandler, closeHandler) => {\n                    const connection = typeof connectionProvider === 'function' ? await connectionProvider() : connectionProvider;\n                    return createConnection(connection, errorHandler, closeHandler);\n                }\n            }\n        });\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, named } from 'inversify';\nimport { ContributionProvider } from '@theia/core/lib/common';\nimport { LanguageClientContribution } from './language-client-contribution';\nimport { ILanguageClient } from './language-client-services';\nimport { LanguageClientProvider } from './language-client-provider';\n\n@injectable()\nexport class LanguageClientProviderImpl implements LanguageClientProvider {\n\n    @inject(ContributionProvider) @named(LanguageClientContribution)\n    private readonly contributions: ContributionProvider<LanguageClientContribution>;\n\n    async getLanguageClient(languageId: string): Promise<ILanguageClient | undefined> {\n        const contribution = this.getLanguageContribution(languageId);\n        if (contribution) {\n            return contribution.languageClient;\n        }\n    }\n\n    protected getLanguageContribution(languageId: string): LanguageClientContribution | undefined {\n        const contributions = this.contributions.getContributions();\n        if (contributions) {\n            for (const contribution of contributions) {\n                if (contribution.id === languageId) {\n                    return contribution;\n                }\n            }\n        }\n        return undefined;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ILanguageClient } from './language-client-services';\n\nexport const LanguageClientProvider = Symbol('LanguageClientProvider');\nexport interface LanguageClientProvider {\n    getLanguageClient(languageId: string): Promise<ILanguageClient | undefined>\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as services from 'monaco-languageclient/lib/services';\nimport * as connection from 'monaco-languageclient/lib/connection';\nimport * as base from 'monaco-languageclient/lib/monaco-language-client';\nexport * from 'monaco-languageclient';\nexport * from '../common';\n\nexport interface Language {\n    readonly id: string;\n    readonly name: string;\n    readonly extensions: Set<string>;\n    readonly filenames: Set<string>;\n}\n\nexport const Languages = Symbol('Languages');\nexport interface Languages extends services.Languages {\n    readonly workspaceSymbolProviders?: services.WorkspaceSymbolProvider[];\n    readonly languages?: Language[]\n    getLanguage?(languageId: string): Language | undefined;\n}\n\nexport const Workspace = Symbol('Workspace');\nexport interface Workspace extends services.Workspace {\n    readonly ready: Promise<void>;\n}\n\nexport const Commands = Symbol('Commands');\nexport interface Commands extends services.Commands { }\n\nexport const Window = Symbol('Window');\nexport interface Window extends services.Window { }\n\nexport const IConnectionProvider = Symbol('IConnectionProvider');\nexport interface IConnectionProvider extends connection.IConnectionProvider { }\n\nexport const ILanguageClient = Symbol('ILanguageClient');\nexport interface ILanguageClient extends base.MonacoLanguageClient { }\n\nexport interface LanguageClientOptions extends base.LanguageClientOptions { }\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, named } from 'inversify';\nimport { ContributionProvider, CommandContribution, CommandRegistry } from '@theia/core/lib/common';\nimport { FrontendApplication, FrontendApplicationContribution, PreferenceSchema, PreferenceSchemaProvider } from '@theia/core/lib/browser';\nimport { LanguageClientContribution } from './language-client-contribution';\n\n@injectable()\nexport class LanguagesFrontendContribution implements FrontendApplicationContribution, CommandContribution {\n\n    @inject(FrontendApplication)\n    protected readonly app: FrontendApplication;\n\n    @inject(PreferenceSchemaProvider)\n    protected preferenceSchema: PreferenceSchemaProvider;\n\n    @inject(ContributionProvider) @named(LanguageClientContribution)\n    protected readonly contributions: ContributionProvider<LanguageClientContribution>;\n\n    onStart(app: FrontendApplication): void {\n        const schema: PreferenceSchema = {\n            type: 'object',\n            properties: {}\n        };\n        for (const contribution of this.contributions.getContributions()) {\n            contribution.waitForActivation(app).then(() =>\n                contribution.activate(app)\n            );\n            schema.properties[`${contribution.id}.trace.server`] = {\n                type: 'string',\n                enum: [\n                    'off',\n                    'messages',\n                    'verbose'\n                ],\n                default: 'off',\n                description: `Enable/disable tracing communications with the ${contribution.name} language server`\n            };\n        }\n        this.preferenceSchema.setSchema(schema);\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        for (const contribution of this.contributions.getContributions()) {\n            commands.registerCommand({\n                id: `${contribution.id}.server.start`,\n                label: `${contribution.name}: Start Language Server`\n            }, {\n                    execute: () => contribution.activate(this.app),\n                    isEnabled: () => !contribution.running,\n                    isVisible: () => !contribution.running,\n                });\n            commands.registerCommand({\n                id: `${contribution.id}.server.stop`,\n                label: `${contribution.name}: Stop Language Server`\n            }, {\n                    execute: () => contribution.deactivate(),\n                    isEnabled: () => contribution.running,\n                    isVisible: () => contribution.running,\n                });\n            commands.registerCommand({\n                id: `${contribution.id}.server.restart`,\n                label: `${contribution.name}: Restart Language Server`\n            }, {\n                    execute: () => contribution.restart(),\n                    isEnabled: () => contribution.running,\n                    isVisible: () => contribution.running,\n                });\n        }\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { ContainerModule } from 'inversify';\nimport { bindContributionProvider, CommandContribution } from '@theia/core/lib/common';\nimport { FrontendApplicationContribution, KeybindingContribution, QuickOpenContribution, WebSocketConnectionProvider } from '@theia/core/lib/browser';\nimport { Window } from './language-client-services';\nimport { WindowImpl } from './window-impl';\nimport { LanguageClientFactory } from './language-client-factory';\nimport { LanguagesFrontendContribution } from './languages-frontend-contribution';\nimport { LanguageClientContribution } from './language-client-contribution';\nimport { WorkspaceSymbolCommand } from './workspace-symbols';\nimport { LanguageClientProvider } from './language-client-provider';\nimport { LanguageClientProviderImpl } from './language-client-provider-impl';\nimport { LanguageContribution } from '../common';\n\nexport default new ContainerModule(bind => {\n    bind(Window).to(WindowImpl).inSingletonScope();\n\n    bind(LanguageClientFactory).toSelf().inSingletonScope();\n    bind(LanguageContribution.Service).toDynamicValue(({ container }) =>\n        WebSocketConnectionProvider.createProxy(container, LanguageContribution.servicePath)\n    ).inSingletonScope();\n\n    bindContributionProvider(bind, LanguageClientContribution);\n    bind(LanguagesFrontendContribution).toSelf().inSingletonScope();\n    bind(FrontendApplicationContribution).toService(LanguagesFrontendContribution);\n    bind(CommandContribution).toService(LanguagesFrontendContribution);\n\n    bind(WorkspaceSymbolCommand).toSelf().inSingletonScope();\n    for (const identifier of [CommandContribution, KeybindingContribution, QuickOpenContribution]) {\n        bind(identifier).toService(WorkspaceSymbolCommand);\n    }\n\n    bind(LanguageClientProviderImpl).toSelf().inSingletonScope();\n    bind(LanguageClientProvider).toService(LanguageClientProviderImpl);\n});\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { MessageService } from '@theia/core/lib/common';\nimport { Window, OutputChannel, MessageActionItem, MessageType } from 'monaco-languageclient/lib/services';\nimport { OutputChannelManager } from '@theia/output/lib/common/output-channel';\nimport { OutputContribution } from '@theia/output/lib/browser/output-contribution';\n\n@injectable()\nexport class WindowImpl implements Window {\n\n    @inject(MessageService) protected readonly messageService: MessageService;\n    @inject(OutputChannelManager) protected readonly outputChannelManager: OutputChannelManager;\n    @inject(OutputContribution) protected readonly outputContribution: OutputContribution;\n\n    showMessage<T extends MessageActionItem>(type: MessageType, message: string, ...actions: T[]): Thenable<T | undefined> {\n        const originalActions = new Map((actions || []).map(action => [action.title, action] as [string, T]));\n        const actionTitles = (actions || []).map(action => action.title);\n        const mapActionType: (result: string | undefined) => (T | undefined) = result => {\n            if (!!result) {\n                return originalActions.get(result);\n            }\n            return undefined;\n        };\n        if (type === MessageType.Error) {\n            return this.messageService.error(message, ...actionTitles).then(mapActionType);\n        }\n        if (type === MessageType.Warning) {\n            return this.messageService.warn(message, ...actionTitles).then(mapActionType);\n        }\n        if (type === MessageType.Info) {\n            return this.messageService.info(message, ...actionTitles).then(mapActionType);\n        }\n        if (type === MessageType.Log) {\n            return this.messageService.log(message, ...actionTitles).then(mapActionType);\n        }\n        return Promise.resolve(undefined);\n    }\n\n    createOutputChannel(name: string): OutputChannel {\n        const outputChannel = this.outputChannelManager.getChannel(name);\n        return {\n            append: outputChannel.append.bind(outputChannel),\n            appendLine: outputChannel.appendLine.bind(outputChannel),\n            show: async (preserveFocus?: boolean) => {\n                const options = Object.assign({\n                    preserveFocus: false,\n                }, { preserveFocus });\n                const activate = !options.preserveFocus;\n                const reveal = options.preserveFocus;\n                await this.outputContribution.openView({ activate, reveal });\n                outputChannel.setVisibility(true);\n            },\n            dispose: () => {\n                this.outputChannelManager.deleteChannel(outputChannel.name);\n            }\n        };\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport {\n    PrefixQuickOpenService, QuickOpenModel, QuickOpenItem, OpenerService,\n    QuickOpenMode, KeybindingContribution, KeybindingRegistry, QuickOpenHandler, QuickOpenOptions, QuickOpenContribution, QuickOpenHandlerRegistry\n} from '@theia/core/lib/browser';\nimport { Languages, WorkspaceSymbolParams, SymbolInformation } from './language-client-services';\nimport { CancellationTokenSource, CommandRegistry, CommandHandler, Command, SelectionService } from '@theia/core';\nimport URI from '@theia/core/lib/common/uri';\nimport { CommandContribution } from '@theia/core/lib/common';\nimport { Range } from 'vscode-languageserver-types';\n\n@injectable()\nexport class WorkspaceSymbolCommand implements QuickOpenModel, CommandContribution, KeybindingContribution, CommandHandler, QuickOpenHandler, QuickOpenContribution {\n\n    readonly prefix = '#';\n    readonly description = 'Go to symbol in workspace';\n\n    private command: Command = {\n        id: 'languages.workspace.symbol',\n        label: 'Open Workspace Symbol...'\n    };\n\n    constructor(@inject(Languages) protected languages: Languages,\n        @inject(OpenerService) protected readonly openerService: OpenerService,\n        @inject(PrefixQuickOpenService) protected quickOpenService: PrefixQuickOpenService,\n        @inject(SelectionService) protected selectionService: SelectionService) { }\n\n    isEnabled() {\n        return this.languages.workspaceSymbolProviders !== undefined;\n    }\n\n    execute() {\n        this.quickOpenService.open(this.prefix);\n    }\n\n    getModel(): QuickOpenModel {\n        return this;\n    }\n\n    getOptions(): QuickOpenOptions {\n        return {\n            fuzzyMatchLabel: true,\n            showItemsWithoutHighlight: true,\n            onClose: () => {\n                this.cancellationSource.cancel();\n            }\n        };\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        commands.registerCommand(this.command, this);\n    }\n\n    registerKeybindings(keybindings: KeybindingRegistry): void {\n        keybindings.registerKeybinding({\n            command: this.command.id,\n            keybinding: 'ctrlcmd+o',\n        });\n    }\n\n    registerQuickOpenHandlers(handlers: QuickOpenHandlerRegistry): void {\n        handlers.registerHandler(this);\n    }\n\n    private cancellationSource = new CancellationTokenSource();\n\n    async onType(lookFor: string, acceptor: (items: QuickOpenItem[]) => void): Promise<void> {\n        if (this.languages.workspaceSymbolProviders) {\n            this.cancellationSource.cancel();\n            const newCancellationSource = new CancellationTokenSource();\n            this.cancellationSource = newCancellationSource;\n\n            const param: WorkspaceSymbolParams = {\n                query: lookFor\n            };\n\n            const items: QuickOpenItem[] = [];\n\n            for (const provider of this.languages.workspaceSymbolProviders) {\n                provider.provideWorkspaceSymbols(param, newCancellationSource.token).then(symbols => {\n                    if (symbols && !newCancellationSource.token.isCancellationRequested) {\n                        for (const symbol of symbols) {\n                            items.push(this.createItem(symbol));\n                        }\n                        if (items.length === 0) {\n                            items.push(new QuickOpenItem({\n                                label: lookFor.length === 0 ? 'Type to search for symbols' : 'No symbols matching',\n                                run: () => false\n                            }));\n                        }\n                        acceptor(items);\n                    }\n                });\n            }\n        }\n    }\n\n    protected createItem(sym: SymbolInformation): QuickOpenItem {\n        const uri = new URI(sym.location.uri);\n        const kind = SymbolKind[sym.kind];\n        const icon = (kind) ? SymbolKind[sym.kind].toLowerCase() : 'unknown';\n        let parent = sym.containerName;\n        if (parent) {\n            parent += ' - ';\n        }\n        parent = (parent || '') + uri.displayName;\n        return new SimpleOpenItem(sym.name, icon, parent, uri.toString(), () => {\n            this.openerService.getOpener(uri).then(opener => opener.open(uri, {\n                selection: Range.create(sym.location.range.start, sym.location.range.start)\n            }));\n        });\n    }\n}\n\nclass SimpleOpenItem extends QuickOpenItem {\n\n    constructor(\n        protected readonly label: string,\n        protected readonly icon: string,\n        protected readonly parent: string,\n        protected readonly toolTip: string,\n        protected readonly onOpen: () => void,\n        protected readonly onSelect?: () => void\n    ) {\n        super();\n    }\n\n    getLabel(): string {\n        return this.label;\n    }\n\n    isHidden(): boolean {\n        return false;\n    }\n\n    getTooltip(): string {\n        return this.toolTip;\n    }\n\n    getDescription(): string {\n        return this.parent;\n    }\n\n    getIconClass(): string {\n        return this.icon;\n    }\n\n    run(mode: QuickOpenMode): boolean {\n        if (mode !== QuickOpenMode.OPEN) {\n            if (!this.onSelect) {\n                return false;\n            }\n            this.onSelect();\n            return true;\n        }\n        this.onOpen();\n        return true;\n    }\n}\n\nenum SymbolKind {\n    File = 1,\n    Module = 2,\n    Namespace = 3,\n    Package = 4,\n    Class = 5,\n    Method = 6,\n    Property = 7,\n    Field = 8,\n    Constructor = 9,\n    Enum = 10,\n    Interface = 11,\n    Function = 12,\n    Variable = 13,\n    Constant = 14,\n    String = 15,\n    Number = 16,\n    Boolean = 17,\n    Array = 18,\n    Object = 19,\n    Key = 20,\n    Null = 21,\n    EnumMember = 22,\n    Struct = 23,\n    Event = 24,\n    Operator = 25,\n    TypeParameter = 26\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './language-contribution';\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport interface LanguageContribution {\n    readonly id: string;\n    readonly name: string;\n}\n\nexport namespace LanguageContribution {\n    export const servicePath = '/services/languages';\n    export function getPath(contribution: LanguageContribution, sessionId: string = ':id'): string {\n        return servicePath + '/' + contribution.id + '/' + sessionId;\n    }\n    export const Service = Symbol('LanguageContributionService');\n    export interface Service {\n        // tslint:disable-next-line:no-any\n        create(contributionId: string, parameters: any): Promise<string>;\n        destroy(sessionId: string): Promise<void>;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './workspace-commands';\nexport * from './workspace-service';\nexport * from './workspace-frontend-contribution';\nexport * from './workspace-frontend-module';\nexport * from './workspace-preferences';\n","module.exports = function (glob, opts) {\n  if (typeof glob !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  var str = String(glob);\n\n  // The regexp we are building, as a string.\n  var reStr = \"\";\n\n  // Whether we are matching so called \"extended\" globs (like bash) and should\n  // support single character matching, matching ranges of characters, group\n  // matching, etc.\n  var extended = opts ? !!opts.extended : false;\n\n  // When globstar is _false_ (default), '/foo/*' is translated a regexp like\n  // '^\\/foo\\/.*$' which will match any string beginning with '/foo/'\n  // When globstar is _true_, '/foo/*' is translated to regexp like\n  // '^\\/foo\\/[^/]*$' which will match any string beginning with '/foo/' BUT\n  // which does not have a '/' to the right of it.\n  // E.g. with '/foo/*' these will match: '/foo/bar', '/foo/bar.txt' but\n  // these will not '/foo/bar/baz', '/foo/bar/baz.txt'\n  // Lastely, when globstar is _true_, '/foo/**' is equivelant to '/foo/*' when\n  // globstar is _false_\n  var globstar = opts ? !!opts.globstar : false;\n\n  // If we are doing extended matching, this boolean is true when we are inside\n  // a group (eg {*.html,*.js}), and false otherwise.\n  var inGroup = false;\n\n  // RegExp flags (eg \"i\" ) to pass in to RegExp constructor.\n  var flags = opts && typeof( opts.flags ) === \"string\" ? opts.flags : \"\";\n\n  var c;\n  for (var i = 0, len = str.length; i < len; i++) {\n    c = str[i];\n\n    switch (c) {\n    case \"\\\\\":\n    case \"/\":\n    case \"$\":\n    case \"^\":\n    case \"+\":\n    case \".\":\n    case \"(\":\n    case \")\":\n    case \"=\":\n    case \"!\":\n    case \"|\":\n      reStr += \"\\\\\" + c;\n      break;\n\n    case \"?\":\n      if (extended) {\n        reStr += \".\";\n\t    break;\n      }\n\n    case \"[\":\n    case \"]\":\n      if (extended) {\n        reStr += c;\n\t    break;\n      }\n\n    case \"{\":\n      if (extended) {\n        inGroup = true;\n\t    reStr += \"(\";\n\t    break;\n      }\n\n    case \"}\":\n      if (extended) {\n        inGroup = false;\n\t    reStr += \")\";\n\t    break;\n      }\n\n    case \",\":\n      if (inGroup) {\n        reStr += \"|\";\n\t    break;\n      }\n      reStr += \"\\\\\" + c;\n      break;\n\n    case \"*\":\n      // Move over all consecutive \"*\"'s.\n      // Also store the previous and next characters\n      var prevChar = str[i - 1];\n      var starCount = 1;\n      while(str[i + 1] === \"*\") {\n        starCount++;\n        i++;\n      }\n      var nextChar = str[i + 1];\n\n      if (!globstar) {\n        // globstar is disabled, so treat any number of \"*\" as one\n        reStr += \".*\";\n      } else {\n        // globstar is enabled, so determine if this is a globstar segment\n        var isGlobstar = starCount > 1                      // multiple \"*\"'s\n          && (prevChar === \"/\" || prevChar === undefined)   // from the start of the segment\n          && (nextChar === \"/\" || nextChar === undefined)   // to the end of the segment\n\n        if (isGlobstar) {\n          // it's a globstar, so match zero or more path segments\n          reStr += \"(?:[^/]*(?:\\/|$))*\";\n          i++; // move over the \"/\"\n        } else {\n          // it's not a globstar, so only match one path segment\n          reStr += \"[^/]*\";\n        }\n      }\n      break;\n\n    default:\n      reStr += c;\n    }\n  }\n\n  // When regexp 'g' flag is specified don't\n  // constrain the regular expression with ^ & $\n  if (!flags || !~flags.indexOf('g')) {\n    reStr = \"^\" + reStr + \"$\";\n  }\n\n  return new RegExp(reStr, flags);\n};\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) 2018 TypeFox GmbH (http://www.typefox.io). All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\n\nimport {\n    Message, MessageType as RPCMessageType,\n    RequestType, RequestType0, RequestHandler, RequestHandler0, GenericRequestHandler,\n    NotificationType, NotificationType0,\n    NotificationHandler, NotificationHandler0, GenericNotificationHandler,\n    Trace, Tracer, CancellationToken, MessageConnection\n} from 'vscode-jsonrpc';\n\nimport {\n    InitializeRequest, InitializeParams, InitializeResult,\n    ShutdownRequest, ExitNotification,\n    LogMessageNotification, LogMessageParams,\n    ShowMessageNotification, ShowMessageParams,\n    TelemetryEventNotification,\n    DidChangeConfigurationNotification, DidChangeConfigurationParams,\n    DidOpenTextDocumentNotification, DidOpenTextDocumentParams,\n    DidChangeTextDocumentNotification, DidChangeTextDocumentParams,\n    DidCloseTextDocumentNotification, DidCloseTextDocumentParams,\n    DidSaveTextDocumentNotification, DidSaveTextDocumentParams,\n    DidChangeWatchedFilesNotification, DidChangeWatchedFilesParams,\n    PublishDiagnosticsNotification, PublishDiagnosticsParams,\n} from 'vscode-languageserver-protocol/lib/main';\n\nimport * as Is from 'vscode-languageserver-protocol/lib/utils/is';\n\nimport { OutputChannel } from \"./services\";\n\nexport interface IConnection {\n\n    listen(): void;\n\n    sendRequest<R, E, RO>(type: RequestType0<R, E, RO>, token?: CancellationToken): Thenable<R>;\n    sendRequest<P, R, E, RO>(type: RequestType<P, R, E, RO>, params: P, token?: CancellationToken): Thenable<R>;\n    sendRequest<R>(method: string, token?: CancellationToken): Thenable<R>;\n    sendRequest<R>(method: string, param: any, token?: CancellationToken): Thenable<R>;\n    sendRequest<R>(type: string | RPCMessageType, ...params: any[]): Thenable<R>;\n\n    onRequest<R, E, RO>(type: RequestType0<R, E, RO>, handler: RequestHandler0<R, E>): void;\n    onRequest<P, R, E, RO>(type: RequestType<P, R, E, RO>, handler: RequestHandler<P, R, E>): void;\n    onRequest<R, E>(method: string, handler: GenericRequestHandler<R, E>): void;\n    onRequest<R, E>(method: string | RPCMessageType, handler: GenericRequestHandler<R, E>): void;\n\n    sendNotification<RO>(type: NotificationType0<RO>): void;\n    sendNotification<P, RO>(type: NotificationType<P, RO>, params?: P): void;\n    sendNotification(method: string): void;\n    sendNotification(method: string, params: any): void;\n    sendNotification(method: string | RPCMessageType, params?: any): void;\n\n    onNotification<RO>(type: NotificationType0<RO>, handler: NotificationHandler0): void;\n    onNotification<P, RO>(type: NotificationType<P, RO>, handler: NotificationHandler<P>): void;\n    onNotification(method: string, handler: GenericNotificationHandler): void;\n    onNotification(method: string | RPCMessageType, handler: GenericNotificationHandler): void;\n\n    trace(value: Trace, tracer: Tracer, sendNotification?: boolean): void;\n\n    initialize(params: InitializeParams): Thenable<InitializeResult>;\n    shutdown(): Thenable<void>;\n    exit(): void;\n\n    onLogMessage(handle: NotificationHandler<LogMessageParams>): void;\n    onShowMessage(handler: NotificationHandler<ShowMessageParams>): void;\n    onTelemetry(handler: NotificationHandler<any>): void;\n\n    didChangeConfiguration(params: DidChangeConfigurationParams): void;\n    didChangeWatchedFiles(params: DidChangeWatchedFilesParams): void;\n\n    didOpenTextDocument(params: DidOpenTextDocumentParams): void;\n    didChangeTextDocument(params: DidChangeTextDocumentParams): void;\n    didCloseTextDocument(params: DidCloseTextDocumentParams): void;\n    didSaveTextDocument(params: DidSaveTextDocumentParams): void;\n    onDiagnostics(handler: NotificationHandler<PublishDiagnosticsParams>): void;\n\n    dispose(): void;\n}\n\nexport interface ConnectionErrorHandler {\n    (error: Error, message: Message | undefined, count: number | undefined): void;\n}\nexport interface ConnectionCloseHandler {\n    (): void;\n}\nexport interface IConnectionProvider {\n    get(errorHandler: ConnectionErrorHandler, closeHandler: ConnectionCloseHandler, outputChannel: OutputChannel | undefined): Thenable<IConnection>;\n}\nexport function createConnection(connection: MessageConnection, errorHandler: ConnectionErrorHandler, closeHandler: ConnectionCloseHandler): IConnection {\n    connection.onError((data) => { errorHandler(data[0], data[1], data[2]) });\n    connection.onClose(closeHandler);\n    return {\n\n        listen: (): void => connection.listen(),\n\n        sendRequest: <R>(type: string | RPCMessageType, ...params: any[]): Thenable<R> => connection.sendRequest(Is.string(type) ? type : type.method, ...params),\n        onRequest: <R, E>(type: string | RPCMessageType, handler: GenericRequestHandler<R, E>): void => connection.onRequest(Is.string(type) ? type : type.method, handler),\n\n        sendNotification: (type: string | RPCMessageType, params?: any): void => connection.sendNotification(Is.string(type) ? type : type.method, params),\n        onNotification: (type: string | RPCMessageType, handler: GenericNotificationHandler): void => connection.onNotification(Is.string(type) ? type : type.method, handler),\n\n        trace: (value: Trace, tracer: Tracer, sendNotification: boolean = false): void => connection.trace(value, tracer, sendNotification),\n\n        initialize: (params: InitializeParams) => connection.sendRequest(InitializeRequest.type, params),\n        shutdown: () => connection.sendRequest(ShutdownRequest.type, undefined),\n        exit: () => connection.sendNotification(ExitNotification.type),\n\n        onLogMessage: (handler: NotificationHandler<LogMessageParams>) => connection.onNotification(LogMessageNotification.type, handler),\n        onShowMessage: (handler: NotificationHandler<ShowMessageParams>) => connection.onNotification(ShowMessageNotification.type, handler),\n        onTelemetry: (handler: NotificationHandler<any>) => connection.onNotification(TelemetryEventNotification.type, handler),\n\n        didChangeConfiguration: (params: DidChangeConfigurationParams) => connection.sendNotification(DidChangeConfigurationNotification.type, params),\n        didChangeWatchedFiles: (params: DidChangeWatchedFilesParams) => connection.sendNotification(DidChangeWatchedFilesNotification.type, params),\n\n        didOpenTextDocument: (params: DidOpenTextDocumentParams) => connection.sendNotification(DidOpenTextDocumentNotification.type, params),\n        didChangeTextDocument: (params: DidChangeTextDocumentParams) => connection.sendNotification(DidChangeTextDocumentNotification.type, params),\n        didCloseTextDocument: (params: DidCloseTextDocumentParams) => connection.sendNotification(DidCloseTextDocumentNotification.type, params),\n        didSaveTextDocument: (params: DidSaveTextDocumentParams) => connection.sendNotification(DidSaveTextDocumentNotification.type, params),\n\n        onDiagnostics: (handler: NotificationHandler<PublishDiagnosticsParams>) => connection.onNotification(PublishDiagnosticsNotification.type, handler),\n\n        dispose: () => connection.dispose()\n    };\n}","/* --------------------------------------------------------------------------------------------\n * Copyright (c) 2018 TypeFox GmbH (http://www.typefox.io). All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nimport { MessageActionItem, MessageType, Window, OutputChannel } from './services';\n\nexport class ConsoleWindow implements Window {\n    protected readonly channels = new Map<string, OutputChannel>();\n    showMessage<T extends MessageActionItem>(type: MessageType, message: string, ...actions: T[]): Thenable<T | undefined> {\n        if (type === MessageType.Error) {\n            console.error(message);\n        }\n        if (type === MessageType.Warning) {\n            console.warn(message);\n        }\n        if (type === MessageType.Info) {\n            console.info(message);\n        }\n        if (type === MessageType.Log) {\n            console.log(message);\n        }\n        return Promise.resolve(undefined);\n    }\n    createOutputChannel(name: string): OutputChannel {\n        const existing = this.channels.get(name);\n        if (existing) {\n            return existing;\n        }\n        const channel: OutputChannel = {\n            append(value: string): void {\n                console.log(name + ': ' + value);\n            },\n            appendLine(line: string): void {\n                console.log(name + ': ' + line);\n            },\n            show(): void {\n                // no-op\n            },\n            dispose(): void {\n                // no-op\n            }\n        }\n        this.channels.set(name, channel)\n        return channel;\n    }\n}","/* --------------------------------------------------------------------------------------------\n * Copyright (c) 2018 TypeFox GmbH (http://www.typefox.io). All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nimport { Disposable } from './services';\n\nexport {\n    Disposable\n}\n\nexport class DisposableCollection implements Disposable {\n    protected readonly disposables: Disposable[] = [];\n\n    dispose(): void {\n        while (this.disposables.length !== 0) {\n            this.disposables.pop()!.dispose();\n        }\n    }\n\n    push(disposable: Disposable): Disposable {\n        const disposables = this.disposables;\n        disposables.push(disposable);\n        return {\n            dispose(): void {\n                const index = disposables.indexOf(disposable);\n                if (index !== -1) {\n                    disposables.splice(index, 1);\n                }\n            }\n        }\n    }\n\n}","/* --------------------------------------------------------------------------------------------\n * Copyright (c) 2018 TypeFox GmbH (http://www.typefox.io). All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nexport * from './disposable';\nexport * from './services';\nexport * from './connection';\nexport * from './monaco-language-client';\nexport * from './monaco-commands';\nexport * from './console-window';\nexport * from './monaco-languages';\nexport * from './monaco-workspace';\nexport * from './monaco-services';\nexport * from './monaco-converter';\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) 2018 TypeFox GmbH (http://www.typefox.io). All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nimport { Commands, Disposable } from './services';\n\nexport class MonacoCommands implements Commands {\n\n    public constructor(protected readonly editor: monaco.editor.IStandaloneCodeEditor) { }\n\n    public registerCommand(command: string, callback: (...args: any[]) => any, thisArg?: any): Disposable {\n        return this.editor._commandService.addCommand({\n            id: command,\n            handler: (_accessor: any, ...args: any[]) => callback(...args)\n        });\n    }\n}\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) 2018 TypeFox GmbH (http://www.typefox.io). All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nimport * as Is from 'vscode-languageserver-protocol/lib/utils/is';\nimport {\n    CodeActionParams, CodeLensParams,\n    DocumentFormattingParams, DocumentOnTypeFormattingParams,\n    DocumentRangeFormattingParams, ReferenceParams,\n    RenameParams, TextDocumentPositionParams,\n    Position, TextDocumentIdentifier, CompletionItem, CompletionList,\n    CompletionParams, CompletionContext, CompletionTriggerKind,\n    InsertTextFormat, Range, Diagnostic, CompletionItemKind,\n    Hover, SignatureHelp, SignatureInformation, ParameterInformation,\n    Definition, Location, DocumentHighlight, DocumentHighlightKind,\n    SymbolInformation, DocumentSymbolParams, CodeActionContext, DiagnosticSeverity,\n    Command, CodeLens, FormattingOptions, TextEdit, WorkspaceEdit, DocumentLinkParams, DocumentLink,\n    MarkedString, MarkupContent, ColorInformation, ColorPresentation, FoldingRange, FoldingRangeKind,\n    DiagnosticRelatedInformation, MarkupKind, SymbolKind, DocumentSymbol, CodeAction\n} from './services';\nimport IReadOnlyModel = monaco.editor.IReadOnlyModel;\n\nexport type RecursivePartial<T> = {\n    [P in keyof T]?: RecursivePartial<T[P]>;\n};\n\nexport interface ProtocolDocumentLink extends monaco.languages.ILink {\n    data?: any;\n}\nexport namespace ProtocolDocumentLink {\n    export function is(item: any): item is ProtocolDocumentLink {\n        return !!item && 'data' in item;\n    }\n}\n\nexport interface ProtocolCodeLens extends monaco.languages.ICodeLensSymbol {\n    data?: any;\n}\nexport namespace ProtocolCodeLens {\n    export function is(item: any): item is ProtocolCodeLens {\n        return !!item && 'data' in item;\n    }\n}\n\nexport interface ProtocolCompletionItem extends monaco.languages.CompletionItem {\n    data?: any;\n    fromEdit?: boolean;\n    documentationFormat?: string;\n    originalItemKind?: CompletionItemKind;\n    deprecated?: boolean;\n}\nexport namespace ProtocolCompletionItem {\n    export function is(item: any): item is ProtocolCompletionItem {\n        return !!item && 'data' in item;\n    }\n}\n\nexport class MonacoToProtocolConverter {\n    asPosition(lineNumber: undefined | null, column: undefined | null): {};\n    asPosition(lineNumber: number, column: undefined | null): Pick<Position, 'line'>;\n    asPosition(lineNumber: undefined | null, column: number): Pick<Position, 'character'>;\n    asPosition(lineNumber: number, column: number): Position;\n    asPosition(lineNumber: number | undefined | null, column: number | undefined | null): Partial<Position>;\n    asPosition(lineNumber: number | undefined | null, column: number | undefined | null): Partial<Position> {\n        const line = lineNumber === undefined || lineNumber === null ? undefined : lineNumber - 1;\n        const character = column === undefined || column === null ? undefined : column - 1;\n        return {\n            line, character\n        };\n    }\n\n    asRange(range: null): null;\n    asRange(range: undefined): undefined;\n    asRange(range: monaco.IRange): Range;\n    asRange(range: monaco.IRange | undefined): Range | undefined;\n    asRange(range: monaco.IRange | null): Range | null;\n    asRange(range: Partial<monaco.IRange>): RecursivePartial<Range>;\n    asRange(range: Partial<monaco.IRange> | undefined): RecursivePartial<Range> | undefined;\n    asRange(range: Partial<monaco.IRange> | null): RecursivePartial<Range> | null;\n    asRange(range: Partial<monaco.IRange> | undefined | null): RecursivePartial<Range> | undefined | null {\n        if (range === undefined) {\n            return undefined;\n        }\n        if (range === null) {\n            return null;\n        }\n        const start = this.asPosition(range.startLineNumber, range.startColumn);\n        const end = this.asPosition(range.endLineNumber, range.endColumn);\n        return {\n            start, end\n        };\n    }\n\n    asTextDocumentIdentifier(model: IReadOnlyModel): TextDocumentIdentifier {\n        return {\n            uri: model.uri.toString()\n        }\n    }\n\n    asTextDocumentPositionParams(model: IReadOnlyModel, position: monaco.Position): TextDocumentPositionParams {\n        return {\n            textDocument: this.asTextDocumentIdentifier(model),\n            position: this.asPosition(position.lineNumber, position.column)\n        };\n    }\n\n    asCompletionParams(model: IReadOnlyModel, position: monaco.Position, context: monaco.languages.CompletionContext): CompletionParams {\n        return Object.assign(this.asTextDocumentPositionParams(model, position), {\n            context: this.asCompletionContext(context)\n        });\n    }\n\n    asCompletionContext(context: monaco.languages.CompletionContext): CompletionContext {\n        return {\n            triggerKind: this.asTriggerKind(context.triggerKind),\n            triggerCharacter: context.triggerCharacter\n        }\n    }\n\n    asTriggerKind(triggerKind: monaco.languages.SuggestTriggerKind): CompletionTriggerKind {\n        switch (triggerKind) {\n            case monaco.languages.SuggestTriggerKind.TriggerCharacter:\n                return CompletionTriggerKind.TriggerCharacter;\n            case monaco.languages.SuggestTriggerKind.TriggerForIncompleteCompletions:\n                return CompletionTriggerKind.TriggerForIncompleteCompletions;\n            default:\n                return CompletionTriggerKind.Invoked;\n        }\n    }\n\n    asCompletionItem(item: monaco.languages.CompletionItem): CompletionItem {\n        const result: CompletionItem = { label: item.label };\n        const protocolItem = ProtocolCompletionItem.is(item) ? item : undefined;\n        if (item.detail) { result.detail = item.detail; }\n        // We only send items back we created. So this can't be something else than\n        // a string right now.\n        if (item.documentation) {\n            if (!protocolItem || !protocolItem.documentationFormat) {\n                result.documentation = item.documentation as string;\n            } else {\n                result.documentation = this.asDocumentation(protocolItem.documentationFormat, item.documentation);\n            }\n        }\n        if (item.filterText) { result.filterText = item.filterText; }\n        this.fillPrimaryInsertText(result, item as ProtocolCompletionItem);\n        if (Is.number(item.kind)) {\n            result.kind = this.asCompletionItemKind(item.kind, protocolItem && protocolItem.originalItemKind);\n        }\n        if (item.sortText) { result.sortText = item.sortText; }\n        if (item.additionalTextEdits) { result.additionalTextEdits = this.asTextEdits(item.additionalTextEdits); }\n        if (item.command) { result.command = this.asCommand(item.command); }\n        if (item.commitCharacters) { result.commitCharacters = item.commitCharacters.slice(); }\n        if (item.command) { result.command = this.asCommand(item.command); }\n        // TODO if (item.preselect === true || item.preselect === false) { result.preselect = item.preselect; }\n        if (protocolItem) {\n            if (protocolItem.data !== undefined) {\n                result.data = protocolItem.data;\n            }\n            if (protocolItem.deprecated === true || protocolItem.deprecated === false) {\n                result.deprecated = protocolItem.deprecated;\n            }\n        }\n        return result;\n    }\n\n    protected asCompletionItemKind(value: monaco.languages.CompletionItemKind, original: CompletionItemKind | undefined): CompletionItemKind {\n        if (original !== undefined) {\n            return original;\n        }\n        return value + 1 as CompletionItemKind;\n    }\n\n    protected asDocumentation(format: string, documentation: string | monaco.IMarkdownString): string | MarkupContent {\n        switch (format) {\n            case MarkupKind.PlainText:\n                return { kind: format, value: documentation as string };\n            case MarkupKind.Markdown:\n                return { kind: format, value: (documentation as monaco.IMarkdownString).value };\n            default:\n                return `Unsupported Markup content received. Kind is: ${format}`;\n        }\n    }\n\n    protected fillPrimaryInsertText(target: CompletionItem, source: ProtocolCompletionItem): void {\n        let format: InsertTextFormat = InsertTextFormat.PlainText;\n        let text: string | undefined;\n        let range: Range | undefined;\n        if (source.textEdit) {\n            text = source.textEdit.text;\n            range = this.asRange(source.textEdit.range);\n        } else if (typeof source.insertText === 'string') {\n            text = source.insertText;\n        } else if (source.insertText) {\n            format = InsertTextFormat.Snippet;\n            text = source.insertText.value;\n        }\n        if (source.range) {\n            range = this.asRange(source.range);\n        }\n\n        target.insertTextFormat = format;\n        if (source.fromEdit && text && range) {\n            target.textEdit = { newText: text, range: range };\n        } else {\n            target.insertText = text;\n        }\n    }\n\n    asTextEdit(edit: monaco.editor.ISingleEditOperation): TextEdit {\n        const range = this.asRange(edit.range)!;\n        return {\n            range,\n            newText: edit.text\n        }\n    }\n\n    asTextEdits(items: monaco.editor.ISingleEditOperation[]): TextEdit[];\n    asTextEdits(items: undefined | null): undefined;\n    asTextEdits(items: monaco.editor.ISingleEditOperation[] | undefined | null): TextEdit[] | undefined;\n    asTextEdits(items: monaco.editor.ISingleEditOperation[] | undefined | null): TextEdit[] | undefined {\n        if (!items) {\n            return undefined;\n        }\n        return items.map(item => this.asTextEdit(item));\n    }\n\n    asReferenceParams(model: IReadOnlyModel, position: monaco.Position, options: { includeDeclaration: boolean; }): ReferenceParams {\n        return {\n            textDocument: this.asTextDocumentIdentifier(model),\n            position: this.asPosition(position.lineNumber, position.column),\n            context: { includeDeclaration: options.includeDeclaration }\n        };\n    }\n\n    asDocumentSymbolParams(model: IReadOnlyModel): DocumentSymbolParams {\n        return {\n            textDocument: this.asTextDocumentIdentifier(model)\n        }\n    }\n\n    asCodeLensParams(model: IReadOnlyModel): CodeLensParams {\n        return {\n            textDocument: this.asTextDocumentIdentifier(model)\n        }\n    }\n\n    asDiagnosticSeverity(value: monaco.MarkerSeverity): DiagnosticSeverity | undefined {\n        switch (value) {\n            case monaco.MarkerSeverity.Error:\n                return DiagnosticSeverity.Error;\n            case monaco.MarkerSeverity.Warning:\n                return DiagnosticSeverity.Warning;\n            case monaco.MarkerSeverity.Info:\n                return DiagnosticSeverity.Information;\n            case monaco.MarkerSeverity.Hint:\n                return DiagnosticSeverity.Hint;\n        }\n        return undefined;\n    }\n\n    asDiagnostic(marker: monaco.editor.IMarkerData): Diagnostic {\n        const range = this.asRange(new monaco.Range(marker.startLineNumber, marker.startColumn, marker.endLineNumber, marker.endColumn))\n        const severity = this.asDiagnosticSeverity(marker.severity);\n        return Diagnostic.create(range, marker.message, severity, marker.code, marker.source);\n    }\n\n    asDiagnostics(markers: monaco.editor.IMarkerData[]): Diagnostic[] {\n        if (markers === void 0 || markers === null) {\n            return markers;\n        }\n        return markers.map(marker => this.asDiagnostic(marker));\n    }\n\n    asCodeActionContext(context: monaco.languages.CodeActionContext): CodeActionContext {\n        if (context === void 0 || context === null) {\n            return context;\n        }\n        const diagnostics = this.asDiagnostics(context.markers);\n        return CodeActionContext.create(diagnostics, Is.string(context.only) ? [context.only] : undefined);\n    }\n\n    asCodeActionParams(model: IReadOnlyModel, range: monaco.Range, context: monaco.languages.CodeActionContext): CodeActionParams {\n        return {\n            textDocument: this.asTextDocumentIdentifier(model),\n            range: this.asRange(range),\n            context: this.asCodeActionContext(context)\n        }\n    }\n\n    asCommand(item: monaco.languages.Command | undefined | null): Command | undefined {\n        if (item) {\n            let args = item.arguments || [];\n            return Command.create(item.title, item.id, ...args);\n        }\n        return undefined;\n    }\n\n    asCodeLens(item: monaco.languages.ICodeLensSymbol): CodeLens {\n        let result = CodeLens.create(this.asRange(item.range));\n        if (item.command) { result.command = this.asCommand(item.command); }\n        if (ProtocolCodeLens.is(item)) {\n            if (item.data) { result.data = item.data };\n        }\n        return result;\n    }\n\n    asFormattingOptions(options: monaco.languages.FormattingOptions): FormattingOptions {\n        return { tabSize: options.tabSize, insertSpaces: options.insertSpaces };\n    }\n\n    asDocumentFormattingParams(model: IReadOnlyModel, options: monaco.languages.FormattingOptions): DocumentFormattingParams {\n        return {\n            textDocument: this.asTextDocumentIdentifier(model),\n            options: this.asFormattingOptions(options)\n        }\n    }\n\n    asDocumentRangeFormattingParams(model: IReadOnlyModel, range: monaco.Range, options: monaco.languages.FormattingOptions): DocumentRangeFormattingParams {\n        return {\n            textDocument: this.asTextDocumentIdentifier(model),\n            range: this.asRange(range),\n            options: this.asFormattingOptions(options)\n        }\n    }\n\n    asDocumentOnTypeFormattingParams(model: IReadOnlyModel, position: monaco.IPosition, ch: string, options: monaco.languages.FormattingOptions): DocumentOnTypeFormattingParams {\n        return {\n            textDocument: this.asTextDocumentIdentifier(model),\n            position: this.asPosition(position.lineNumber, position.column),\n            ch,\n            options: this.asFormattingOptions(options)\n        }\n    }\n\n    asRenameParams(model: IReadOnlyModel, position: monaco.IPosition, newName: string): RenameParams {\n        return {\n            textDocument: this.asTextDocumentIdentifier(model),\n            position: this.asPosition(position.lineNumber, position.column),\n            newName\n        }\n    }\n\n    asDocumentLinkParams(model: IReadOnlyModel): DocumentLinkParams {\n        return {\n            textDocument: this.asTextDocumentIdentifier(model)\n        }\n    }\n\n    asDocumentLink(item: monaco.languages.ILink): DocumentLink {\n        let result = DocumentLink.create(this.asRange(item.range));\n        if (item.url) { result.target = item.url; }\n        if (ProtocolDocumentLink.is(item) && item.data) {\n            result.data = item.data;\n        }\n        return result;\n    }\n}\n\nexport class ProtocolToMonacoConverter {\n\n    asResourceEdits(resource: monaco.Uri, edits: TextEdit[], modelVersionId?: number): monaco.languages.ResourceTextEdit {\n        return {\n            resource: resource,\n            edits: this.asTextEdits(edits),\n            modelVersionId\n        }\n    }\n\n    asWorkspaceEdit(item: WorkspaceEdit): monaco.languages.WorkspaceEdit;\n    asWorkspaceEdit(item: undefined | null): undefined;\n    asWorkspaceEdit(item: WorkspaceEdit | undefined | null): monaco.languages.WorkspaceEdit | undefined;\n    asWorkspaceEdit(item: WorkspaceEdit | undefined | null): monaco.languages.WorkspaceEdit | undefined {\n        if (!item) {\n            return undefined;\n        }\n        const edits: monaco.languages.ResourceTextEdit[] = [];\n        if (item.documentChanges) {\n            for (const change of item.documentChanges) {\n                const resource = monaco.Uri.parse(change.textDocument.uri);\n                const version = typeof change.textDocument.version === 'number' ? change.textDocument.version : undefined;\n                edits.push(this.asResourceEdits(resource, change.edits, version));\n            }\n        } else if (item.changes) {\n            for (const key of Object.keys(item.changes)) {\n                const resource = monaco.Uri.parse(key);\n                edits.push(this.asResourceEdits(resource, item.changes[key]));\n            }\n        }\n        return {\n            edits\n        };\n    }\n\n    asTextEdit(edit: TextEdit): monaco.languages.TextEdit;\n    asTextEdit(edit: undefined | null): undefined;\n    asTextEdit(edit: TextEdit | undefined | null): undefined;\n    asTextEdit(edit: TextEdit | undefined | null): monaco.languages.TextEdit | undefined {\n        if (!edit) {\n            return undefined;\n        }\n        const range = this.asRange(edit.range)!;\n        return {\n            range,\n            text: edit.newText\n        }\n    }\n\n    asTextEdits(items: TextEdit[]): monaco.editor.ISingleEditOperation[];\n    asTextEdits(items: undefined | null): undefined;\n    asTextEdits(items: TextEdit[] | undefined | null): monaco.editor.ISingleEditOperation[] | undefined;\n    asTextEdits(items: TextEdit[] | undefined | null): monaco.editor.ISingleEditOperation[] | undefined {\n        if (!items) {\n            return undefined;\n        }\n        return items.map(item => this.asTextEdit(item));\n    }\n\n    asCodeLens(item: CodeLens): monaco.languages.ICodeLensSymbol;\n    asCodeLens(item: undefined | null): undefined;\n    asCodeLens(item: CodeLens | undefined | null): monaco.languages.ICodeLensSymbol | undefined;\n    asCodeLens(item: CodeLens | undefined | null): monaco.languages.ICodeLensSymbol | undefined {\n        if (!item) {\n            return undefined;\n        }\n        const range = this.asRange(item.range);\n        let result = <ProtocolCodeLens>{ range };\n        if (item.command) { result.command = this.asCommand(item.command); }\n        if (item.data !== void 0 && item.data !== null) { result.data = item.data; }\n        return result;\n    }\n\n    asCodeLenses(items: CodeLens[]): monaco.languages.ICodeLensSymbol[];\n    asCodeLenses(items: undefined | null): undefined;\n    asCodeLenses(items: CodeLens[] | undefined | null): monaco.languages.ICodeLensSymbol[] | undefined;\n    asCodeLenses(items: CodeLens[] | undefined | null): monaco.languages.ICodeLensSymbol[] | undefined {\n        if (!items) {\n            return undefined;\n        }\n        return items.map((codeLens) => this.asCodeLens(codeLens));\n    }\n\n    asCodeActions(actions: (Command | CodeAction)[]): monaco.languages.CodeAction[] {\n        return actions.map(action => this.asCodeAction(action));\n    }\n\n    asCodeAction(item: Command | CodeAction): monaco.languages.CodeAction {\n        if (CodeAction.is(item)) {\n            return {\n                title: item.title,\n                command: this.asCommand(item.command),\n                edit: this.asWorkspaceEdit(item.edit),\n                diagnostics: this.asDiagnostics(item.diagnostics),\n                kind: item.kind\n            };\n        }\n        return {\n            command: {\n                id: item.command,\n                title: item.title,\n                arguments: item.arguments\n            },\n            title: item.title\n        };\n    }\n\n    asCommand(command: Command): monaco.languages.Command;\n    asCommand(command: undefined): undefined;\n    asCommand(command: Command | undefined): monaco.languages.Command | undefined;\n    asCommand(command: Command | undefined): monaco.languages.Command | undefined {\n        if (!command) {\n            return undefined;\n        }\n        return {\n            id: command.command,\n            title: command.title,\n            arguments: command.arguments\n        };\n    }\n\n    asDocumentSymbol(value: DocumentSymbol): monaco.languages.DocumentSymbol {\n        const children = value.children && value.children.map(c => this.asDocumentSymbol(c));\n        return {\n            name: value.name,\n            detail: value.detail || \"\",\n            kind: this.asSymbolKind(value.kind),\n            range: this.asRange(value.range),\n            selectionRange: this.asRange(value.selectionRange),\n            children\n        };\n    }\n\n    asDocumentSymbols(values: SymbolInformation[] | DocumentSymbol[]): monaco.languages.DocumentSymbol[] {\n        if (DocumentSymbol.is(values[0])) {\n            return (values as DocumentSymbol[]).map(s => this.asDocumentSymbol(s));\n        }\n        return this.asSymbolInformations(values as SymbolInformation[]);\n    }\n\n    asSymbolInformations(values: SymbolInformation[], uri?: monaco.Uri): monaco.languages.DocumentSymbol[];\n    asSymbolInformations(values: undefined | null, uri?: monaco.Uri): undefined;\n    asSymbolInformations(values: SymbolInformation[] | undefined | null, uri?: monaco.Uri): monaco.languages.DocumentSymbol[] | undefined;\n    asSymbolInformations(values: SymbolInformation[] | undefined | null, uri?: monaco.Uri): monaco.languages.DocumentSymbol[] | undefined {\n        if (!values) {\n            return undefined;\n        }\n        return values.map(information => this.asSymbolInformation(information, uri));\n    }\n\n    asSymbolInformation(item: SymbolInformation, uri?: monaco.Uri): monaco.languages.DocumentSymbol {\n        const location = this.asLocation(uri ? { ...item.location, uri: uri.toString() } : item.location);\n        return {\n            name: item.name,\n            detail: '',\n            containerName: item.containerName,\n            kind: this.asSymbolKind(item.kind),\n            range: location.range,\n            selectionRange: location.range\n        };\n    }\n\n    asSymbolKind(item: SymbolKind): monaco.languages.SymbolKind {\n        if (item <= SymbolKind.TypeParameter) {\n            // Symbol kind is one based in the protocol and zero based in code.\n            return item - 1;\n        }\n        return monaco.languages.SymbolKind.Property;\n    }\n\n    asDocumentHighlights(values: DocumentHighlight[]): monaco.languages.DocumentHighlight[];\n    asDocumentHighlights(values: undefined | null): undefined;\n    asDocumentHighlights(values: DocumentHighlight[] | undefined | null): monaco.languages.DocumentHighlight[] | undefined;\n    asDocumentHighlights(values: DocumentHighlight[] | undefined | null): monaco.languages.DocumentHighlight[] | undefined {\n        if (!values) {\n            return undefined;\n        }\n        return values.map(item => this.asDocumentHighlight(item));\n    }\n\n    asDocumentHighlight(item: DocumentHighlight): monaco.languages.DocumentHighlight {\n        const range = this.asRange(item.range)!;\n        const kind = Is.number(item.kind) ? this.asDocumentHighlightKind(item.kind) : undefined!;\n        return { range, kind };\n    }\n\n    asDocumentHighlightKind(item: number): monaco.languages.DocumentHighlightKind {\n        switch (item) {\n            case DocumentHighlightKind.Text:\n                return monaco.languages.DocumentHighlightKind.Text;\n            case DocumentHighlightKind.Read:\n                return monaco.languages.DocumentHighlightKind.Read;\n            case DocumentHighlightKind.Write:\n                return monaco.languages.DocumentHighlightKind.Write;\n        }\n        return monaco.languages.DocumentHighlightKind.Text;\n    }\n\n    asReferences(values: Location[]): monaco.languages.Location[];\n    asReferences(values: undefined | null): monaco.languages.Location[] | undefined;\n    asReferences(values: Location[] | undefined | null): monaco.languages.Location[] | undefined;\n    asReferences(values: Location[] | undefined | null): monaco.languages.Location[] | undefined {\n        if (!values) {\n            return undefined;\n        }\n        return values.map(location => this.asLocation(location));\n    }\n\n    asDefinitionResult(item: Definition): monaco.languages.Definition;\n    asDefinitionResult(item: undefined | null): undefined;\n    asDefinitionResult(item: Definition | undefined | null): monaco.languages.Definition | undefined;\n    asDefinitionResult(item: Definition | undefined | null): monaco.languages.Definition | undefined {\n        if (!item) {\n            return undefined;\n        }\n        if (Is.array(item)) {\n            return item.map((location) => this.asLocation(location));\n        } else {\n            return this.asLocation(item);\n        }\n    }\n\n    asLocation(item: Location): monaco.languages.Location;\n    asLocation(item: undefined | null): undefined;\n    asLocation(item: Location | undefined | null): monaco.languages.Location | undefined;\n    asLocation(item: Location | undefined | null): monaco.languages.Location | undefined {\n        if (!item) {\n            return undefined;\n        }\n        const uri = monaco.Uri.parse(item.uri);\n        const range = this.asRange(item.range)!;\n        return {\n            uri, range\n        }\n    }\n\n    asSignatureHelp(item: undefined | null): undefined;\n    asSignatureHelp(item: SignatureHelp): monaco.languages.SignatureHelp;\n    asSignatureHelp(item: SignatureHelp | undefined | null): monaco.languages.SignatureHelp | undefined;\n    asSignatureHelp(item: SignatureHelp | undefined | null): monaco.languages.SignatureHelp | undefined {\n        if (!item) {\n            return undefined;\n        }\n        let result = <monaco.languages.SignatureHelp>{};\n        if (Is.number(item.activeSignature)) {\n            result.activeSignature = item.activeSignature;\n        } else {\n            // activeSignature was optional in the past\n            result.activeSignature = 0;\n        }\n        if (Is.number(item.activeParameter)) {\n            result.activeParameter = item.activeParameter;\n        } else {\n            // activeParameter was optional in the past\n            result.activeParameter = 0;\n        }\n        if (item.signatures) {\n            result.signatures = this.asSignatureInformations(item.signatures);\n        } else {\n            result.signatures = [];\n        }\n        return result;\n    }\n\n    asSignatureInformations(items: SignatureInformation[]): monaco.languages.SignatureInformation[] {\n        return items.map(item => this.asSignatureInformation(item));\n    }\n\n    asSignatureInformation(item: SignatureInformation): monaco.languages.SignatureInformation {\n        let result = <monaco.languages.SignatureInformation>{ label: item.label };\n        if (item.documentation) { result.documentation = this.asDocumentation(item.documentation); }\n        if (item.parameters) {\n            result.parameters = this.asParameterInformations(item.parameters);\n        } else {\n            result.parameters = [];\n        }\n        return result;\n    }\n\n    asParameterInformations(item: ParameterInformation[]): monaco.languages.ParameterInformation[] {\n        return item.map(item => this.asParameterInformation(item));\n    }\n\n    asParameterInformation(item: ParameterInformation): monaco.languages.ParameterInformation {\n        let result = <monaco.languages.ParameterInformation>{ label: item.label };\n        if (item.documentation) { result.documentation = this.asDocumentation(item.documentation) };\n        return result;\n    }\n\n    asHover(hover: Hover): monaco.languages.Hover;\n    asHover(hover: undefined | null): undefined;\n    asHover(hover: Hover | undefined | null): monaco.languages.Hover | undefined;\n    asHover(hover: Hover | undefined | null): monaco.languages.Hover | undefined {\n        if (!hover) {\n            return undefined;\n        }\n        return {\n            contents: this.asHoverContent(hover.contents),\n            range: this.asRange(hover.range)\n        };\n    }\n\n    asHoverContent(contents: MarkedString | MarkedString[] | MarkupContent): monaco.IMarkdownString[] {\n        if (Array.isArray(contents)) {\n            return contents.map(content => this.asMarkdownString(content));\n        }\n        return [this.asMarkdownString(contents)];\n    }\n\n    asDocumentation(value: string | MarkupContent): string | monaco.IMarkdownString {\n        if (Is.string(value)) {\n            return value;\n        }\n        if (value.kind === MarkupKind.PlainText) {\n            return value.value;\n        }\n        return this.asMarkdownString(value);\n    }\n\n    asMarkdownString(content: MarkedString | MarkupContent): monaco.IMarkdownString {\n        if (MarkupContent.is(content)) {\n            return {\n                value: content.value\n            };\n        }\n        if (Is.string(content)) {\n            return { value: content };\n        }\n        const { language, value } = content;\n        return {\n            value: '```' + language + '\\n' + value + '\\n```'\n        };\n    }\n\n    asSeverity(severity?: number): monaco.MarkerSeverity {\n        if (severity === 1) {\n            return monaco.MarkerSeverity.Error;\n        }\n        if (severity === 2) {\n            return monaco.MarkerSeverity.Warning;\n        }\n        if (severity === 3) {\n            return monaco.MarkerSeverity.Info;\n        }\n        return monaco.MarkerSeverity.Hint;\n    }\n\n    asDiagnostics(diagnostics: undefined): undefined;\n    asDiagnostics(diagnostics: Diagnostic[]): monaco.editor.IMarkerData[];\n    asDiagnostics(diagnostics: Diagnostic[] | undefined): monaco.editor.IMarkerData[] | undefined;\n    asDiagnostics(diagnostics: Diagnostic[] | undefined): monaco.editor.IMarkerData[] | undefined {\n        if (!diagnostics) {\n            return undefined;\n        }\n        return diagnostics.map(diagnostic => this.asDiagnostic(diagnostic));\n    }\n\n    asDiagnostic(diagnostic: Diagnostic): monaco.editor.IMarkerData {\n        return {\n            code: typeof diagnostic.code === \"number\" ? diagnostic.code.toString() : diagnostic.code,\n            severity: this.asSeverity(diagnostic.severity),\n            message: diagnostic.message,\n            source: diagnostic.source,\n            startLineNumber: diagnostic.range.start.line + 1,\n            startColumn: diagnostic.range.start.character + 1,\n            endLineNumber: diagnostic.range.end.line + 1,\n            endColumn: diagnostic.range.end.character + 1,\n            relatedInformation: this.asRelatedInformations(diagnostic.relatedInformation)\n        }\n    }\n\n    asRelatedInformations(relatedInformation?: DiagnosticRelatedInformation[]): monaco.editor.IRelatedInformation[] | undefined {\n        if (!relatedInformation) {\n            return undefined;\n        }\n        return relatedInformation.map(item => this.asRelatedInformation(item));\n    }\n\n    asRelatedInformation(relatedInformation: DiagnosticRelatedInformation): monaco.editor.IRelatedInformation {\n        return {\n            resource: monaco.Uri.parse(relatedInformation.location.uri),\n            startLineNumber: relatedInformation.location.range.start.line + 1,\n            startColumn: relatedInformation.location.range.start.character + 1,\n            endLineNumber: relatedInformation.location.range.end.line + 1,\n            endColumn: relatedInformation.location.range.end.character + 1,\n            message: relatedInformation.message\n        }\n    }\n\n    asCompletionResult(result: CompletionItem[] | CompletionList | null | undefined): monaco.languages.CompletionList {\n        if (!result) {\n            return {\n                isIncomplete: false,\n                items: []\n            }\n        }\n        if (Array.isArray(result)) {\n            const items = result.map(item => this.asCompletionItem(item));\n            return {\n                isIncomplete: false,\n                items\n            }\n        }\n        return {\n            isIncomplete: result.isIncomplete,\n            items: result.items.map(this.asCompletionItem.bind(this))\n        }\n    }\n\n    asCompletionItem(item: CompletionItem): ProtocolCompletionItem {\n        const result = <ProtocolCompletionItem>{ label: item.label };\n        if (item.detail) { result.detail = item.detail; }\n        if (item.documentation) {\n            result.documentation = this.asDocumentation(item.documentation);\n            result.documentationFormat = Is.string(item.documentation) ? undefined : item.documentation.kind;\n        };\n        if (item.filterText) { result.filterText = item.filterText; }\n        let insertText = this.asCompletionInsertText(item);\n        if (insertText) {\n            result.insertText = insertText.text;\n            result.range = insertText.range;\n            result.fromEdit = insertText.fromEdit;\n        }\n        if (Is.number(item.kind)) {\n            let [itemKind, original] = this.asCompletionItemKind(item.kind);\n            result.kind = itemKind;\n            if (original) {\n                result.originalItemKind = original;\n            }\n        }\n        if (item.sortText) { result.sortText = item.sortText; }\n        if (item.additionalTextEdits) { result.additionalTextEdits = this.asTextEdits(item.additionalTextEdits); }\n        if (Is.stringArray(item.commitCharacters)) { result.commitCharacters = item.commitCharacters.slice(); }\n        if (item.command) { result.command = this.asCommand(item.command); }\n        if (item.deprecated === true || item.deprecated === false) { result.deprecated = item.deprecated; }\n        // TODO if (item.preselect === true || item.preselect === false) { result.preselect = item.preselect; }\n        if (item.data !== undefined) { result.data = item.data; }\n        return result;\n    }\n\n    asCompletionItemKind(value: CompletionItemKind): [monaco.languages.CompletionItemKind, CompletionItemKind | undefined] {\n        // Protocol item kind is 1 based, codes item kind is zero based.\n        if (CompletionItemKind.Text <= value && value <= CompletionItemKind.TypeParameter) {\n            return [value - 1, undefined];\n        };\n        return [CompletionItemKind.Text, value];\n    }\n\n    asCompletionInsertText(item: CompletionItem): { text: string | monaco.languages.SnippetString, range?: monaco.Range, fromEdit: boolean } | undefined {\n        if (item.textEdit) {\n            const range = this.asRange(item.textEdit.range)!;\n            const value = item.textEdit.newText;\n            const text = item.insertTextFormat === InsertTextFormat.Snippet ? { value } : value;\n            return {\n                text, range, fromEdit: true\n            };\n        }\n        if (item.insertText) {\n            const value = item.insertText;\n            const text = item.insertTextFormat === InsertTextFormat.Snippet ? { value } : value;\n            return { text, fromEdit: false };\n        }\n        return undefined;\n    }\n\n    asDocumentLinks(documentLinks: DocumentLink[]): ProtocolDocumentLink[] {\n        return documentLinks.map(link => this.asDocumentLink(link));\n    }\n\n    asDocumentLink(documentLink: DocumentLink): ProtocolDocumentLink {\n        return {\n            range: this.asRange(documentLink.range),\n            url: documentLink.target,\n            data: documentLink.data\n        };\n    }\n\n    asRange(range: null): null;\n    asRange(range: undefined): undefined;\n    asRange(range: Range): monaco.Range;\n    asRange(range: Range | undefined): monaco.Range | undefined;\n    asRange(range: Range | null): monaco.Range | null;\n    asRange(range: RecursivePartial<Range>): Partial<monaco.IRange>;\n    asRange(range: RecursivePartial<Range> | undefined): monaco.Range | Partial<monaco.IRange> | undefined;\n    asRange(range: RecursivePartial<Range> | null): monaco.Range | Partial<monaco.IRange> | null;\n    asRange(range: RecursivePartial<Range> | undefined | null): monaco.Range | Partial<monaco.IRange> | undefined | null {\n        if (range === undefined) {\n            return undefined;\n        }\n        if (range === null) {\n            return null;\n        }\n        const start = this.asPosition(range.start);\n        const end = this.asPosition(range.end);\n        if (start instanceof monaco.Position && end instanceof monaco.Position) {\n            return new monaco.Range(start.lineNumber, start.column, end.lineNumber, end.column);\n        }\n        const startLineNumber = !start || start.lineNumber === undefined ? undefined : start.lineNumber;\n        const startColumn = !start || start.column === undefined ? undefined : start.column;\n        const endLineNumber = !end || end.lineNumber === undefined ? undefined : end.lineNumber;\n        const endColumn = !end || end.column === undefined ? undefined : end.column;\n        return { startLineNumber, startColumn, endLineNumber, endColumn };\n    }\n\n    asPosition(position: null): null;\n    asPosition(position: undefined): undefined;\n    asPosition(position: Position): monaco.Position;\n    asPosition(position: Position | undefined): monaco.Position | undefined;\n    asPosition(position: Position | null): monaco.Position | null;\n    asPosition(position: Partial<Position>): Partial<monaco.IPosition>;\n    asPosition(position: Partial<Position> | undefined): monaco.Position | Partial<monaco.IPosition> | undefined;\n    asPosition(position: Partial<Position> | null): monaco.Position | Partial<monaco.IPosition> | null;\n    asPosition(position: Partial<Position> | undefined | null): monaco.Position | Partial<monaco.IPosition> | undefined | null {\n        if (position === undefined) {\n            return undefined;\n        }\n        if (position === null) {\n            return null;\n        }\n        const { line, character } = position;\n        const lineNumber = line === undefined ? undefined : line + 1;\n        const column = character === undefined ? undefined : character + 1;\n        if (lineNumber !== undefined && column !== undefined) {\n            return new monaco.Position(lineNumber, column);\n        }\n        return { lineNumber, column };\n    }\n\n    asColorInformations(items: ColorInformation[]): monaco.languages.IColorInformation[] {\n        return items.map(item => this.asColorInformation(item));\n    }\n\n    asColorInformation(item: ColorInformation): monaco.languages.IColorInformation {\n        return {\n            range: this.asRange(item.range),\n            color: item.color\n        }\n    }\n\n    asColorPresentations(items: ColorPresentation[]): monaco.languages.IColorPresentation[] {\n        return items.map(item => this.asColorPresentation(item));\n    }\n\n    asColorPresentation(item: ColorPresentation): monaco.languages.IColorPresentation {\n        return {\n            label: item.label,\n            textEdit: this.asTextEdit(item.textEdit),\n            additionalTextEdits: this.asTextEdits(item.additionalTextEdits)\n        }\n    }\n\n    asFoldingRanges(items: undefined | null): undefined | null;\n    asFoldingRanges(items: FoldingRange[]): monaco.languages.FoldingRange[];\n    asFoldingRanges(items: FoldingRange[] | undefined | null): monaco.languages.FoldingRange[] | undefined | null {\n        if (!items) {\n            return items;\n        }\n        return items.map(item => this.asFoldingRange(item));\n    }\n\n    asFoldingRange(item: FoldingRange): monaco.languages.FoldingRange {\n        return {\n            start: item.startLine + 1,\n            end: item.endLine + 1,\n            kind: this.asFoldingRangeKind(item.kind)\n        };\n    }\n\n    asFoldingRangeKind(kind?: string): monaco.languages.FoldingRangeKind | undefined {\n        if (kind) {\n            switch (kind) {\n                case FoldingRangeKind.Comment:\n                    return monaco.languages.FoldingRangeKind.Comment;\n                case FoldingRangeKind.Imports:\n                    return monaco.languages.FoldingRangeKind.Imports;\n                case FoldingRangeKind.Region:\n                    return monaco.languages.FoldingRangeKind.Region;\n            };\n        }\n        return undefined;\n    }\n\n}\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) 2018 TypeFox GmbH (http://www.typefox.io). All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nimport { DiagnosticCollection, Diagnostic } from './services';\nimport { DisposableCollection, Disposable } from './disposable';\nimport { ProtocolToMonacoConverter } from './monaco-converter';\nimport IModel = monaco.editor.IModel;\nimport IMarkerData = monaco.editor.IMarkerData;\n\nexport class MonacoDiagnosticCollection implements DiagnosticCollection {\n\n    protected readonly diagnostics = new Map<string, MonacoModelDiagnostics | undefined>();\n    protected readonly toDispose = new DisposableCollection();\n\n    constructor(\n        protected readonly name: string,\n        protected readonly p2m: ProtocolToMonacoConverter) {\n    }\n\n    dispose() {\n        this.toDispose.dispose();\n    }\n\n    get(uri: string): Diagnostic[] {\n        const diagnostics = this.diagnostics.get(uri);\n        return !!diagnostics ? diagnostics.diagnostics : [];\n    }\n\n    set(uri: string, diagnostics: Diagnostic[]): void {\n        const existing = this.diagnostics.get(uri);\n        if (existing) {\n            existing.diagnostics = diagnostics;\n        } else {\n            const modelDiagnostics = new MonacoModelDiagnostics(uri, diagnostics, this.name, this.p2m);\n            this.diagnostics.set(uri, modelDiagnostics);\n            this.toDispose.push(Disposable.create(() => {\n                this.diagnostics.delete(uri);\n                modelDiagnostics.dispose();\n            }));\n        }\n    }\n\n}\n\nexport class MonacoModelDiagnostics implements Disposable {\n    readonly uri: monaco.Uri;\n    protected _markers: IMarkerData[] = [];\n    protected _diagnostics: Diagnostic[] = [];\n    constructor(\n        uri: string,\n        diagnostics: Diagnostic[],\n        readonly owner: string,\n        protected readonly p2m: ProtocolToMonacoConverter\n    ) {\n        this.uri = monaco.Uri.parse(uri);\n        this.diagnostics = diagnostics;\n        monaco.editor.onDidCreateModel(model => this.doUpdateModelMarkers(model));\n    }\n\n    set diagnostics(diagnostics: Diagnostic[]) {\n        this._diagnostics = diagnostics;\n        this._markers = this.p2m.asDiagnostics(diagnostics);\n        this.updateModelMarkers();\n    }\n\n    get diagnostics(): Diagnostic[] {\n        return this._diagnostics;\n    }\n\n    get markers(): ReadonlyArray<IMarkerData> {\n        return this._markers;\n    }\n\n    dispose(): void {\n        this._markers = [];\n        this.updateModelMarkers();\n    }\n\n    updateModelMarkers(): void {\n        const model = monaco.editor.getModel(this.uri);\n        this.doUpdateModelMarkers(model);\n    }\n\n    protected doUpdateModelMarkers(model: IModel | undefined): void {\n        if (model && this.uri.toString() === model.uri.toString()) {\n            monaco.editor.setModelMarkers(model, this.owner, this._markers);\n        }\n    }\n}\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) 2018 TypeFox GmbH (http://www.typefox.io). All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nimport {\n    BaseLanguageClient, MessageTransports, LanguageClientOptions, CompletionParams, WillSaveTextDocumentParams,\n} from \"vscode-base-languageclient/lib/client\";\nimport { TypeDefinitionFeature } from \"vscode-base-languageclient/lib/typeDefinition\";\nimport { ImplementationFeature } from \"vscode-base-languageclient/lib/implementation\";\nimport { ColorProviderFeature } from \"vscode-base-languageclient/lib/colorProvider\";\nimport { WorkspaceFoldersFeature } from \"vscode-base-languageclient/lib/workspaceFolders\";\nimport { FoldingRangeFeature } from \"vscode-base-languageclient/lib/foldingRange\";\nimport * as p2c from 'vscode-base-languageclient/lib/protocolConverter';\nimport * as c2p from 'vscode-base-languageclient/lib/codeConverter';\nimport { IConnectionProvider, IConnection } from './connection';\n\nexport * from 'vscode-base-languageclient/lib/client';\n\nexport class MonacoLanguageClient extends BaseLanguageClient {\n\n    static bypassConversion = (result: any) => result || undefined;\n\n    protected readonly connectionProvider: IConnectionProvider;\n\n    constructor({ id, name, clientOptions, connectionProvider }: MonacoLanguageClient.Options) {\n        super(id || name.toLowerCase(), name, clientOptions);\n        this.connectionProvider = connectionProvider;\n        (this as any).createConnection = this.doCreateConnection.bind(this);\n\n        // bypass LSP <=> VS Code conversion\n        const self: {\n            _p2c: p2c.Converter,\n            _c2p: c2p.Converter\n        } = this as any;\n        self._p2c = new Proxy(self._p2c, {\n            get: (target: any, prop: string) => {\n                if (prop === 'asUri') {\n                    return target[prop];\n                }\n                return MonacoLanguageClient.bypassConversion;\n            }\n        });\n        self._c2p = new Proxy(self._c2p, {\n            get: (target: c2p.Converter, prop: string) => {\n                if (prop === 'asUri') {\n                    return target[prop];\n                }\n                if (prop === 'asCompletionParams') {\n                    return (textDocument: any, position: any, context: any): CompletionParams => {\n                        return {\n                            textDocument: target.asTextDocumentIdentifier(textDocument),\n                            position,\n                            context\n                        }\n                    }\n                }\n                if (prop === 'asWillSaveTextDocumentParams') {\n                    return (event: any): WillSaveTextDocumentParams => {\n                        return {\n                            textDocument: target.asTextDocumentIdentifier(event.document),\n                            reason: event.reason\n                        }\n                    }\n                }\n                if (prop.endsWith('Params')) {\n                    return (target as any)[prop];\n                }\n                return MonacoLanguageClient.bypassConversion;\n            }\n        });\n    }\n\n    protected doCreateConnection(): Thenable<IConnection> {\n        const errorHandler = (this as any).handleConnectionError.bind(this);\n        const closeHandler = this.handleConnectionClosed.bind(this);\n        return this.connectionProvider.get(errorHandler, closeHandler, this.outputChannel);\n    }\n\n    protected createMessageTransports(encoding: string): Thenable<MessageTransports> {\n        throw new Error('Unsupported');\n    }\n\n    protected registerBuiltinFeatures(): void {\n        super.registerBuiltinFeatures();\n        this.registerFeature(new TypeDefinitionFeature(this));\n        this.registerFeature(new ImplementationFeature(this));\n        this.registerFeature(new ColorProviderFeature(this));\n        this.registerFeature(new WorkspaceFoldersFeature(this));\n\n        const foldingRangeFeature = new FoldingRangeFeature(this);\n        foldingRangeFeature['asFoldingRanges'] = MonacoLanguageClient.bypassConversion;\n        this.registerFeature(foldingRangeFeature);\n    }\n\n}\nexport namespace MonacoLanguageClient {\n    export interface Options {\n        name: string;\n        id?: string;\n        clientOptions: LanguageClientOptions;\n        connectionProvider: IConnectionProvider;\n    }\n}\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) 2018 TypeFox GmbH (http://www.typefox.io). All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nimport globToRegExp = require('glob-to-regexp');\nimport {\n    Languages, DiagnosticCollection, CompletionItemProvider, DocumentIdentifier, HoverProvider,\n    SignatureHelpProvider, DefinitionProvider, ReferenceProvider, DocumentHighlightProvider,\n    DocumentSymbolProvider, CodeActionProvider, CodeLensProvider, DocumentFormattingEditProvider, DocumentRangeFormattingEditProvider, OnTypeFormattingEditProvider, RenameProvider,\n    DocumentFilter, DocumentSelector, DocumentLinkProvider, ImplementationProvider, TypeDefinitionProvider, DocumentColorProvider,\n    FoldingRangeProvider\n} from \"./services\";\nimport { MonacoDiagnosticCollection } from './monaco-diagnostic-collection';\nimport { ProtocolToMonacoConverter, MonacoToProtocolConverter } from './monaco-converter';\nimport { DisposableCollection, Disposable } from './disposable';\n\nexport interface MonacoModelIdentifier {\n    uri: monaco.Uri;\n    languageId: string;\n}\n\nexport namespace MonacoModelIdentifier {\n    export function fromDocument(document: DocumentIdentifier): MonacoModelIdentifier {\n        return {\n            uri: monaco.Uri.parse(document.uri),\n            languageId: document.languageId\n        }\n    }\n    export function fromModel(model: monaco.editor.IReadOnlyModel): MonacoModelIdentifier {\n        return {\n            uri: model.uri,\n            languageId: model.getModeId()\n        }\n    }\n}\n\nexport function testGlob(pattern: string, value: string): boolean {\n    const regExp = globToRegExp(pattern, {\n        extended: true,\n        globstar: true\n    });\n    return regExp.test(value);\n}\n\nexport function getLanguages(): string[] {\n    const languages = [];\n    for (const language of monaco.languages.getLanguages().map(l => l.id)) {\n        if (languages.indexOf(language) === -1) {\n            languages.push(language);\n        }\n    }\n    return languages;\n}\n\nexport class MonacoLanguages implements Languages {\n\n    constructor(\n        protected readonly p2m: ProtocolToMonacoConverter,\n        protected readonly m2p: MonacoToProtocolConverter\n    ) { }\n\n    match(selector: DocumentSelector, document: DocumentIdentifier): boolean {\n        return this.matchModel(selector, MonacoModelIdentifier.fromDocument(document));\n    }\n\n    createDiagnosticCollection(name?: string): DiagnosticCollection {\n        return new MonacoDiagnosticCollection(name || 'default', this.p2m);\n    }\n\n    registerCompletionItemProvider(selector: DocumentSelector, provider: CompletionItemProvider, ...triggerCharacters: string[]): Disposable {\n        const completionProvider = this.createCompletionProvider(selector, provider, ...triggerCharacters);\n        const providers = new DisposableCollection();\n        for (const language of getLanguages()) {\n            if (this.matchLanguage(selector, language)) {\n                providers.push(monaco.languages.registerCompletionItemProvider(language, completionProvider))\n            }\n        };\n        return providers;\n    }\n\n    protected createCompletionProvider(selector: DocumentSelector, provider: CompletionItemProvider, ...triggerCharacters: string[]): monaco.languages.CompletionItemProvider {\n        return {\n            triggerCharacters,\n            provideCompletionItems: (model, position, token, context) => {\n                if (!this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return [];\n                }\n                const params = this.m2p.asCompletionParams(model, position, context);\n                return provider.provideCompletionItems(params, token).then(result => this.p2m.asCompletionResult(result));\n            },\n            resolveCompletionItem: provider.resolveCompletionItem ? (item, token) => {\n                const protocolItem = this.m2p.asCompletionItem(item);\n                return provider.resolveCompletionItem!(protocolItem, token).then(resolvedItem => {\n                    const resolvedCompletionItem = this.p2m.asCompletionItem(resolvedItem);\n                    Object.assign(item, resolvedCompletionItem);\n                    return item;\n                });\n            } : undefined\n        };\n    }\n\n    registerHoverProvider(selector: DocumentSelector, provider: HoverProvider): Disposable {\n        const hoverProvider = this.createHoverProvider(selector, provider);\n        const providers = new DisposableCollection();\n        for (const language of getLanguages()) {\n            if (this.matchLanguage(selector, language)) {\n                providers.push(monaco.languages.registerHoverProvider(language, hoverProvider));\n            }\n        }\n        return providers;\n    }\n\n    protected createHoverProvider(selector: DocumentSelector, provider: HoverProvider): monaco.languages.HoverProvider {\n        return {\n            provideHover: (model, position, token) => {\n                if (!this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return undefined!;\n                }\n                const params = this.m2p.asTextDocumentPositionParams(model, position);\n                return provider.provideHover(params, token).then(hover => this.p2m.asHover(hover));\n            }\n        }\n    }\n\n    registerSignatureHelpProvider(selector: DocumentSelector, provider: SignatureHelpProvider, ...triggerCharacters: string[]): Disposable {\n        const signatureHelpProvider = this.createSignatureHelpProvider(selector, provider, ...triggerCharacters);\n        const providers = new DisposableCollection();\n        for (const language of getLanguages()) {\n            if (this.matchLanguage(selector, language)) {\n                providers.push(monaco.languages.registerSignatureHelpProvider(language, signatureHelpProvider));\n            }\n        }\n        return providers;\n    }\n\n    protected createSignatureHelpProvider(selector: DocumentSelector, provider: SignatureHelpProvider, ...triggerCharacters: string[]): monaco.languages.SignatureHelpProvider {\n        const signatureHelpTriggerCharacters = triggerCharacters;\n        return {\n            signatureHelpTriggerCharacters,\n            provideSignatureHelp: (model, position, token) => {\n                if (!this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return undefined!;\n                }\n                const params = this.m2p.asTextDocumentPositionParams(model, position);\n                return provider.provideSignatureHelp(params, token).then(signatureHelp => this.p2m.asSignatureHelp(signatureHelp));\n            }\n        }\n    }\n\n    registerDefinitionProvider(selector: DocumentSelector, provider: DefinitionProvider): Disposable {\n        const definitionProvider = this.createDefinitionProvider(selector, provider);\n        const providers = new DisposableCollection();\n        for (const language of getLanguages()) {\n            if (this.matchLanguage(selector, language)) {\n                providers.push(monaco.languages.registerDefinitionProvider(language, definitionProvider));\n            }\n        }\n        return providers;\n    }\n\n    protected createDefinitionProvider(selector: DocumentSelector, provider: DefinitionProvider): monaco.languages.DefinitionProvider {\n        return {\n            provideDefinition: (model, position, token) => {\n                if (!this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return undefined!;\n                }\n                const params = this.m2p.asTextDocumentPositionParams(model, position);\n                return provider.provideDefinition(params, token).then(result => this.p2m.asDefinitionResult(result));\n            }\n        }\n    }\n\n    registerReferenceProvider(selector: DocumentSelector, provider: ReferenceProvider): Disposable {\n        const referenceProvider = this.createReferenceProvider(selector, provider);\n        const providers = new DisposableCollection();\n        for (const language of getLanguages()) {\n            if (this.matchLanguage(selector, language)) {\n                providers.push(monaco.languages.registerReferenceProvider(language, referenceProvider));\n            }\n        }\n        return providers;\n    }\n\n    protected createReferenceProvider(selector: DocumentSelector, provider: ReferenceProvider): monaco.languages.ReferenceProvider {\n        return {\n            provideReferences: (model, position, context, token) => {\n                if (!this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return [];\n                }\n                const params = this.m2p.asReferenceParams(model, position, context);\n                return provider.provideReferences(params, token).then(result => this.p2m.asReferences(result));\n            }\n        }\n    }\n\n    registerDocumentHighlightProvider(selector: DocumentSelector, provider: DocumentHighlightProvider): Disposable {\n        const documentHighlightProvider = this.createDocumentHighlightProvider(selector, provider);\n        const providers = new DisposableCollection();\n        for (const language of getLanguages()) {\n            if (this.matchLanguage(selector, language)) {\n                providers.push(monaco.languages.registerDocumentHighlightProvider(language, documentHighlightProvider));\n            }\n        }\n        return providers;\n    }\n\n    protected createDocumentHighlightProvider(selector: DocumentSelector, provider: DocumentHighlightProvider): monaco.languages.DocumentHighlightProvider {\n        return {\n            provideDocumentHighlights: (model, position, token) => {\n                if (!this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return [];\n                }\n                const params = this.m2p.asTextDocumentPositionParams(model, position);\n                return provider.provideDocumentHighlights(params, token).then(result => this.p2m.asDocumentHighlights(result));\n            }\n        }\n    }\n\n    registerDocumentSymbolProvider(selector: DocumentSelector, provider: DocumentSymbolProvider): Disposable {\n        const documentSymbolProvider = this.createDocumentSymbolProvider(selector, provider);\n        const providers = new DisposableCollection();\n        for (const language of getLanguages()) {\n            if (this.matchLanguage(selector, language)) {\n                providers.push(monaco.languages.registerDocumentSymbolProvider(language, documentSymbolProvider));\n            }\n        }\n        return providers;\n    }\n\n    protected createDocumentSymbolProvider(selector: DocumentSelector, provider: DocumentSymbolProvider): monaco.languages.DocumentSymbolProvider {\n        return {\n            provideDocumentSymbols: (model, token) => {\n                if (!this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return [];\n                }\n                const params = this.m2p.asDocumentSymbolParams(model);\n                return provider.provideDocumentSymbols(params, token).then(result => this.p2m.asDocumentSymbols(result))\n            }\n        }\n    }\n\n    registerCodeActionsProvider(selector: DocumentSelector, provider: CodeActionProvider): Disposable {\n        const codeActionProvider = this.createCodeActionProvider(selector, provider);\n        const providers = new DisposableCollection();\n        for (const language of getLanguages()) {\n            if (this.matchLanguage(selector, language)) {\n                providers.push(monaco.languages.registerCodeActionProvider(language, codeActionProvider));\n            }\n        }\n        return providers;\n    }\n\n    protected createCodeActionProvider(selector: DocumentSelector, provider: CodeActionProvider): monaco.languages.CodeActionProvider {\n        return {\n            provideCodeActions: (model, range, context, token) => {\n                if (!this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return [];\n                }\n                const params = this.m2p.asCodeActionParams(model, range, context);\n                return provider.provideCodeActions(params, token).then(result => this.p2m.asCodeActions(result));\n            }\n        }\n    }\n\n    registerCodeLensProvider(selector: DocumentSelector, provider: CodeLensProvider): Disposable {\n        const codeLensProvider = this.createCodeLensProvider(selector, provider);\n        const providers = new DisposableCollection();\n        for (const language of getLanguages()) {\n            if (this.matchLanguage(selector, language)) {\n                providers.push(monaco.languages.registerCodeLensProvider(language, codeLensProvider));\n            }\n        }\n        return providers;\n    }\n\n    protected createCodeLensProvider(selector: DocumentSelector, provider: CodeLensProvider): monaco.languages.CodeLensProvider {\n        return {\n            provideCodeLenses: (model, token) => {\n                if (!this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return [];\n                }\n                const params = this.m2p.asCodeLensParams(model);\n                return provider.provideCodeLenses(params, token).then(result => this.p2m.asCodeLenses(result))\n            },\n            resolveCodeLens: provider.resolveCodeLens ? (model, codeLens, token) => {\n                if (!this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return codeLens;\n                }\n                const protocolCodeLens = this.m2p.asCodeLens(codeLens);\n                return provider.resolveCodeLens!(protocolCodeLens, token).then(result => {\n                    const resolvedCodeLens = this.p2m.asCodeLens(result);\n                    Object.assign(codeLens, resolvedCodeLens);\n                    return codeLens;\n                });\n            } : ((m, codeLens, t) => codeLens)\n        }\n    }\n\n    registerDocumentFormattingEditProvider(selector: DocumentSelector, provider: DocumentFormattingEditProvider): Disposable {\n        const documentFormattingEditProvider = this.createDocumentFormattingEditProvider(selector, provider);\n        const providers = new DisposableCollection();\n        for (const language of getLanguages()) {\n            if (this.matchLanguage(selector, language)) {\n                providers.push(monaco.languages.registerDocumentFormattingEditProvider(language, documentFormattingEditProvider));\n            }\n        }\n        return providers;\n    }\n\n    protected createDocumentFormattingEditProvider(selector: DocumentSelector, provider: DocumentFormattingEditProvider): monaco.languages.DocumentFormattingEditProvider {\n        return {\n            provideDocumentFormattingEdits: (model, options, token) => {\n                if (!this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return [];\n                }\n                const params = this.m2p.asDocumentFormattingParams(model, options);\n                return provider.provideDocumentFormattingEdits(params, token).then(result => this.p2m.asTextEdits(result))\n            }\n        }\n    }\n\n    registerDocumentRangeFormattingEditProvider(selector: DocumentSelector, provider: DocumentRangeFormattingEditProvider): Disposable {\n        const documentRangeFormattingEditProvider = this.createDocumentRangeFormattingEditProvider(selector, provider);\n        const providers = new DisposableCollection();\n        for (const language of getLanguages()) {\n            if (this.matchLanguage(selector, language)) {\n                providers.push(monaco.languages.registerDocumentRangeFormattingEditProvider(language, documentRangeFormattingEditProvider));\n            }\n        }\n        return providers;\n    }\n\n    createDocumentRangeFormattingEditProvider(selector: DocumentSelector, provider: DocumentRangeFormattingEditProvider): monaco.languages.DocumentRangeFormattingEditProvider {\n        return {\n            provideDocumentRangeFormattingEdits: (model, range, options, token) => {\n                if (!this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return [];\n                }\n                const params = this.m2p.asDocumentRangeFormattingParams(model, range, options);\n                return provider.provideDocumentRangeFormattingEdits(params, token).then(result => this.p2m.asTextEdits(result))\n            }\n        }\n    }\n\n    registerOnTypeFormattingEditProvider(selector: DocumentSelector, provider: OnTypeFormattingEditProvider, firstTriggerCharacter: string, ...moreTriggerCharacter: string[]): Disposable {\n        const onTypeFormattingEditProvider = this.createOnTypeFormattingEditProvider(selector, provider, firstTriggerCharacter, ...moreTriggerCharacter);\n        const providers = new DisposableCollection();\n        for (const language of getLanguages()) {\n            if (this.matchLanguage(selector, language)) {\n                providers.push(monaco.languages.registerOnTypeFormattingEditProvider(language, onTypeFormattingEditProvider));\n            }\n        }\n        return providers;\n    }\n\n    protected createOnTypeFormattingEditProvider(selector: DocumentSelector, provider: OnTypeFormattingEditProvider, firstTriggerCharacter: string, ...moreTriggerCharacter: string[]): monaco.languages.OnTypeFormattingEditProvider {\n        const autoFormatTriggerCharacters = [firstTriggerCharacter].concat(moreTriggerCharacter)\n        return {\n            autoFormatTriggerCharacters,\n            provideOnTypeFormattingEdits: (model, position, ch, options, token) => {\n                if (!this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return [];\n                }\n                const params = this.m2p.asDocumentOnTypeFormattingParams(model, position, ch, options);\n                return provider.provideOnTypeFormattingEdits(params, token).then(result => this.p2m.asTextEdits(result))\n            }\n        }\n    }\n\n    registerRenameProvider(selector: DocumentSelector, provider: RenameProvider): Disposable {\n        const renameProvider = this.createRenameProvider(selector, provider);\n        const providers = new DisposableCollection();\n        for (const language of getLanguages()) {\n            if (this.matchLanguage(selector, language)) {\n                providers.push(monaco.languages.registerRenameProvider(language, renameProvider));\n            }\n        }\n        return providers;\n    }\n\n    protected createRenameProvider(selector: DocumentSelector, provider: RenameProvider): monaco.languages.RenameProvider {\n        return {\n            provideRenameEdits: (model, position, newName, token) => {\n                if (!this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return undefined!;\n                }\n                const params = this.m2p.asRenameParams(model, position, newName);\n                return provider.provideRenameEdits(params, token).then(result => this.p2m.asWorkspaceEdit(result))\n            }\n        }\n    }\n\n    registerDocumentLinkProvider(selector: DocumentSelector, provider: DocumentLinkProvider): Disposable {\n        const linkProvider = this.createDocumentLinkProvider(selector, provider);\n        const providers = new DisposableCollection();\n        for (const language of getLanguages()) {\n            if (this.matchLanguage(selector, language)) {\n                providers.push(monaco.languages.registerLinkProvider(language, linkProvider));\n            }\n        }\n        return providers;\n    }\n\n    protected createDocumentLinkProvider(selector: DocumentSelector, provider: DocumentLinkProvider): monaco.languages.LinkProvider {\n        return {\n            provideLinks: (model, token) => {\n                if (!this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return undefined!;\n                }\n                const params = this.m2p.asDocumentLinkParams(model);\n                return provider.provideDocumentLinks(params, token).then(result => this.p2m.asDocumentLinks(result));\n            },\n\n            resolveLink: (link: monaco.languages.ILink, token) => {\n                // resolve the link if the provider supports it\n                // and the link doesn't have a url set\n                if (provider.resolveDocumentLink && (link.url === null || link.url === undefined)) {\n                    const documentLink = this.m2p.asDocumentLink(link);\n                    return provider.resolveDocumentLink(documentLink, token).then(result => {\n                        const resolvedLink = this.p2m.asDocumentLink(result);\n                        Object.assign(link, resolvedLink);\n                        return link;\n                    });\n                }\n                return link;\n            }\n        }\n    }\n\n    registerImplementationProvider(selector: DocumentSelector, provider: ImplementationProvider): Disposable {\n        const implementationProvider = this.createImplementationProvider(selector, provider);\n        const providers = new DisposableCollection();\n        for (const language of getLanguages()) {\n            if (this.matchLanguage(selector, language)) {\n                providers.push(monaco.languages.registerImplementationProvider(language, implementationProvider));\n            }\n        }\n        return providers;\n    }\n\n    protected createImplementationProvider(selector: DocumentSelector, provider: ImplementationProvider): monaco.languages.ImplementationProvider {\n        return {\n            provideImplementation: (model, position, token) => {\n                if (!this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return undefined!;\n                }\n                const params = this.m2p.asTextDocumentPositionParams(model, position);\n                return provider.provideImplementation(params, token).then(result => this.p2m.asDefinitionResult(result));\n            }\n        }\n    }\n\n    registerTypeDefinitionProvider(selector: DocumentSelector, provider: TypeDefinitionProvider): Disposable {\n        const typeDefinitionProvider = this.createTypeDefinitionProvider(selector, provider);\n        const providers = new DisposableCollection();\n        for (const language of getLanguages()) {\n            if (this.matchLanguage(selector, language)) {\n                providers.push(monaco.languages.registerTypeDefinitionProvider(language, typeDefinitionProvider));\n            }\n        }\n        return providers;\n    }\n\n    protected createTypeDefinitionProvider(selector: DocumentSelector, provider: TypeDefinitionProvider): monaco.languages.TypeDefinitionProvider {\n        return {\n            provideTypeDefinition: (model, position, token) => {\n                if (!this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return undefined!;\n                }\n                const params = this.m2p.asTextDocumentPositionParams(model, position);\n                return provider.provideTypeDefinition(params, token).then(result => this.p2m.asDefinitionResult(result));\n            }\n        }\n    }\n\n    registerColorProvider(selector: DocumentSelector, provider: DocumentColorProvider): Disposable {\n        const documentColorProvider = this.createDocumentColorProvider(selector, provider);\n        const providers = new DisposableCollection();\n        for (const language of getLanguages()) {\n            if (this.matchLanguage(selector, language)) {\n                providers.push(monaco.languages.registerColorProvider(language, documentColorProvider));\n            }\n        }\n        return providers;\n    }\n\n    protected createDocumentColorProvider(selector: DocumentSelector, provider: DocumentColorProvider): monaco.languages.DocumentColorProvider {\n        return {\n            provideDocumentColors: (model, token) => {\n                if (!this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return [];\n                }\n                const textDocument = this.m2p.asTextDocumentIdentifier(model);\n                return provider.provideDocumentColors({ textDocument }, token).then(result => this.p2m.asColorInformations(result));\n            },\n            provideColorPresentations: (model, info, token) => {\n                if (!this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return [];\n                }\n                const textDocument = this.m2p.asTextDocumentIdentifier(model);\n                const range = this.m2p.asRange(info.range);\n                return provider.provideColorPresentations({\n                    textDocument,\n                    color: info.color,\n                    range\n                }, token).then(result => this.p2m.asColorPresentations(result))\n            }\n        }\n    }\n\n    registerFoldingRangeProvider(selector: DocumentSelector, provider: FoldingRangeProvider): Disposable {\n        const foldingRangeProvider = this.createFoldingRangeProvider(selector, provider);\n        const providers = new DisposableCollection();\n        for (const language of getLanguages()) {\n            if (this.matchLanguage(selector, language)) {\n                providers.push(monaco.languages.registerFoldingRangeProvider(language, foldingRangeProvider));\n            }\n        }\n        return providers;\n    }\n\n    protected createFoldingRangeProvider(selector: DocumentSelector, provider: FoldingRangeProvider): monaco.languages.FoldingRangeProvider {\n        return {\n            provideFoldingRanges: (model, context, token) => {\n                if (!this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return [];\n                }\n                const textDocument = this.m2p.asTextDocumentIdentifier(model);\n                return provider.provideFoldingRanges({\n                    textDocument\n                }, token).then(result => this.p2m.asFoldingRanges(result));\n            }\n        }\n    }\n\n    protected matchModel(selector: string | DocumentFilter | DocumentSelector, model: MonacoModelIdentifier): boolean {\n        if (Array.isArray(selector)) {\n            return selector.some(filter => this.matchModel(filter, model));\n        }\n        if (DocumentFilter.is(selector)) {\n            if (!!selector.language && selector.language !== model.languageId) {\n                return false;\n            }\n            if (!!selector.scheme && selector.scheme !== model.uri.scheme) {\n                return false;\n            }\n            if (!!selector.pattern && !testGlob(selector.pattern, model.uri.path)) {\n                return false;\n            }\n            return true;\n        }\n        return selector === model.languageId;\n    }\n\n    protected matchLanguage(selector: string | DocumentFilter | DocumentSelector, languageId: string): boolean {\n        if (Array.isArray(selector)) {\n            return selector.some(filter => this.matchLanguage(filter, languageId));\n        }\n\n        if (DocumentFilter.is(selector)) {\n            return !selector.language || selector.language === languageId;\n        }\n\n        return selector === languageId;\n    }\n\n}\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) 2018 TypeFox GmbH (http://www.typefox.io). All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nimport { MonacoToProtocolConverter, ProtocolToMonacoConverter } from \"./monaco-converter\";\nimport { MonacoCommands } from './monaco-commands';\nimport { MonacoLanguages } from \"./monaco-languages\";\nimport { MonacoWorkspace } from \"./monaco-workspace\";\nimport { ConsoleWindow } from \"./console-window\";\nimport { Services } from \"./services\";\n\nexport interface MonacoServices extends Services {\n    commands: MonacoCommands\n    languages: MonacoLanguages\n    workspace: MonacoWorkspace\n    window: ConsoleWindow\n}\nexport namespace MonacoServices {\n    export interface Options {\n        rootUri?: string\n    }\n    export type Provider = () => MonacoServices;\n    export function create(editor: monaco.editor.IStandaloneCodeEditor, options: Options = {}): MonacoServices {\n        const m2p = new MonacoToProtocolConverter();\n        const p2m = new ProtocolToMonacoConverter();\n        return {\n            commands: new MonacoCommands(editor),\n            languages: new MonacoLanguages(p2m, m2p),\n            workspace: new MonacoWorkspace(p2m, m2p, options.rootUri),\n            window: new ConsoleWindow()\n        }\n    }\n    export function install(editor: monaco.editor.IStandaloneCodeEditor, options: Options = {}): MonacoServices {\n        const services = create(editor, options);\n        Services.install(services);\n        return services;\n    }\n    export function get(): MonacoServices {\n        return Services.get() as MonacoServices;\n    }\n}","/* --------------------------------------------------------------------------------------------\n * Copyright (c) 2018 TypeFox GmbH (http://www.typefox.io). All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nimport { MonacoToProtocolConverter, ProtocolToMonacoConverter } from './monaco-converter';\nimport { Workspace, WorkspaceEdit, TextDocumentDidChangeEvent, TextDocument, Event, Emitter } from './services';\nimport IModel = monaco.editor.IModel;\nimport IIdentifiedSingleEditOperation = monaco.editor.IIdentifiedSingleEditOperation;\n\nexport class MonacoWorkspace implements Workspace {\n\n    protected readonly documents = new Map<string, TextDocument>();\n    protected readonly onDidOpenTextDocumentEmitter = new Emitter<TextDocument>();\n    protected readonly onDidCloseTextDocumentEmitter = new Emitter<TextDocument>();\n    protected readonly onDidChangeTextDocumentEmitter = new Emitter<TextDocumentDidChangeEvent>();\n\n    constructor(\n        protected readonly p2m: ProtocolToMonacoConverter,\n        protected readonly m2p: MonacoToProtocolConverter,\n        protected _rootUri: string | null = null) {\n        for (const model of monaco.editor.getModels()) {\n            this.addModel(model);\n        }\n        monaco.editor.onDidCreateModel(model => this.addModel(model));\n        monaco.editor.onWillDisposeModel(model => this.removeModel(model));\n    }\n\n    get rootUri() {\n        return this._rootUri;\n    }\n\n    protected removeModel(model: IModel): void {\n        const uri = model.uri.toString();\n        const document = this.documents.get(uri);\n        if (document) {\n            this.documents.delete(uri);\n            this.onDidCloseTextDocumentEmitter.fire(document);\n        }\n    }\n\n    protected addModel(model: IModel): void {\n        const uri = model.uri.toString();\n        const document = this.setModel(uri, model);\n        this.onDidOpenTextDocumentEmitter.fire(document)\n        model.onDidChangeContent(event =>\n            this.onDidChangeContent(uri, model, event)\n        );\n    }\n\n    protected onDidChangeContent(uri: string, model: IModel, event: monaco.editor.IModelContentChangedEvent) {\n        const textDocument = this.setModel(uri, model);\n        const contentChanges = [];\n        for (const change of event.changes) {\n            const range = this.m2p.asRange(change.range);\n            const rangeLength = change.rangeLength;\n            const text = change.text;\n            contentChanges.push({ range, rangeLength, text });\n        }\n        this.onDidChangeTextDocumentEmitter.fire({\n            textDocument,\n            contentChanges\n        });\n    }\n\n    protected setModel(uri: string, model: IModel): TextDocument {\n        const document = TextDocument.create(uri, model.getModeId(), model.getVersionId(), model.getValue());\n        this.documents.set(uri, document);\n        return document;\n    }\n\n    get textDocuments(): TextDocument[] {\n        return Array.from(this.documents.values());\n    }\n\n    get onDidOpenTextDocument(): Event<TextDocument> {\n        return this.onDidOpenTextDocumentEmitter.event;\n    }\n\n    get onDidCloseTextDocument(): Event<TextDocument> {\n        return this.onDidCloseTextDocumentEmitter.event;\n    }\n\n    get onDidChangeTextDocument(): Event<TextDocumentDidChangeEvent> {\n        return this.onDidChangeTextDocumentEmitter.event;\n    }\n\n    public applyEdit(workspaceEdit: WorkspaceEdit): Promise<boolean> {\n        const edit: monaco.languages.WorkspaceEdit = this.p2m.asWorkspaceEdit(workspaceEdit);\n\n        // Collect all referenced models\n        const models: {[uri: string]: monaco.editor.IModel} = edit.edits.reduce(\n            (acc: {[uri: string]: monaco.editor.IModel}, currentEdit) => {\n                const textEdit = currentEdit as monaco.languages.ResourceTextEdit;\n                acc[textEdit.resource.toString()] = monaco.editor.getModel(textEdit.resource);\n                return acc;\n            }, {}\n        );\n\n        // If any of the models do not exist, refuse to apply the edit.\n        if (!Object.keys(models).map(uri => models[uri]).every(model => !!model)) {\n            return Promise.resolve(false);\n        }\n\n        // Group edits by resource so we can batch them when applying\n        const editsByResource: {[uri: string]: IIdentifiedSingleEditOperation[]} = edit.edits.reduce(\n            (acc: {[uri: string]: IIdentifiedSingleEditOperation[]}, currentEdit) => {\n                const textEdit = currentEdit as monaco.languages.ResourceTextEdit;\n                const uri = textEdit.resource.toString();\n                if (!(uri in acc)) {\n                    acc[uri] = [];\n                }\n                const operations = textEdit.edits.map(edit => {\n                    return {\n                        range: monaco.Range.lift(edit.range),\n                        text: edit.text\n                    }\n                });\n                acc[uri].push(...operations);\n                return acc;\n            }, {}\n        );\n\n        // Apply edits for each resource\n        Object.keys(editsByResource).forEach(uri => {\n            models[uri].pushEditOperations(\n                [],  // Do not try and preserve editor selections.\n                editsByResource[uri].map(resourceEdit => {\n                    return {\n                        identifier: {major: 1, minor: 0},\n                        range: resourceEdit.range,\n                        text: resourceEdit.text,\n                        forceMoveMarkers: true,\n                    };\n                }),\n                () => [],  // Do not try and preserve editor selections.\n            );\n        });\n        return Promise.resolve(true);\n    }\n\n}\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) 2018 TypeFox GmbH (http://www.typefox.io). All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\n\nimport {\n    DocumentSelector, MessageActionItem, MessageType,\n    TextDocumentPositionParams, ReferenceParams, CodeActionParams, CodeLensParams, DocumentFormattingParams,\n    DocumentRangeFormattingParams, DocumentOnTypeFormattingParams, RenameParams, DocumentLinkParams,\n    WorkspaceClientCapabilities, DidChangeTextDocumentParams, Diagnostic, TextDocument, CompletionItem, CompletionList,\n    Hover, SignatureHelp, Definition, Location, DocumentHighlight,\n    SymbolInformation, Command, CodeLens, TextEdit, WorkspaceEdit,\n    DocumentLink, TextDocumentSaveReason, DocumentSymbolParams,\n    WorkspaceSymbolParams, TextDocumentContentChangeEvent, CompletionParams,\n    ColorInformation, ColorPresentation, DocumentColorParams, ColorPresentationParams,\n    FoldingRange, FoldingRangeRequestParam, DocumentFilter, DocumentSymbol, CodeAction\n} from 'vscode-languageserver-protocol/lib/main';\n\nimport {\n    Disposable, CancellationToken, Event, Emitter\n} from 'vscode-jsonrpc';\n\nimport Uri from 'vscode-uri';\n\nexport {\n    Disposable, CancellationToken, Event, Emitter\n}\nexport * from 'vscode-languageserver-protocol/lib/main';\n\nexport interface Services {\n    languages: Languages;\n    workspace: Workspace;\n    commands?: Commands;\n    window?: Window;\n}\nexport namespace Services {\n    const global = window as any;\n    const symbol = Symbol('Services');\n    export type Provider = () => Services;\n    export const get: Provider = () => {\n        const services = global[symbol];\n        if (!services) {\n            throw new Error('Language Client services has not been installed');\n        }\n        return services;\n    }\n    export function install(services: Services): void {\n        if (global[symbol]) {\n            console.error(new Error('Language Client services has been overriden'));\n        }\n        global[symbol] = services;\n    }\n}\n\nexport function isDocumentSelector(selector: any): selector is DocumentSelector {\n    if (!selector || !Array.isArray(selector)) {\n        return false;\n    }\n    return selector.every(value => typeof value === 'string' || DocumentFilter.is(value));\n}\n\nexport interface DiagnosticCollection extends Disposable {\n    set(uri: string, diagnostics: Diagnostic[]): void;\n}\n\nexport interface CompletionItemProvider {\n    provideCompletionItems(params: CompletionParams, token: CancellationToken): Thenable<CompletionItem[] | CompletionList>;\n    resolveCompletionItem?(item: CompletionItem, token: CancellationToken): Thenable<CompletionItem>;\n}\n\nexport interface HoverProvider {\n    provideHover(params: TextDocumentPositionParams, token: CancellationToken): Thenable<Hover>;\n}\n\nexport interface SignatureHelpProvider {\n    provideSignatureHelp(params: TextDocumentPositionParams, token: CancellationToken): Thenable<SignatureHelp>;\n}\n\nexport interface DefinitionProvider {\n    provideDefinition(params: TextDocumentPositionParams, token: CancellationToken): Thenable<Definition>;\n}\n\nexport interface ReferenceProvider {\n    provideReferences(params: ReferenceParams, token: CancellationToken): Thenable<Location[]>;\n}\n\nexport interface DocumentHighlightProvider {\n    provideDocumentHighlights(params: TextDocumentPositionParams, token: CancellationToken): Thenable<DocumentHighlight[]>;\n}\n\nexport interface DocumentSymbolProvider {\n    provideDocumentSymbols(params: DocumentSymbolParams, token: CancellationToken): Thenable<SymbolInformation[] | DocumentSymbol[]>;\n}\n\nexport interface WorkspaceSymbolProvider {\n    provideWorkspaceSymbols(params: WorkspaceSymbolParams, token: CancellationToken): Thenable<SymbolInformation[]>;\n}\n\nexport interface CodeActionProvider {\n    provideCodeActions(params: CodeActionParams, token: CancellationToken): Thenable<(Command| CodeAction)[]>;\n}\n\nexport interface CodeLensProvider {\n    provideCodeLenses(params: CodeLensParams, token: CancellationToken): Thenable<CodeLens[]>;\n    resolveCodeLens?(codeLens: CodeLens, token: CancellationToken): Thenable<CodeLens>;\n}\n\nexport interface DocumentFormattingEditProvider {\n    provideDocumentFormattingEdits(params: DocumentFormattingParams, token: CancellationToken): Thenable<TextEdit[]>;\n}\n\nexport interface DocumentRangeFormattingEditProvider {\n    provideDocumentRangeFormattingEdits(params: DocumentRangeFormattingParams, token: CancellationToken): Thenable<TextEdit[]>;\n}\n\nexport interface OnTypeFormattingEditProvider {\n    provideOnTypeFormattingEdits(params: DocumentOnTypeFormattingParams, token: CancellationToken): Thenable<TextEdit[]>;\n}\n\nexport interface RenameProvider {\n    provideRenameEdits(params: RenameParams, token: CancellationToken): Thenable<WorkspaceEdit>;\n}\n\nexport interface DocumentLinkProvider {\n    provideDocumentLinks(params: DocumentLinkParams, token: CancellationToken): Thenable<DocumentLink[]>;\n    resolveDocumentLink?(link: DocumentLink, token: CancellationToken): Thenable<DocumentLink>;\n}\n\nexport interface DocumentIdentifier {\n    uri: string;\n    languageId: string;\n}\nexport namespace DocumentIdentifier {\n    export function is(arg: any): arg is DocumentIdentifier {\n        return !!arg && ('uri' in arg) && ('languageId' in arg);\n    }\n}\n\nexport interface ImplementationProvider {\n    provideImplementation(params: TextDocumentPositionParams, token: CancellationToken): Thenable<Definition>;\n}\n\nexport interface TypeDefinitionProvider {\n    provideTypeDefinition(params: TextDocumentPositionParams, token: CancellationToken): Thenable<Definition>;\n}\n\nexport interface DocumentColorProvider {\n    provideDocumentColors(params: DocumentColorParams, token: CancellationToken): Thenable<ColorInformation[]>;\n    provideColorPresentations(params: ColorPresentationParams, token: CancellationToken): Thenable<ColorPresentation[]>;\n}\n\nexport interface FoldingRangeProvider {\n    provideFoldingRanges(params: FoldingRangeRequestParam, token: CancellationToken): Thenable<FoldingRange[]>;\n}\n\nexport interface Languages {\n    match(selector: DocumentSelector, document: DocumentIdentifier): boolean;\n    createDiagnosticCollection?(name?: string): DiagnosticCollection;\n    registerCompletionItemProvider?(selector: DocumentSelector, provider: CompletionItemProvider, ...triggerCharacters: string[]): Disposable;\n    registerHoverProvider?(selector: DocumentSelector, provider: HoverProvider): Disposable;\n    registerSignatureHelpProvider?(selector: DocumentSelector, provider: SignatureHelpProvider, ...triggerCharacters: string[]): Disposable;\n    registerDefinitionProvider?(selector: DocumentSelector, provider: DefinitionProvider): Disposable;\n    registerReferenceProvider?(selector: DocumentSelector, provider: ReferenceProvider): Disposable;\n    registerDocumentHighlightProvider?(selector: DocumentSelector, provider: DocumentHighlightProvider): Disposable;\n    registerDocumentSymbolProvider?(selector: DocumentSelector, provider: DocumentSymbolProvider): Disposable;\n    registerWorkspaceSymbolProvider?(provider: WorkspaceSymbolProvider): Disposable;\n    registerCodeActionsProvider?(selector: DocumentSelector, provider: CodeActionProvider): Disposable;\n    registerCodeLensProvider?(selector: DocumentSelector, provider: CodeLensProvider): Disposable;\n    registerDocumentFormattingEditProvider?(selector: DocumentSelector, provider: DocumentFormattingEditProvider): Disposable;\n    registerDocumentRangeFormattingEditProvider?(selector: DocumentSelector, provider: DocumentRangeFormattingEditProvider): Disposable;\n    registerOnTypeFormattingEditProvider?(selector: DocumentSelector, provider: OnTypeFormattingEditProvider, firstTriggerCharacter: string, ...moreTriggerCharacter: string[]): Disposable;\n    registerRenameProvider?(selector: DocumentSelector, provider: RenameProvider): Disposable;\n    registerDocumentLinkProvider?(selector: DocumentSelector, provider: DocumentLinkProvider): Disposable;\n    registerImplementationProvider?(selector: DocumentSelector, provider: ImplementationProvider): Disposable;\n    registerTypeDefinitionProvider?(selector: DocumentSelector, provider: TypeDefinitionProvider): Disposable;\n    registerColorProvider?(selector: DocumentSelector, provider: DocumentColorProvider): Disposable;\n    registerFoldingRangeProvider?(selector: DocumentSelector, provider: FoldingRangeProvider): Disposable;\n}\n\nexport interface TextDocumentDidChangeEvent {\n    readonly textDocument: TextDocument;\n    readonly contentChanges: TextDocumentContentChangeEvent[];\n}\n\nexport interface TextDocumentWillSaveEvent {\n    readonly textDocument: TextDocument;\n    readonly reason: TextDocumentSaveReason;\n    waitUntil?(thenable: Thenable<TextEdit[]>): void;\n}\n\nexport enum ConfigurationTarget {\n    Global = 1,\n    Workspace = 2,\n    WorkspaceFolder = 3\n}\n\nexport interface WorkspaceConfiguration {\n    toJSON(): any;\n    get<T>(section: string): T | undefined;\n    get<T>(section: string, defaultValue: T): T;\n    has(section: string): boolean;\n    readonly [key: string]: any;\n}\n\nexport interface FileSystemWatcher extends Disposable {\n    readonly onDidCreate: Event<Uri>;\n    readonly onDidChange: Event<Uri>;\n    readonly onDidDelete: Event<Uri>;\n}\n\nexport interface ConfigurationChangeEvent {\n    affectsConfiguration(section: string): boolean;\n}\nexport interface Configurations {\n    getConfiguration(section?: string, resource?: string): WorkspaceConfiguration;\n    readonly onDidChangeConfiguration: Event<ConfigurationChangeEvent>;\n}\n\nexport interface Workspace {\n    readonly capabilities?: WorkspaceClientCapabilities;\n    readonly rootPath?: string | null;\n    readonly rootUri: string | null;\n    readonly textDocuments: TextDocument[];\n    readonly onDidOpenTextDocument: Event<TextDocument>;\n    readonly onDidCloseTextDocument: Event<TextDocument>;\n    readonly onDidChangeTextDocument: Event<DidChangeTextDocumentParams>;\n    readonly configurations?: Configurations;\n    readonly onWillSaveTextDocument?: Event<TextDocumentWillSaveEvent>;\n    readonly onDidSaveTextDocument?: Event<TextDocument>;\n    applyEdit(changes: WorkspaceEdit): Thenable<boolean>;\n    createFileSystemWatcher?(globPattern: string, ignoreCreateEvents?: boolean, ignoreChangeEvents?: boolean, ignoreDeleteEvents?: boolean): FileSystemWatcher;\n}\n\nexport interface Commands {\n    registerCommand(command: string, callback: (...args: any[]) => any, thisArg?: any): Disposable;\n}\n\nexport interface OutputChannel extends Disposable {\n    append(value: string): void;\n    appendLine(line: string): void;\n    show(preserveFocus?: boolean): void;\n}\n\nexport interface Window {\n    showMessage<T extends MessageActionItem>(type: MessageType, message: string, ...actions: T[]): Thenable<T | undefined>;\n    createOutputChannel?(name: string): OutputChannel;\n}","/* --------------------------------------------------------------------------------------------\n * Copyright (c) 2018 TypeFox GmbH (http://www.typefox.io). All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n\nimport * as vscode from \"vscode\";\nimport URI from \"vscode-uri\"\nimport { Disposable } from \"./disposable\";\nimport {\n    Services, Event, Diagnostic, WorkspaceEdit, isDocumentSelector,\n    MessageActionItem, MessageType, OutputChannel, CompletionTriggerKind, DocumentIdentifier\n} from \"./services\";\n\nexport function createVSCodeApi(servicesProvider: Services.Provider): typeof vscode {\n    const unsupported = () => { throw new Error('unsupported') };\n    const Uri: typeof vscode.Uri = URI;\n    class CompletionItem implements vscode.CompletionItem {\n        constructor(public label: string, public kind?: vscode.CompletionItemKind) { }\n    }\n    class CodeLens implements vscode.CodeLens {\n        constructor(\n            public range: vscode.Range,\n            public command?: vscode.Command\n        ) { }\n\n        get isResolved(): boolean {\n            return !!this.command;\n        }\n    }\n    class DocumentLink implements vscode.DocumentLink {\n        constructor(public range: vscode.Range, public target?: vscode.Uri) { }\n    }\n    class CodeActionKind implements vscode.CodeActionKind {\n        static Empty = new CodeActionKind();\n        static QuickFix = new CodeActionKind('quickfix');\n        static Refactor = new CodeActionKind('refactor');\n        static RefactorExtract = new CodeActionKind('refactor.extract');\n        static RefactorInline = new CodeActionKind('refactor.inline');\n        static RefactorRewrite = new CodeActionKind('refactor.rewrite');\n        static Source = new CodeActionKind('source');\n        static SourceOrganizeImports = new CodeActionKind('source.organizeImports');\n        private constructor(readonly value?: string) { }\n        append = unsupported\n        contains = unsupported\n    }\n    const workspace: typeof vscode.workspace = {\n        createFileSystemWatcher(globPattern, ignoreCreateEvents, ignoreChangeEvents, ignoreDeleteEvents): vscode.FileSystemWatcher {\n            const services = servicesProvider();\n            if (typeof globPattern !== 'string') {\n                throw new Error('unsupported');\n            }\n            if (services.workspace.createFileSystemWatcher) {\n                const watcher = services.workspace.createFileSystemWatcher(globPattern, ignoreCreateEvents, ignoreChangeEvents, ignoreDeleteEvents);\n                return Object.assign(watcher, {\n                    ignoreCreateEvents: !!ignoreCreateEvents,\n                    ignoreChangeEvents: !!ignoreChangeEvents,\n                    ignoreDeleteEvents: !!ignoreDeleteEvents,\n                });\n            }\n            return {\n                ignoreCreateEvents: !!ignoreCreateEvents,\n                ignoreChangeEvents: !!ignoreChangeEvents,\n                ignoreDeleteEvents: !!ignoreDeleteEvents,\n                onDidCreate: Event.None,\n                onDidChange: Event.None,\n                onDidDelete: Event.None,\n                dispose: () => { }\n            }\n        },\n        applyEdit: async (edit) => {\n            const services = servicesProvider();\n            if (WorkspaceEdit.is(edit)) {\n                return services.workspace.applyEdit(edit);\n            }\n            throw new Error('unsupported');\n        },\n        getConfiguration(section, resource): vscode.WorkspaceConfiguration {\n            const { workspace } = servicesProvider();\n            const configuration = workspace.configurations ?\n                workspace.configurations.getConfiguration(section, resource ? resource.toString() : undefined) :\n                undefined;\n            const result: vscode.WorkspaceConfiguration = {\n                get: (section: string, defaultValue?: any) => {\n                    return configuration ? configuration.get(section, defaultValue) : defaultValue;\n                },\n                has: (section: string) => {\n                    return configuration ? configuration.has(section) : false;\n                },\n                inspect: unsupported,\n                update: unsupported\n            };\n            return Object.assign(result, {\n                toJSON: () => configuration ? configuration.toJSON() : undefined\n            });\n        },\n        get onDidChangeConfiguration(): typeof vscode.workspace.onDidChangeConfiguration {\n            const services = servicesProvider();\n            if (services.workspace.configurations) {\n                return services.workspace.configurations.onDidChangeConfiguration;\n            }\n            return Event.None;\n        },\n        get workspaceFolders(): typeof vscode.workspace.workspaceFolders {\n            const services = servicesProvider();\n            const rootUri = services.workspace.rootUri;\n            if (!rootUri) {\n                return undefined;\n            }\n            const uri = Uri.parse(rootUri);\n            return [{\n                uri,\n                index: 0,\n                name: uri.toString()\n            }];\n        },\n        get textDocuments(): typeof vscode.workspace.textDocuments {\n            const services = servicesProvider();\n            return services.workspace.textDocuments as any;\n        },\n        get onDidOpenTextDocument(): typeof vscode.workspace.onDidOpenTextDocument {\n            const services = servicesProvider();\n            return services.workspace.onDidOpenTextDocument as any;\n        },\n        get onDidCloseTextDocument(): typeof vscode.workspace.onDidCloseTextDocument {\n            const services = servicesProvider();\n            return services.workspace.onDidCloseTextDocument as any;\n        },\n        get onDidChangeTextDocument(): typeof vscode.workspace.onDidChangeTextDocument {\n            const services = servicesProvider();\n            return (listener: (e: vscode.TextDocumentChangeEvent) => any, thisArgs?: any, disposables?: Disposable[]): Disposable => {\n                return services.workspace.onDidChangeTextDocument(({ textDocument, contentChanges }) => {\n                    const l: (e: vscode.TextDocumentChangeEvent) => any = listener.bind(thisArgs);\n                    l({\n                        document: <any>textDocument,\n                        contentChanges: <any>contentChanges\n                    });\n                }, undefined, disposables);\n            }\n        },\n        get onWillSaveTextDocument(): typeof vscode.workspace.onWillSaveTextDocument {\n            const services = servicesProvider();\n            const onWillSaveTextDocument = services.workspace.onWillSaveTextDocument;\n            if (!onWillSaveTextDocument) {\n                return Event.None;\n            }\n            return (listener: (e: vscode.TextDocumentWillSaveEvent) => any, thisArgs?: any, disposables?: Disposable[]): Disposable => {\n                return onWillSaveTextDocument(({ textDocument, reason, waitUntil }) => {\n                    const l: (e: vscode.TextDocumentWillSaveEvent) => any = listener.bind(thisArgs);\n                    l({\n                        document: <any>textDocument,\n                        reason: reason,\n                        waitUntil: (edits: Thenable<vscode.TextEdit[]>) => {\n                            if (waitUntil) {\n                                waitUntil(edits);\n                            }\n                        }\n                    });\n                }, undefined, disposables);\n            }\n        },\n        get onDidSaveTextDocument(): typeof vscode.workspace.onDidSaveTextDocument {\n            const services = servicesProvider();\n            return (services.workspace.onDidSaveTextDocument as any) || Event.None;\n        },\n        onDidChangeWorkspaceFolders: Event.None,\n        getWorkspaceFolder: unsupported,\n        asRelativePath: unsupported,\n        updateWorkspaceFolders: unsupported,\n        findFiles: unsupported,\n        saveAll: unsupported,\n        openTextDocument: unsupported,\n        registerTextDocumentContentProvider: unsupported,\n        registerTaskProvider: unsupported,\n        registerFileSystemProvider: unsupported,\n        rootPath: undefined,\n        name: undefined\n    };\n    const languages: typeof vscode.languages = {\n        match(selector, document): number {\n            if (!isDocumentSelector(selector)) {\n                throw new Error('unexpected selector: ' + JSON.stringify(selector));\n            }\n            if (!DocumentIdentifier.is(document)) {\n                throw new Error('unexpected document: ' + JSON.stringify(document));\n            }\n            const services = servicesProvider();\n            const result = services.languages.match(selector, document);\n            return result ? 1 : 0;\n        },\n        createDiagnosticCollection(name?: string): vscode.DiagnosticCollection {\n            const services = servicesProvider();\n            const collection = services.languages.createDiagnosticCollection ?\n                services.languages.createDiagnosticCollection(name) : undefined;\n            return {\n                name: name || 'default',\n                set(arg0: vscode.Uri | [vscode.Uri, vscode.Diagnostic[] | undefined][], arg1?: vscode.Diagnostic[] | undefined): void {\n                    if (collection) {\n                        if (arg1) {\n                            collection.set(arg0.toString(), arg1 as Diagnostic[]);\n                        } else {\n                            collection.set(arg0.toString(), []);\n                        }\n                    }\n                },\n                dispose(): void {\n                    if (collection) {\n                        collection.dispose();\n                    }\n                },\n                delete: unsupported,\n                clear: unsupported,\n                forEach: unsupported,\n                get: unsupported,\n                has: unsupported\n            }\n        },\n        registerCompletionItemProvider(selector, provider, ...triggerCharacters) {\n            if (!isDocumentSelector(selector)) {\n                throw new Error('unexpected selector: ' + JSON.stringify(selector));\n            }\n            const { languages } = servicesProvider();\n            if (!languages.registerCompletionItemProvider) {\n                return Disposable.create(() => { });\n            }\n            const resolveCompletionItem = provider.resolveCompletionItem;\n            return languages.registerCompletionItemProvider(selector, {\n                provideCompletionItems({ textDocument, position, context }, token) {\n                    return provider.provideCompletionItems(<any>textDocument, <any>position, token, context || {\n                        triggerKind: CompletionTriggerKind.Invoked\n                    }) as any;\n                },\n                resolveCompletionItem: resolveCompletionItem ? (item, token) => {\n                    return resolveCompletionItem(item as any, token) as any;\n                } : undefined\n            }, ...triggerCharacters);\n        },\n        registerCodeActionsProvider(selector, provider) {\n            if (!isDocumentSelector(selector)) {\n                throw new Error('unexpected selector: ' + JSON.stringify(selector));\n            }\n            const { languages } = servicesProvider();\n            if (!languages.registerCodeActionsProvider) {\n                return Disposable.create(() => { });\n            }\n            return languages.registerCodeActionsProvider(selector, {\n                provideCodeActions({ textDocument, range, context }, token) {\n                    return provider.provideCodeActions(<any>textDocument, <any>range, <any>context, token) as any;\n                }\n            });\n        },\n        registerCodeLensProvider(selector, provider) {\n            if (!isDocumentSelector(selector)) {\n                throw new Error('unexpected selector: ' + JSON.stringify(selector));\n            }\n            const { languages } = servicesProvider();\n            if (!languages.registerCodeLensProvider) {\n                return Disposable.create(() => { });\n            }\n            const resolveCodeLens = provider.resolveCodeLens;\n            return languages.registerCodeLensProvider(selector, {\n                provideCodeLenses({ textDocument }, token) {\n                    return provider.provideCodeLenses(<any>textDocument, token) as any;\n                },\n                resolveCodeLens: resolveCodeLens ? (codeLens, token) => {\n                    return resolveCodeLens(<any>codeLens, token) as any;\n                } : undefined\n            });\n        },\n        registerDefinitionProvider(selector, provider) {\n            if (!isDocumentSelector(selector)) {\n                throw new Error('unexpected selector: ' + JSON.stringify(selector));\n            }\n            const { languages } = servicesProvider();\n            if (!languages.registerDefinitionProvider) {\n                return Disposable.create(() => { });\n            }\n            return languages.registerDefinitionProvider(selector, {\n                provideDefinition({ textDocument, position }, token) {\n                    return provider.provideDefinition(<any>textDocument, <any>position, token) as any;\n                }\n            });\n        },\n        registerImplementationProvider(selector, provider) {\n            if (!isDocumentSelector(selector)) {\n                throw new Error('unexpected selector: ' + JSON.stringify(selector));\n            }\n            const { languages } = servicesProvider();\n            if (!languages.registerImplementationProvider) {\n                return Disposable.create(() => { });\n            }\n            return languages.registerImplementationProvider(selector, {\n                provideImplementation({ textDocument, position }, token) {\n                    return provider.provideImplementation(<any>textDocument, <any>position, token) as any;\n                }\n            });\n        },\n        registerTypeDefinitionProvider(selector, provider) {\n            if (!isDocumentSelector(selector)) {\n                throw new Error('unexpected selector: ' + JSON.stringify(selector));\n            }\n            const { languages } = servicesProvider();\n            if (!languages.registerTypeDefinitionProvider) {\n                return Disposable.create(() => { });\n            }\n            return languages.registerTypeDefinitionProvider(selector, {\n                provideTypeDefinition({ textDocument, position }, token) {\n                    return provider.provideTypeDefinition(<any>textDocument, <any>position, token) as any;\n                }\n            });\n        },\n        registerHoverProvider(selector, provider) {\n            if (!isDocumentSelector(selector)) {\n                throw new Error('unexpected selector: ' + JSON.stringify(selector));\n            }\n            const { languages } = servicesProvider();\n            if (languages.registerHoverProvider) {\n                return languages.registerHoverProvider(selector, {\n                    provideHover({ textDocument, position }, token) {\n                        return provider.provideHover(<any>textDocument, <any>position, token) as any;\n                    }\n                });\n            }\n            return Disposable.create(() => { });\n        },\n        registerDocumentHighlightProvider(selector, provider) {\n            if (!isDocumentSelector(selector)) {\n                throw new Error('unexpected selector: ' + JSON.stringify(selector));\n            }\n            const { languages } = servicesProvider();\n            if (!languages.registerDocumentHighlightProvider) {\n                return Disposable.create(() => { });\n            }\n            return languages.registerDocumentHighlightProvider(selector, {\n                provideDocumentHighlights({ textDocument, position }, token) {\n                    return provider.provideDocumentHighlights(<any>textDocument, <any>position, token) as any;\n                }\n            });\n        },\n        registerDocumentSymbolProvider(selector, provider) {\n            if (!isDocumentSelector(selector)) {\n                throw new Error('unexpected selector: ' + JSON.stringify(selector));\n            }\n            const { languages } = servicesProvider();\n            if (!languages.registerDocumentSymbolProvider) {\n                return Disposable.create(() => { });\n            }\n            return languages.registerDocumentSymbolProvider(selector, {\n                provideDocumentSymbols({ textDocument }, token) {\n                    return provider.provideDocumentSymbols(<any>textDocument, token) as any;\n                }\n            });\n        },\n        registerWorkspaceSymbolProvider(provider) {\n            const { languages } = servicesProvider();\n            if (!languages.registerWorkspaceSymbolProvider) {\n                return Disposable.create(() => { });\n            }\n            return languages.registerWorkspaceSymbolProvider({\n                provideWorkspaceSymbols({ query }, token) {\n                    return provider.provideWorkspaceSymbols(query, token) as any;\n                }\n            });\n        },\n        registerReferenceProvider(selector, provider) {\n            if (!isDocumentSelector(selector)) {\n                throw new Error('unexpected selector: ' + JSON.stringify(selector));\n            }\n            const { languages } = servicesProvider();\n            if (!languages.registerReferenceProvider) {\n                return Disposable.create(() => { });\n            }\n            return languages.registerReferenceProvider(selector, {\n                provideReferences({ textDocument, position, context }, token) {\n                    return provider.provideReferences(<any>textDocument, <any>position, context, token) as any\n                }\n            });\n        },\n        registerRenameProvider(selector, provider) {\n            if (!isDocumentSelector(selector)) {\n                throw new Error('unexpected selector: ' + JSON.stringify(selector));\n            }\n            const { languages } = servicesProvider();\n            if (!languages.registerRenameProvider) {\n                return Disposable.create(() => { });\n            }\n            return languages.registerRenameProvider(selector, {\n                provideRenameEdits({ textDocument, position, newName }, token) {\n                    return provider.provideRenameEdits(<any>textDocument, <any>position, newName, token) as any\n                }\n            });\n        },\n        registerDocumentFormattingEditProvider(selector, provider) {\n            if (!isDocumentSelector(selector)) {\n                throw new Error('unexpected selector: ' + JSON.stringify(selector));\n            }\n            const { languages } = servicesProvider();\n            if (!languages.registerDocumentFormattingEditProvider) {\n                return Disposable.create(() => { });\n            }\n            return languages.registerDocumentFormattingEditProvider(selector, {\n                provideDocumentFormattingEdits({ textDocument, options }, token) {\n                    return provider.provideDocumentFormattingEdits(<any>textDocument, options, token) as any\n                }\n            });\n        },\n        registerDocumentRangeFormattingEditProvider(selector, provider) {\n            if (!isDocumentSelector(selector)) {\n                throw new Error('unexpected selector: ' + JSON.stringify(selector));\n            }\n            const { languages } = servicesProvider();\n            if (!languages.registerDocumentRangeFormattingEditProvider) {\n                return Disposable.create(() => { });\n            }\n            return languages.registerDocumentRangeFormattingEditProvider(selector, {\n                provideDocumentRangeFormattingEdits({ textDocument, range, options }, token) {\n                    return provider.provideDocumentRangeFormattingEdits(<any>textDocument, <any>range, options, token) as any\n                }\n            });\n        },\n        registerOnTypeFormattingEditProvider(selector, provider, firstTriggerCharacter, ...moreTriggerCharacter) {\n            if (!isDocumentSelector(selector)) {\n                throw new Error('unexpected selector: ' + JSON.stringify(selector));\n            }\n            const { languages } = servicesProvider();\n            if (!languages.registerOnTypeFormattingEditProvider) {\n                return Disposable.create(() => { });\n            }\n            return languages.registerOnTypeFormattingEditProvider(selector, {\n                provideOnTypeFormattingEdits({ textDocument, position, ch, options }, token) {\n                    return provider.provideOnTypeFormattingEdits(<any>textDocument, <any>position, ch, options, token) as any\n                }\n            }, firstTriggerCharacter, ...moreTriggerCharacter);\n        },\n        registerSignatureHelpProvider(selector, provider, ...triggerCharacter) {\n            if (!isDocumentSelector(selector)) {\n                throw new Error('unexpected selector: ' + JSON.stringify(selector));\n            }\n            const { languages } = servicesProvider();\n            if (!languages.registerSignatureHelpProvider) {\n                return Disposable.create(() => { });\n            }\n            return languages.registerSignatureHelpProvider(selector, {\n                provideSignatureHelp({ textDocument, position }, token) {\n                    return provider.provideSignatureHelp(<any>textDocument, <any>position, token) as any\n                }\n            }, ...triggerCharacter);\n        },\n        registerDocumentLinkProvider(selector, provider) {\n            if (!isDocumentSelector(selector)) {\n                throw new Error('unexpected selector: ' + JSON.stringify(selector));\n            }\n            const { languages } = servicesProvider();\n            if (!languages.registerDocumentLinkProvider) {\n                return Disposable.create(() => { });\n            }\n            const resolveDocumentLink = provider.resolveDocumentLink;\n            return languages.registerDocumentLinkProvider(selector, {\n                provideDocumentLinks({ textDocument }, token) {\n                    return provider.provideDocumentLinks(<any>textDocument, token) as any\n                },\n                resolveDocumentLink: resolveDocumentLink ? (link, token) => {\n                    return resolveDocumentLink(<any>link, token) as any\n                } : undefined\n            });\n        },\n        registerColorProvider(selector, provider) {\n            if (!isDocumentSelector(selector)) {\n                throw new Error('unexpected selector: ' + JSON.stringify(selector));\n            }\n            const { languages } = servicesProvider();\n            if (!languages.registerColorProvider) {\n                return Disposable.create(() => { });\n            }\n            return languages.registerColorProvider(selector, {\n                provideDocumentColors({ textDocument }, token) {\n                    return provider.provideDocumentColors(<any>textDocument, token) as any\n                },\n                provideColorPresentations({ textDocument, color, range }, token) {\n                    return provider.provideColorPresentations(color, {\n                        document: <any>textDocument,\n                        range: <any>range\n                    }, token) as any\n                }\n            });\n        },\n        registerFoldingRangeProvider(selector, provider) {\n            if (!isDocumentSelector(selector)) {\n                throw new Error('unexpected selector: ' + JSON.stringify(selector));\n            }\n            const { languages } = servicesProvider();\n            if (!languages.registerFoldingRangeProvider) {\n                return Disposable.create(() => { });\n            }\n            return languages.registerFoldingRangeProvider(selector, {\n                provideFoldingRanges({ textDocument }, token) {\n                    return provider.provideFoldingRanges(<any>textDocument, {}, token) as any;\n                }\n            });\n        },\n        getLanguages: unsupported,\n        getDiagnostics: unsupported,\n        setLanguageConfiguration: unsupported,\n        onDidChangeDiagnostics: unsupported\n    };\n    function showMessage(type: MessageType, arg0: any, arg1: any): Thenable<undefined | MessageActionItem> {\n        if (typeof arg0 !== \"string\") {\n            throw new Error('unexpected message: ' + JSON.stringify(arg0));\n        }\n        const message = arg0;\n        if (arg1 !== undefined && !Array.isArray(arg1)) {\n            throw new Error('unexpected actions: ' + JSON.stringify(arg1));\n        }\n        const actions = arg1 || [];\n        const { window } = servicesProvider();\n        if (!window) {\n            return Promise.resolve(undefined);\n        }\n        return window.showMessage(type, message, ...actions);\n    }\n    const window: typeof vscode.window = {\n        showInformationMessage: showMessage.bind(undefined, MessageType.Info),\n        showWarningMessage: showMessage.bind(undefined, MessageType.Warning),\n        showErrorMessage: showMessage.bind(undefined, MessageType.Error),\n        createOutputChannel(name: string): vscode.OutputChannel {\n            const { window } = servicesProvider();\n            const createOutputChannel = window ? window.createOutputChannel : undefined;\n            const channel: OutputChannel = createOutputChannel ? createOutputChannel.bind(window)(name) : undefined;\n            return {\n                name,\n                append: channel.append.bind(channel),\n                appendLine: channel.appendLine.bind(channel),\n                clear: unsupported,\n                show: channel.show.bind(channel),\n                hide: unsupported,\n                dispose: channel.dispose.bind(channel)\n            }\n        },\n        showTextDocument: unsupported,\n        createTextEditorDecorationType: unsupported,\n        showQuickPick: unsupported,\n        showWorkspaceFolderPick: unsupported,\n        showOpenDialog: unsupported,\n        showSaveDialog: unsupported,\n        showInputBox: unsupported,\n        createWebviewPanel: unsupported,\n        setStatusBarMessage: unsupported,\n        withScmProgress: unsupported,\n        withProgress: unsupported,\n        createStatusBarItem: unsupported,\n        createTerminal: unsupported,\n        registerTreeDataProvider: unsupported,\n        createTreeView: unsupported,\n        registerWebviewPanelSerializer: unsupported,\n        get activeTextEditor() {\n            return unsupported();\n        },\n        get visibleTextEditors() {\n            return unsupported();\n        },\n        onDidChangeActiveTextEditor: unsupported,\n        onDidChangeVisibleTextEditors: unsupported,\n        onDidChangeTextEditorSelection: unsupported,\n        onDidChangeTextEditorVisibleRanges: unsupported,\n        onDidChangeTextEditorOptions: unsupported,\n        onDidChangeTextEditorViewColumn: unsupported,\n        onDidCloseTerminal: unsupported,\n        get state() {\n            return unsupported();\n        },\n        onDidChangeWindowState: unsupported\n    };\n    const commands: typeof vscode.commands = {\n        registerCommand(command, callback, thisArg): Disposable {\n            const { commands } = servicesProvider();\n            if (!commands) {\n                return Disposable.create(() => { });\n            }\n            return commands.registerCommand(command, callback, thisArg);\n        },\n        registerTextEditorCommand: unsupported,\n        executeCommand: unsupported,\n        getCommands: unsupported\n    };\n    class CodeDisposable implements vscode.Disposable {\n        constructor(public callOnDispose: Function) { }\n        dispose() {\n            this.callOnDispose();\n        }\n    }\n    return {\n        workspace,\n        languages,\n        window,\n        commands,\n        Uri,\n        CompletionItem,\n        CodeLens,\n        DocumentLink,\n        CodeActionKind,\n        Disposable: CodeDisposable\n    } as any;\n}\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) 2018 TypeFox GmbH (http://www.typefox.io). All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\nimport { createVSCodeApi } from \"./vscode-api\";\nimport { Services } from \"./services\";\n\nexport = createVSCodeApi(Services.get);","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar __values = (this && this.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar vscode_1 = require(\"vscode\");\nvar vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nvar c2p = require(\"./codeConverter\");\nvar p2c = require(\"./protocolConverter\");\nvar Is = require(\"./utils/is\");\nvar async_1 = require(\"./utils/async\");\nvar UUID = require(\"./utils/uuid\");\n__export(require(\"vscode-languageserver-protocol\"));\nvar ConsoleLogger = /** @class */ (function () {\n    function ConsoleLogger() {\n    }\n    ConsoleLogger.prototype.error = function (message) {\n        console.error(message);\n    };\n    ConsoleLogger.prototype.warn = function (message) {\n        console.warn(message);\n    };\n    ConsoleLogger.prototype.info = function (message) {\n        console.info(message);\n    };\n    ConsoleLogger.prototype.log = function (message) {\n        console.log(message);\n    };\n    return ConsoleLogger;\n}());\nfunction createConnection(input, output, errorHandler, closeHandler) {\n    var logger = new ConsoleLogger();\n    var connection = vscode_languageserver_protocol_1.createProtocolConnection(input, output, logger);\n    connection.onError(function (data) { errorHandler(data[0], data[1], data[2]); });\n    connection.onClose(closeHandler);\n    var result = {\n        listen: function () { return connection.listen(); },\n        sendRequest: function (type) {\n            var params = [];\n            for (var _i = 1; _i < arguments.length; _i++) {\n                params[_i - 1] = arguments[_i];\n            }\n            return connection.sendRequest.apply(connection, __spread([Is.string(type) ? type : type.method], params));\n        },\n        onRequest: function (type, handler) { return connection.onRequest(Is.string(type) ? type : type.method, handler); },\n        sendNotification: function (type, params) { return connection.sendNotification(Is.string(type) ? type : type.method, params); },\n        onNotification: function (type, handler) { return connection.onNotification(Is.string(type) ? type : type.method, handler); },\n        trace: function (value, tracer, sendNotification) {\n            if (sendNotification === void 0) { sendNotification = false; }\n            return connection.trace(value, tracer, sendNotification);\n        },\n        initialize: function (params) { return connection.sendRequest(vscode_languageserver_protocol_1.InitializeRequest.type, params); },\n        shutdown: function () { return connection.sendRequest(vscode_languageserver_protocol_1.ShutdownRequest.type, undefined); },\n        exit: function () { return connection.sendNotification(vscode_languageserver_protocol_1.ExitNotification.type); },\n        onLogMessage: function (handler) { return connection.onNotification(vscode_languageserver_protocol_1.LogMessageNotification.type, handler); },\n        onShowMessage: function (handler) { return connection.onNotification(vscode_languageserver_protocol_1.ShowMessageNotification.type, handler); },\n        onTelemetry: function (handler) { return connection.onNotification(vscode_languageserver_protocol_1.TelemetryEventNotification.type, handler); },\n        didChangeConfiguration: function (params) { return connection.sendNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, params); },\n        didChangeWatchedFiles: function (params) { return connection.sendNotification(vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type, params); },\n        didOpenTextDocument: function (params) { return connection.sendNotification(vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type, params); },\n        didChangeTextDocument: function (params) { return connection.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params); },\n        didCloseTextDocument: function (params) { return connection.sendNotification(vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type, params); },\n        didSaveTextDocument: function (params) { return connection.sendNotification(vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type, params); },\n        onDiagnostics: function (handler) { return connection.onNotification(vscode_languageserver_protocol_1.PublishDiagnosticsNotification.type, handler); },\n        dispose: function () { return connection.dispose(); }\n    };\n    return result;\n}\n/**\n * An action to be performed when the connection is producing errors.\n */\nvar ErrorAction;\n(function (ErrorAction) {\n    /**\n     * Continue running the server.\n     */\n    ErrorAction[ErrorAction[\"Continue\"] = 1] = \"Continue\";\n    /**\n     * Shutdown the server.\n     */\n    ErrorAction[ErrorAction[\"Shutdown\"] = 2] = \"Shutdown\";\n})(ErrorAction = exports.ErrorAction || (exports.ErrorAction = {}));\n/**\n * An action to be performed when the connection to a server got closed.\n */\nvar CloseAction;\n(function (CloseAction) {\n    /**\n     * Don't restart the server. The connection stays closed.\n     */\n    CloseAction[CloseAction[\"DoNotRestart\"] = 1] = \"DoNotRestart\";\n    /**\n     * Restart the server.\n     */\n    CloseAction[CloseAction[\"Restart\"] = 2] = \"Restart\";\n})(CloseAction = exports.CloseAction || (exports.CloseAction = {}));\nvar DefaultErrorHandler = /** @class */ (function () {\n    function DefaultErrorHandler(name) {\n        this.name = name;\n        this.restarts = [];\n    }\n    DefaultErrorHandler.prototype.error = function (_error, _message, count) {\n        if (count && count <= 3) {\n            return ErrorAction.Continue;\n        }\n        return ErrorAction.Shutdown;\n    };\n    DefaultErrorHandler.prototype.closed = function () {\n        this.restarts.push(Date.now());\n        if (this.restarts.length < 5) {\n            return CloseAction.Restart;\n        }\n        else {\n            var diff = this.restarts[this.restarts.length - 1] - this.restarts[0];\n            if (diff <= 3 * 60 * 1000) {\n                vscode_1.window.showErrorMessage(\"The \" + this.name + \" server crashed 5 times in the last 3 minutes. The server will not be restarted.\");\n                return CloseAction.DoNotRestart;\n            }\n            else {\n                this.restarts.shift();\n                return CloseAction.Restart;\n            }\n        }\n    };\n    return DefaultErrorHandler;\n}());\nvar RevealOutputChannelOn;\n(function (RevealOutputChannelOn) {\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Info\"] = 1] = \"Info\";\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Warn\"] = 2] = \"Warn\";\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Error\"] = 3] = \"Error\";\n    RevealOutputChannelOn[RevealOutputChannelOn[\"Never\"] = 4] = \"Never\";\n})(RevealOutputChannelOn = exports.RevealOutputChannelOn || (exports.RevealOutputChannelOn = {}));\nvar State;\n(function (State) {\n    State[State[\"Stopped\"] = 1] = \"Stopped\";\n    State[State[\"Running\"] = 2] = \"Running\";\n})(State = exports.State || (exports.State = {}));\nvar ClientState;\n(function (ClientState) {\n    ClientState[ClientState[\"Initial\"] = 0] = \"Initial\";\n    ClientState[ClientState[\"Starting\"] = 1] = \"Starting\";\n    ClientState[ClientState[\"StartFailed\"] = 2] = \"StartFailed\";\n    ClientState[ClientState[\"Running\"] = 3] = \"Running\";\n    ClientState[ClientState[\"Stopping\"] = 4] = \"Stopping\";\n    ClientState[ClientState[\"Stopped\"] = 5] = \"Stopped\";\n})(ClientState || (ClientState = {}));\nvar SupporedSymbolKinds = [\n    vscode_languageserver_protocol_1.SymbolKind.File,\n    vscode_languageserver_protocol_1.SymbolKind.Module,\n    vscode_languageserver_protocol_1.SymbolKind.Namespace,\n    vscode_languageserver_protocol_1.SymbolKind.Package,\n    vscode_languageserver_protocol_1.SymbolKind.Class,\n    vscode_languageserver_protocol_1.SymbolKind.Method,\n    vscode_languageserver_protocol_1.SymbolKind.Property,\n    vscode_languageserver_protocol_1.SymbolKind.Field,\n    vscode_languageserver_protocol_1.SymbolKind.Constructor,\n    vscode_languageserver_protocol_1.SymbolKind.Enum,\n    vscode_languageserver_protocol_1.SymbolKind.Interface,\n    vscode_languageserver_protocol_1.SymbolKind.Function,\n    vscode_languageserver_protocol_1.SymbolKind.Variable,\n    vscode_languageserver_protocol_1.SymbolKind.Constant,\n    vscode_languageserver_protocol_1.SymbolKind.String,\n    vscode_languageserver_protocol_1.SymbolKind.Number,\n    vscode_languageserver_protocol_1.SymbolKind.Boolean,\n    vscode_languageserver_protocol_1.SymbolKind.Array,\n    vscode_languageserver_protocol_1.SymbolKind.Object,\n    vscode_languageserver_protocol_1.SymbolKind.Key,\n    vscode_languageserver_protocol_1.SymbolKind.Null,\n    vscode_languageserver_protocol_1.SymbolKind.EnumMember,\n    vscode_languageserver_protocol_1.SymbolKind.Struct,\n    vscode_languageserver_protocol_1.SymbolKind.Event,\n    vscode_languageserver_protocol_1.SymbolKind.Operator,\n    vscode_languageserver_protocol_1.SymbolKind.TypeParameter\n];\nvar SupportedCompletionItemKinds = [\n    vscode_languageserver_protocol_1.CompletionItemKind.Text,\n    vscode_languageserver_protocol_1.CompletionItemKind.Method,\n    vscode_languageserver_protocol_1.CompletionItemKind.Function,\n    vscode_languageserver_protocol_1.CompletionItemKind.Constructor,\n    vscode_languageserver_protocol_1.CompletionItemKind.Field,\n    vscode_languageserver_protocol_1.CompletionItemKind.Variable,\n    vscode_languageserver_protocol_1.CompletionItemKind.Class,\n    vscode_languageserver_protocol_1.CompletionItemKind.Interface,\n    vscode_languageserver_protocol_1.CompletionItemKind.Module,\n    vscode_languageserver_protocol_1.CompletionItemKind.Property,\n    vscode_languageserver_protocol_1.CompletionItemKind.Unit,\n    vscode_languageserver_protocol_1.CompletionItemKind.Value,\n    vscode_languageserver_protocol_1.CompletionItemKind.Enum,\n    vscode_languageserver_protocol_1.CompletionItemKind.Keyword,\n    vscode_languageserver_protocol_1.CompletionItemKind.Snippet,\n    vscode_languageserver_protocol_1.CompletionItemKind.Color,\n    vscode_languageserver_protocol_1.CompletionItemKind.File,\n    vscode_languageserver_protocol_1.CompletionItemKind.Reference,\n    vscode_languageserver_protocol_1.CompletionItemKind.Folder,\n    vscode_languageserver_protocol_1.CompletionItemKind.EnumMember,\n    vscode_languageserver_protocol_1.CompletionItemKind.Constant,\n    vscode_languageserver_protocol_1.CompletionItemKind.Struct,\n    vscode_languageserver_protocol_1.CompletionItemKind.Event,\n    vscode_languageserver_protocol_1.CompletionItemKind.Operator,\n    vscode_languageserver_protocol_1.CompletionItemKind.TypeParameter\n];\nfunction ensure(target, key) {\n    if (target[key] === void 0) {\n        target[key] = {};\n    }\n    return target[key];\n}\nvar DynamicFeature;\n(function (DynamicFeature) {\n    function is(value) {\n        var candidate = value;\n        return candidate && Is.func(candidate.register) && Is.func(candidate.unregister) && Is.func(candidate.dispose) && candidate.messages !== void 0;\n    }\n    DynamicFeature.is = is;\n})(DynamicFeature || (DynamicFeature = {}));\nvar DocumentNotifiactions = /** @class */ (function () {\n    function DocumentNotifiactions(_client, _event, _type, _middleware, _createParams, _selectorFilter) {\n        this._client = _client;\n        this._event = _event;\n        this._type = _type;\n        this._middleware = _middleware;\n        this._createParams = _createParams;\n        this._selectorFilter = _selectorFilter;\n        this._selectors = new Map();\n    }\n    DocumentNotifiactions.textDocumentFilter = function (selectors, textDocument) {\n        var e_1, _a;\n        try {\n            for (var selectors_1 = __values(selectors), selectors_1_1 = selectors_1.next(); !selectors_1_1.done; selectors_1_1 = selectors_1.next()) {\n                var selector = selectors_1_1.value;\n                if (vscode_1.languages.match(selector, textDocument)) {\n                    return true;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (selectors_1_1 && !selectors_1_1.done && (_a = selectors_1.return)) _a.call(selectors_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return false;\n    };\n    DocumentNotifiactions.prototype.register = function (_message, data) {\n        if (!data.registerOptions.documentSelector) {\n            return;\n        }\n        if (!this._listener) {\n            this._listener = this._event(this.callback, this);\n        }\n        this._selectors.set(data.id, data.registerOptions.documentSelector);\n    };\n    DocumentNotifiactions.prototype.callback = function (data) {\n        var _this = this;\n        if (!this._selectorFilter || this._selectorFilter(this._selectors.values(), data)) {\n            if (this._middleware) {\n                this._middleware(data, function (data) { return _this._client.sendNotification(_this._type, _this._createParams(data)); });\n            }\n            else {\n                this._client.sendNotification(this._type, this._createParams(data));\n            }\n            this.notificationSent(data);\n        }\n    };\n    DocumentNotifiactions.prototype.notificationSent = function (_data) {\n    };\n    DocumentNotifiactions.prototype.unregister = function (id) {\n        this._selectors.delete(id);\n        if (this._selectors.size === 0 && this._listener) {\n            this._listener.dispose();\n            this._listener = undefined;\n        }\n    };\n    DocumentNotifiactions.prototype.dispose = function () {\n        this._selectors.clear();\n        if (this._listener) {\n            this._listener.dispose();\n        }\n    };\n    return DocumentNotifiactions;\n}());\nvar DidOpenTextDocumentFeature = /** @class */ (function (_super) {\n    __extends(DidOpenTextDocumentFeature, _super);\n    function DidOpenTextDocumentFeature(client, _syncedDocuments) {\n        var _this = _super.call(this, client, vscode_1.workspace.onDidOpenTextDocument, vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type, client.clientOptions.middleware.didOpen, function (textDocument) { return client.code2ProtocolConverter.asOpenTextDocumentParams(textDocument); }, DocumentNotifiactions.textDocumentFilter) || this;\n        _this._syncedDocuments = _syncedDocuments;\n        return _this;\n    }\n    Object.defineProperty(DidOpenTextDocumentFeature.prototype, \"messages\", {\n        get: function () {\n            return vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DidOpenTextDocumentFeature.prototype.fillClientCapabilities = function (capabilities) {\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').dynamicRegistration = true;\n    };\n    DidOpenTextDocumentFeature.prototype.initialize = function (capabilities, documentSelector) {\n        var textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.openClose) {\n            this.register(this.messages, { id: UUID.generateUuid(), registerOptions: { documentSelector: documentSelector } });\n        }\n    };\n    DidOpenTextDocumentFeature.prototype.register = function (message, data) {\n        var _this = this;\n        _super.prototype.register.call(this, message, data);\n        if (!data.registerOptions.documentSelector) {\n            return;\n        }\n        var documentSelector = data.registerOptions.documentSelector;\n        vscode_1.workspace.textDocuments.forEach(function (textDocument) {\n            var uri = textDocument.uri.toString();\n            if (_this._syncedDocuments.has(uri)) {\n                return;\n            }\n            if (vscode_1.languages.match(documentSelector, textDocument)) {\n                var middleware = _this._client.clientOptions.middleware;\n                var didOpen = function (textDocument) {\n                    _this._client.sendNotification(_this._type, _this._createParams(textDocument));\n                };\n                if (middleware.didOpen) {\n                    middleware.didOpen(textDocument, didOpen);\n                }\n                else {\n                    didOpen(textDocument);\n                }\n                _this._syncedDocuments.set(uri, textDocument);\n            }\n        });\n    };\n    DidOpenTextDocumentFeature.prototype.notificationSent = function (textDocument) {\n        _super.prototype.notificationSent.call(this, textDocument);\n        this._syncedDocuments.set(textDocument.uri.toString(), textDocument);\n    };\n    return DidOpenTextDocumentFeature;\n}(DocumentNotifiactions));\nvar DidCloseTextDocumentFeature = /** @class */ (function (_super) {\n    __extends(DidCloseTextDocumentFeature, _super);\n    function DidCloseTextDocumentFeature(client, _syncedDocuments) {\n        var _this = _super.call(this, client, vscode_1.workspace.onDidCloseTextDocument, vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type, client.clientOptions.middleware.didClose, function (textDocument) { return client.code2ProtocolConverter.asCloseTextDocumentParams(textDocument); }, DocumentNotifiactions.textDocumentFilter) || this;\n        _this._syncedDocuments = _syncedDocuments;\n        return _this;\n    }\n    Object.defineProperty(DidCloseTextDocumentFeature.prototype, \"messages\", {\n        get: function () {\n            return vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DidCloseTextDocumentFeature.prototype.fillClientCapabilities = function (capabilities) {\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').dynamicRegistration = true;\n    };\n    DidCloseTextDocumentFeature.prototype.initialize = function (capabilities, documentSelector) {\n        var textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.openClose) {\n            this.register(this.messages, { id: UUID.generateUuid(), registerOptions: { documentSelector: documentSelector } });\n        }\n    };\n    DidCloseTextDocumentFeature.prototype.notificationSent = function (textDocument) {\n        _super.prototype.notificationSent.call(this, textDocument);\n        this._syncedDocuments.delete(textDocument.uri.toString());\n    };\n    DidCloseTextDocumentFeature.prototype.unregister = function (id) {\n        var _this = this;\n        var selector = this._selectors.get(id);\n        // The super call removed the selector from the map\n        // of selectors.\n        _super.prototype.unregister.call(this, id);\n        var selectors = this._selectors.values();\n        this._syncedDocuments.forEach(function (textDocument) {\n            if (vscode_1.languages.match(selector, textDocument) && !_this._selectorFilter(selectors, textDocument)) {\n                var middleware = _this._client.clientOptions.middleware;\n                var didClose = function (textDocument) {\n                    _this._client.sendNotification(_this._type, _this._createParams(textDocument));\n                };\n                _this._syncedDocuments.delete(textDocument.uri.toString());\n                if (middleware.didClose) {\n                    middleware.didClose(textDocument, didClose);\n                }\n                else {\n                    didClose(textDocument);\n                }\n            }\n        });\n    };\n    return DidCloseTextDocumentFeature;\n}(DocumentNotifiactions));\nvar DidChangeTextDocumentFeature = /** @class */ (function () {\n    function DidChangeTextDocumentFeature(_client) {\n        this._client = _client;\n        this._changeData = new Map();\n        this._forcingDelivery = false;\n    }\n    Object.defineProperty(DidChangeTextDocumentFeature.prototype, \"messages\", {\n        get: function () {\n            return vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DidChangeTextDocumentFeature.prototype.fillClientCapabilities = function (capabilities) {\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').dynamicRegistration = true;\n    };\n    DidChangeTextDocumentFeature.prototype.initialize = function (capabilities, documentSelector) {\n        var textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.change !== void 0 && textDocumentSyncOptions.change !== vscode_languageserver_protocol_1.TextDocumentSyncKind.None) {\n            this.register(this.messages, {\n                id: UUID.generateUuid(),\n                registerOptions: Object.assign({}, { documentSelector: documentSelector }, { syncKind: textDocumentSyncOptions.change })\n            });\n        }\n    };\n    DidChangeTextDocumentFeature.prototype.register = function (_message, data) {\n        if (!data.registerOptions.documentSelector) {\n            return;\n        }\n        if (!this._listener) {\n            this._listener = vscode_1.workspace.onDidChangeTextDocument(this.callback, this);\n        }\n        this._changeData.set(data.id, {\n            documentSelector: data.registerOptions.documentSelector,\n            syncKind: data.registerOptions.syncKind\n        });\n    };\n    DidChangeTextDocumentFeature.prototype.callback = function (event) {\n        var e_2, _a;\n        var _this = this;\n        // Text document changes are send for dirty changes as well. We don't\n        // have dirty / undirty events in the LSP so we ignore content changes\n        // with length zero.\n        if (event.contentChanges.length === 0) {\n            return;\n        }\n        var _loop_1 = function (changeData) {\n            if (vscode_1.languages.match(changeData.documentSelector, event.document)) {\n                var middleware = this_1._client.clientOptions.middleware;\n                if (changeData.syncKind === vscode_languageserver_protocol_1.TextDocumentSyncKind.Incremental) {\n                    var params_1 = this_1._client.code2ProtocolConverter.asChangeTextDocumentParams(event);\n                    if (middleware.didChange) {\n                        middleware.didChange(event, function () { return _this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params_1); });\n                    }\n                    else {\n                        this_1._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, params_1);\n                    }\n                }\n                else if (changeData.syncKind === vscode_languageserver_protocol_1.TextDocumentSyncKind.Full) {\n                    var didChange = function (event) {\n                        if (_this._changeDelayer) {\n                            if (_this._changeDelayer.uri !== event.document.uri.toString()) {\n                                // Use this force delivery to track boolean state. Otherwise we might call two times.\n                                _this.forceDelivery();\n                                _this._changeDelayer.uri = event.document.uri.toString();\n                            }\n                            _this._changeDelayer.delayer.trigger(function () {\n                                _this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, _this._client.code2ProtocolConverter.asChangeTextDocumentParams(event.document));\n                            });\n                        }\n                        else {\n                            _this._changeDelayer = {\n                                uri: event.document.uri.toString(),\n                                delayer: new async_1.Delayer(200)\n                            };\n                            _this._changeDelayer.delayer.trigger(function () {\n                                _this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, _this._client.code2ProtocolConverter.asChangeTextDocumentParams(event.document));\n                            }, -1);\n                        }\n                    };\n                    if (middleware.didChange) {\n                        middleware.didChange(event, didChange);\n                    }\n                    else {\n                        didChange(event);\n                    }\n                }\n            }\n        };\n        var this_1 = this;\n        try {\n            for (var _b = __values(this._changeData.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var changeData = _c.value;\n                _loop_1(changeData);\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    };\n    DidChangeTextDocumentFeature.prototype.unregister = function (id) {\n        this._changeData.delete(id);\n        if (this._changeData.size === 0 && this._listener) {\n            this._listener.dispose();\n            this._listener = undefined;\n        }\n    };\n    DidChangeTextDocumentFeature.prototype.dispose = function () {\n        this._changeDelayer = undefined;\n        this._forcingDelivery = false;\n        this._changeData.clear();\n        if (this._listener) {\n            this._listener.dispose();\n            this._listener = undefined;\n        }\n    };\n    DidChangeTextDocumentFeature.prototype.forceDelivery = function () {\n        if (this._forcingDelivery || !this._changeDelayer) {\n            return;\n        }\n        try {\n            this._forcingDelivery = true;\n            this._changeDelayer.delayer.forceDelivery();\n        }\n        finally {\n            this._forcingDelivery = false;\n        }\n    };\n    return DidChangeTextDocumentFeature;\n}());\nvar WillSaveFeature = /** @class */ (function (_super) {\n    __extends(WillSaveFeature, _super);\n    function WillSaveFeature(client) {\n        return _super.call(this, client, vscode_1.workspace.onWillSaveTextDocument, vscode_languageserver_protocol_1.WillSaveTextDocumentNotification.type, client.clientOptions.middleware.willSave, function (willSaveEvent) { return client.code2ProtocolConverter.asWillSaveTextDocumentParams(willSaveEvent); }, function (selectors, willSaveEvent) { return DocumentNotifiactions.textDocumentFilter(selectors, willSaveEvent.document); }) || this;\n    }\n    Object.defineProperty(WillSaveFeature.prototype, \"messages\", {\n        get: function () {\n            return vscode_languageserver_protocol_1.WillSaveTextDocumentNotification.type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WillSaveFeature.prototype.fillClientCapabilities = function (capabilities) {\n        var value = ensure(ensure(capabilities, 'textDocument'), 'synchronization');\n        value.willSave = true;\n    };\n    WillSaveFeature.prototype.initialize = function (capabilities, documentSelector) {\n        var textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.willSave) {\n            this.register(this.messages, {\n                id: UUID.generateUuid(),\n                registerOptions: { documentSelector: documentSelector }\n            });\n        }\n    };\n    return WillSaveFeature;\n}(DocumentNotifiactions));\nvar WillSaveWaitUntilFeature = /** @class */ (function () {\n    function WillSaveWaitUntilFeature(_client) {\n        this._client = _client;\n        this._selectors = new Map();\n    }\n    Object.defineProperty(WillSaveWaitUntilFeature.prototype, \"messages\", {\n        get: function () {\n            return vscode_languageserver_protocol_1.WillSaveTextDocumentWaitUntilRequest.type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WillSaveWaitUntilFeature.prototype.fillClientCapabilities = function (capabilities) {\n        var value = ensure(ensure(capabilities, 'textDocument'), 'synchronization');\n        value.willSaveWaitUntil = true;\n    };\n    WillSaveWaitUntilFeature.prototype.initialize = function (capabilities, documentSelector) {\n        var textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.willSaveWaitUntil) {\n            this.register(this.messages, {\n                id: UUID.generateUuid(),\n                registerOptions: { documentSelector: documentSelector }\n            });\n        }\n    };\n    WillSaveWaitUntilFeature.prototype.register = function (_message, data) {\n        if (!data.registerOptions.documentSelector) {\n            return;\n        }\n        if (!this._listener) {\n            this._listener = vscode_1.workspace.onWillSaveTextDocument(this.callback, this);\n        }\n        this._selectors.set(data.id, data.registerOptions.documentSelector);\n    };\n    WillSaveWaitUntilFeature.prototype.callback = function (event) {\n        var _this = this;\n        if (DocumentNotifiactions.textDocumentFilter(this._selectors.values(), event.document)) {\n            var middleware = this._client.clientOptions.middleware;\n            var willSaveWaitUntil = function (event) {\n                return _this._client.sendRequest(vscode_languageserver_protocol_1.WillSaveTextDocumentWaitUntilRequest.type, _this._client.code2ProtocolConverter.asWillSaveTextDocumentParams(event)).then(function (edits) {\n                    var vEdits = _this._client.protocol2CodeConverter.asTextEdits(edits);\n                    return vEdits === void 0 ? [] : vEdits;\n                });\n            };\n            event.waitUntil(middleware.willSaveWaitUntil\n                ? middleware.willSaveWaitUntil(event, willSaveWaitUntil)\n                : willSaveWaitUntil(event));\n        }\n    };\n    WillSaveWaitUntilFeature.prototype.unregister = function (id) {\n        this._selectors.delete(id);\n        if (this._selectors.size === 0 && this._listener) {\n            this._listener.dispose();\n            this._listener = undefined;\n        }\n    };\n    WillSaveWaitUntilFeature.prototype.dispose = function () {\n        this._selectors.clear();\n        if (this._listener) {\n            this._listener.dispose();\n            this._listener = undefined;\n        }\n    };\n    return WillSaveWaitUntilFeature;\n}());\nvar DidSaveTextDocumentFeature = /** @class */ (function (_super) {\n    __extends(DidSaveTextDocumentFeature, _super);\n    function DidSaveTextDocumentFeature(client) {\n        var _this = _super.call(this, client, vscode_1.workspace.onDidSaveTextDocument, vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type, client.clientOptions.middleware.didSave, function (textDocument) { return client.code2ProtocolConverter.asSaveTextDocumentParams(textDocument, _this._includeText); }, DocumentNotifiactions.textDocumentFilter) || this;\n        return _this;\n    }\n    Object.defineProperty(DidSaveTextDocumentFeature.prototype, \"messages\", {\n        get: function () {\n            return vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DidSaveTextDocumentFeature.prototype.fillClientCapabilities = function (capabilities) {\n        ensure(ensure(capabilities, 'textDocument'), 'synchronization').didSave = true;\n    };\n    DidSaveTextDocumentFeature.prototype.initialize = function (capabilities, documentSelector) {\n        var textDocumentSyncOptions = capabilities.resolvedTextDocumentSync;\n        if (documentSelector && textDocumentSyncOptions && textDocumentSyncOptions.save) {\n            this.register(this.messages, {\n                id: UUID.generateUuid(),\n                registerOptions: Object.assign({}, { documentSelector: documentSelector }, { includeText: !!textDocumentSyncOptions.save.includeText })\n            });\n        }\n    };\n    DidSaveTextDocumentFeature.prototype.register = function (method, data) {\n        this._includeText = !!data.registerOptions.includeText;\n        _super.prototype.register.call(this, method, data);\n    };\n    return DidSaveTextDocumentFeature;\n}(DocumentNotifiactions));\nvar FileSystemWatcherFeature = /** @class */ (function () {\n    function FileSystemWatcherFeature(_client, _notifyFileEvent) {\n        this._client = _client;\n        this._notifyFileEvent = _notifyFileEvent;\n        this._watchers = new Map();\n    }\n    Object.defineProperty(FileSystemWatcherFeature.prototype, \"messages\", {\n        get: function () {\n            return vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FileSystemWatcherFeature.prototype.fillClientCapabilities = function (capabilities) {\n        ensure(ensure(capabilities, 'workspace'), 'didChangeWatchedFiles').dynamicRegistration = true;\n    };\n    FileSystemWatcherFeature.prototype.initialize = function (_capabilities, _documentSelector) {\n    };\n    FileSystemWatcherFeature.prototype.register = function (_method, data) {\n        var e_3, _a;\n        if (!Array.isArray(data.registerOptions.watchers)) {\n            return;\n        }\n        var disposeables = [];\n        try {\n            for (var _b = __values(data.registerOptions.watchers), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var watcher = _c.value;\n                if (!Is.string(watcher.globPattern)) {\n                    continue;\n                }\n                var watchCreate = true, watchChange = true, watchDelete = true;\n                if (watcher.kind !== void 0 && watcher.kind !== null) {\n                    watchCreate = (watcher.kind & vscode_languageserver_protocol_1.WatchKind.Create) !== 0;\n                    watchChange = (watcher.kind & vscode_languageserver_protocol_1.WatchKind.Change) != 0;\n                    watchDelete = (watcher.kind & vscode_languageserver_protocol_1.WatchKind.Delete) != 0;\n                }\n                var fileSystemWatcher = vscode_1.workspace.createFileSystemWatcher(watcher.globPattern, !watchCreate, !watchChange, !watchDelete);\n                this.hookListeners(fileSystemWatcher, watchCreate, watchChange, watchDelete);\n                disposeables.push(fileSystemWatcher);\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        this._watchers.set(data.id, disposeables);\n    };\n    FileSystemWatcherFeature.prototype.registerRaw = function (id, fileSystemWatchers) {\n        var e_4, _a;\n        var disposeables = [];\n        try {\n            for (var fileSystemWatchers_1 = __values(fileSystemWatchers), fileSystemWatchers_1_1 = fileSystemWatchers_1.next(); !fileSystemWatchers_1_1.done; fileSystemWatchers_1_1 = fileSystemWatchers_1.next()) {\n                var fileSystemWatcher = fileSystemWatchers_1_1.value;\n                this.hookListeners(fileSystemWatcher, true, true, true, disposeables);\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (fileSystemWatchers_1_1 && !fileSystemWatchers_1_1.done && (_a = fileSystemWatchers_1.return)) _a.call(fileSystemWatchers_1);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        this._watchers.set(id, disposeables);\n    };\n    FileSystemWatcherFeature.prototype.hookListeners = function (fileSystemWatcher, watchCreate, watchChange, watchDelete, listeners) {\n        var _this = this;\n        if (watchCreate) {\n            fileSystemWatcher.onDidCreate(function (resource) { return _this._notifyFileEvent({\n                uri: _this._client.code2ProtocolConverter.asUri(resource),\n                type: vscode_languageserver_protocol_1.FileChangeType.Created\n            }); }, null, listeners);\n        }\n        if (watchChange) {\n            fileSystemWatcher.onDidChange(function (resource) { return _this._notifyFileEvent({\n                uri: _this._client.code2ProtocolConverter.asUri(resource),\n                type: vscode_languageserver_protocol_1.FileChangeType.Changed\n            }); }, null, listeners);\n        }\n        if (watchDelete) {\n            fileSystemWatcher.onDidDelete(function (resource) { return _this._notifyFileEvent({\n                uri: _this._client.code2ProtocolConverter.asUri(resource),\n                type: vscode_languageserver_protocol_1.FileChangeType.Deleted\n            }); }, null, listeners);\n        }\n    };\n    FileSystemWatcherFeature.prototype.unregister = function (id) {\n        var e_5, _a;\n        var disposeables = this._watchers.get(id);\n        if (disposeables) {\n            try {\n                for (var disposeables_1 = __values(disposeables), disposeables_1_1 = disposeables_1.next(); !disposeables_1_1.done; disposeables_1_1 = disposeables_1.next()) {\n                    var disposable = disposeables_1_1.value;\n                    disposable.dispose();\n                }\n            }\n            catch (e_5_1) { e_5 = { error: e_5_1 }; }\n            finally {\n                try {\n                    if (disposeables_1_1 && !disposeables_1_1.done && (_a = disposeables_1.return)) _a.call(disposeables_1);\n                }\n                finally { if (e_5) throw e_5.error; }\n            }\n        }\n    };\n    FileSystemWatcherFeature.prototype.dispose = function () {\n        this._watchers.forEach(function (disposeables) {\n            var e_6, _a;\n            try {\n                for (var disposeables_2 = __values(disposeables), disposeables_2_1 = disposeables_2.next(); !disposeables_2_1.done; disposeables_2_1 = disposeables_2.next()) {\n                    var disposable = disposeables_2_1.value;\n                    disposable.dispose();\n                }\n            }\n            catch (e_6_1) { e_6 = { error: e_6_1 }; }\n            finally {\n                try {\n                    if (disposeables_2_1 && !disposeables_2_1.done && (_a = disposeables_2.return)) _a.call(disposeables_2);\n                }\n                finally { if (e_6) throw e_6.error; }\n            }\n        });\n        this._watchers.clear();\n    };\n    return FileSystemWatcherFeature;\n}());\nvar TextDocumentFeature = /** @class */ (function () {\n    function TextDocumentFeature(_client, _message) {\n        this._client = _client;\n        this._message = _message;\n        this._providers = new Map();\n    }\n    Object.defineProperty(TextDocumentFeature.prototype, \"messages\", {\n        get: function () {\n            return this._message;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TextDocumentFeature.prototype.register = function (message, data) {\n        if (message.method !== this.messages.method) {\n            throw new Error(\"Register called on wrong feature. Requested \" + message.method + \" but reached feature \" + this.messages.method);\n        }\n        if (!data.registerOptions.documentSelector) {\n            return;\n        }\n        var provider = this.registerLanguageProvider(data.registerOptions);\n        if (provider) {\n            this._providers.set(data.id, provider);\n        }\n    };\n    TextDocumentFeature.prototype.unregister = function (id) {\n        var provider = this._providers.get(id);\n        if (provider) {\n            provider.dispose();\n        }\n    };\n    TextDocumentFeature.prototype.dispose = function () {\n        this._providers.forEach(function (value) {\n            value.dispose();\n        });\n        this._providers.clear();\n    };\n    return TextDocumentFeature;\n}());\nexports.TextDocumentFeature = TextDocumentFeature;\nvar WorkspaceFeature = /** @class */ (function () {\n    function WorkspaceFeature(_client, _message) {\n        this._client = _client;\n        this._message = _message;\n        this._providers = new Map();\n    }\n    Object.defineProperty(WorkspaceFeature.prototype, \"messages\", {\n        get: function () {\n            return this._message;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WorkspaceFeature.prototype.register = function (message, data) {\n        if (message.method !== this.messages.method) {\n            throw new Error(\"Register called on wron feature. Requested \" + message.method + \" but reached feature \" + this.messages.method);\n        }\n        var provider = this.registerLanguageProvider(data.registerOptions);\n        if (provider) {\n            this._providers.set(data.id, provider);\n        }\n    };\n    WorkspaceFeature.prototype.unregister = function (id) {\n        var provider = this._providers.get(id);\n        if (provider) {\n            provider.dispose();\n        }\n    };\n    WorkspaceFeature.prototype.dispose = function () {\n        this._providers.forEach(function (value) {\n            value.dispose();\n        });\n        this._providers.clear();\n    };\n    return WorkspaceFeature;\n}());\nvar CompletionItemFeature = /** @class */ (function (_super) {\n    __extends(CompletionItemFeature, _super);\n    function CompletionItemFeature(client) {\n        return _super.call(this, client, vscode_languageserver_protocol_1.CompletionRequest.type) || this;\n    }\n    CompletionItemFeature.prototype.fillClientCapabilities = function (capabilites) {\n        var completion = ensure(ensure(capabilites, 'textDocument'), 'completion');\n        completion.dynamicRegistration = true;\n        completion.contextSupport = true;\n        completion.completionItem = {\n            snippetSupport: true,\n            commitCharactersSupport: true,\n            documentationFormat: [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText],\n            deprecatedSupport: true,\n            preselectSupport: true\n        };\n        completion.completionItemKind = { valueSet: SupportedCompletionItemKinds };\n    };\n    CompletionItemFeature.prototype.initialize = function (capabilities, documentSelector) {\n        if (!capabilities.completionProvider || !documentSelector) {\n            return;\n        }\n        this.register(this.messages, {\n            id: UUID.generateUuid(),\n            registerOptions: Object.assign({}, { documentSelector: documentSelector }, capabilities.completionProvider)\n        });\n    };\n    CompletionItemFeature.prototype.registerLanguageProvider = function (options) {\n        var triggerCharacters = options.triggerCharacters || [];\n        var client = this._client;\n        var provideCompletionItems = function (document, position, context, token) {\n            return client.sendRequest(vscode_languageserver_protocol_1.CompletionRequest.type, client.code2ProtocolConverter.asCompletionParams(document, position, context), token).then(client.protocol2CodeConverter.asCompletionResult, function (error) {\n                client.logFailedRequest(vscode_languageserver_protocol_1.CompletionRequest.type, error);\n                return Promise.resolve([]);\n            });\n        };\n        var resolveCompletionItem = function (item, token) {\n            return client.sendRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, client.code2ProtocolConverter.asCompletionItem(item), token).then(client.protocol2CodeConverter.asCompletionItem, function (error) {\n                client.logFailedRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, error);\n                return Promise.resolve(item);\n            });\n        };\n        var middleware = this._client.clientOptions.middleware;\n        return vscode_1.languages.registerCompletionItemProvider.apply(vscode_1.languages, __spread([options.documentSelector, {\n                provideCompletionItems: function (document, position, token, context) {\n                    return middleware.provideCompletionItem\n                        ? middleware.provideCompletionItem(document, position, context, token, provideCompletionItems)\n                        : provideCompletionItems(document, position, context, token);\n                },\n                resolveCompletionItem: options.resolveProvider\n                    ? function (item, token) {\n                        return middleware.resolveCompletionItem\n                            ? middleware.resolveCompletionItem(item, token, resolveCompletionItem)\n                            : resolveCompletionItem(item, token);\n                    }\n                    : undefined\n            }], triggerCharacters));\n    };\n    return CompletionItemFeature;\n}(TextDocumentFeature));\nvar HoverFeature = /** @class */ (function (_super) {\n    __extends(HoverFeature, _super);\n    function HoverFeature(client) {\n        return _super.call(this, client, vscode_languageserver_protocol_1.HoverRequest.type) || this;\n    }\n    HoverFeature.prototype.fillClientCapabilities = function (capabilites) {\n        var hoverCapability = (ensure(ensure(capabilites, 'textDocument'), 'hover'));\n        hoverCapability.dynamicRegistration = true;\n        hoverCapability.contentFormat = [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText];\n    };\n    HoverFeature.prototype.initialize = function (capabilities, documentSelector) {\n        if (!capabilities.hoverProvider || !documentSelector) {\n            return;\n        }\n        this.register(this.messages, {\n            id: UUID.generateUuid(),\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\n        });\n    };\n    HoverFeature.prototype.registerLanguageProvider = function (options) {\n        var client = this._client;\n        var provideHover = function (document, position, token) {\n            return client.sendRequest(vscode_languageserver_protocol_1.HoverRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asHover, function (error) {\n                client.logFailedRequest(vscode_languageserver_protocol_1.HoverRequest.type, error);\n                return Promise.resolve(null);\n            });\n        };\n        var middleware = client.clientOptions.middleware;\n        return vscode_1.languages.registerHoverProvider(options.documentSelector, {\n            provideHover: function (document, position, token) {\n                return middleware.provideHover\n                    ? middleware.provideHover(document, position, token, provideHover)\n                    : provideHover(document, position, token);\n            }\n        });\n    };\n    return HoverFeature;\n}(TextDocumentFeature));\nvar SignatureHelpFeature = /** @class */ (function (_super) {\n    __extends(SignatureHelpFeature, _super);\n    function SignatureHelpFeature(client) {\n        return _super.call(this, client, vscode_languageserver_protocol_1.SignatureHelpRequest.type) || this;\n    }\n    SignatureHelpFeature.prototype.fillClientCapabilities = function (capabilites) {\n        var config = ensure(ensure(capabilites, 'textDocument'), 'signatureHelp');\n        config.dynamicRegistration = true;\n        config.signatureInformation = { documentationFormat: [vscode_languageserver_protocol_1.MarkupKind.Markdown, vscode_languageserver_protocol_1.MarkupKind.PlainText] };\n    };\n    SignatureHelpFeature.prototype.initialize = function (capabilities, documentSelector) {\n        if (!capabilities.signatureHelpProvider || !documentSelector) {\n            return;\n        }\n        this.register(this.messages, {\n            id: UUID.generateUuid(),\n            registerOptions: Object.assign({}, { documentSelector: documentSelector }, capabilities.signatureHelpProvider)\n        });\n    };\n    SignatureHelpFeature.prototype.registerLanguageProvider = function (options) {\n        var client = this._client;\n        var providerSignatureHelp = function (document, position, token) {\n            return client.sendRequest(vscode_languageserver_protocol_1.SignatureHelpRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asSignatureHelp, function (error) {\n                client.logFailedRequest(vscode_languageserver_protocol_1.SignatureHelpRequest.type, error);\n                return Promise.resolve(null);\n            });\n        };\n        var middleware = client.clientOptions.middleware;\n        var triggerCharacters = options.triggerCharacters || [];\n        return vscode_1.languages.registerSignatureHelpProvider.apply(vscode_1.languages, __spread([options.documentSelector, {\n                provideSignatureHelp: function (document, position, token) {\n                    return middleware.provideSignatureHelp\n                        ? middleware.provideSignatureHelp(document, position, token, providerSignatureHelp)\n                        : providerSignatureHelp(document, position, token);\n                }\n            }], triggerCharacters));\n    };\n    return SignatureHelpFeature;\n}(TextDocumentFeature));\nvar DefinitionFeature = /** @class */ (function (_super) {\n    __extends(DefinitionFeature, _super);\n    function DefinitionFeature(client) {\n        return _super.call(this, client, vscode_languageserver_protocol_1.DefinitionRequest.type) || this;\n    }\n    DefinitionFeature.prototype.fillClientCapabilities = function (capabilites) {\n        ensure(ensure(capabilites, 'textDocument'), 'definition').dynamicRegistration = true;\n    };\n    DefinitionFeature.prototype.initialize = function (capabilities, documentSelector) {\n        if (!capabilities.definitionProvider || !documentSelector) {\n            return;\n        }\n        this.register(this.messages, {\n            id: UUID.generateUuid(),\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\n        });\n    };\n    DefinitionFeature.prototype.registerLanguageProvider = function (options) {\n        var client = this._client;\n        var provideDefinition = function (document, position, token) {\n            return client.sendRequest(vscode_languageserver_protocol_1.DefinitionRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDefinitionResult, function (error) {\n                client.logFailedRequest(vscode_languageserver_protocol_1.DefinitionRequest.type, error);\n                return Promise.resolve(null);\n            });\n        };\n        var middleware = client.clientOptions.middleware;\n        return vscode_1.languages.registerDefinitionProvider(options.documentSelector, {\n            provideDefinition: function (document, position, token) {\n                return middleware.provideDefinition\n                    ? middleware.provideDefinition(document, position, token, provideDefinition)\n                    : provideDefinition(document, position, token);\n            }\n        });\n    };\n    return DefinitionFeature;\n}(TextDocumentFeature));\nvar ReferencesFeature = /** @class */ (function (_super) {\n    __extends(ReferencesFeature, _super);\n    function ReferencesFeature(client) {\n        return _super.call(this, client, vscode_languageserver_protocol_1.ReferencesRequest.type) || this;\n    }\n    ReferencesFeature.prototype.fillClientCapabilities = function (capabilites) {\n        ensure(ensure(capabilites, 'textDocument'), 'references').dynamicRegistration = true;\n    };\n    ReferencesFeature.prototype.initialize = function (capabilities, documentSelector) {\n        if (!capabilities.referencesProvider || !documentSelector) {\n            return;\n        }\n        this.register(this.messages, {\n            id: UUID.generateUuid(),\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\n        });\n    };\n    ReferencesFeature.prototype.registerLanguageProvider = function (options) {\n        var client = this._client;\n        var providerReferences = function (document, position, options, token) {\n            return client.sendRequest(vscode_languageserver_protocol_1.ReferencesRequest.type, client.code2ProtocolConverter.asReferenceParams(document, position, options), token).then(client.protocol2CodeConverter.asReferences, function (error) {\n                client.logFailedRequest(vscode_languageserver_protocol_1.ReferencesRequest.type, error);\n                return Promise.resolve([]);\n            });\n        };\n        var middleware = client.clientOptions.middleware;\n        return vscode_1.languages.registerReferenceProvider(options.documentSelector, {\n            provideReferences: function (document, position, options, token) {\n                return middleware.provideReferences\n                    ? middleware.provideReferences(document, position, options, token, providerReferences)\n                    : providerReferences(document, position, options, token);\n            }\n        });\n    };\n    return ReferencesFeature;\n}(TextDocumentFeature));\nvar DocumentHighlightFeature = /** @class */ (function (_super) {\n    __extends(DocumentHighlightFeature, _super);\n    function DocumentHighlightFeature(client) {\n        return _super.call(this, client, vscode_languageserver_protocol_1.DocumentHighlightRequest.type) || this;\n    }\n    DocumentHighlightFeature.prototype.fillClientCapabilities = function (capabilites) {\n        ensure(ensure(capabilites, 'textDocument'), 'documentHighlight').dynamicRegistration = true;\n    };\n    DocumentHighlightFeature.prototype.initialize = function (capabilities, documentSelector) {\n        if (!capabilities.documentHighlightProvider || !documentSelector) {\n            return;\n        }\n        this.register(this.messages, {\n            id: UUID.generateUuid(),\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\n        });\n    };\n    DocumentHighlightFeature.prototype.registerLanguageProvider = function (options) {\n        var client = this._client;\n        var provideDocumentHighlights = function (document, position, token) {\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentHighlightRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDocumentHighlights, function (error) {\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentHighlightRequest.type, error);\n                return Promise.resolve([]);\n            });\n        };\n        var middleware = client.clientOptions.middleware;\n        return vscode_1.languages.registerDocumentHighlightProvider(options.documentSelector, {\n            provideDocumentHighlights: function (document, position, token) {\n                return middleware.provideDocumentHighlights\n                    ? middleware.provideDocumentHighlights(document, position, token, provideDocumentHighlights)\n                    : provideDocumentHighlights(document, position, token);\n            }\n        });\n    };\n    return DocumentHighlightFeature;\n}(TextDocumentFeature));\nvar DocumentSymbolFeature = /** @class */ (function (_super) {\n    __extends(DocumentSymbolFeature, _super);\n    function DocumentSymbolFeature(client) {\n        return _super.call(this, client, vscode_languageserver_protocol_1.DocumentSymbolRequest.type) || this;\n    }\n    DocumentSymbolFeature.prototype.fillClientCapabilities = function (capabilites) {\n        var symbolCapabilities = ensure(ensure(capabilites, 'textDocument'), 'documentSymbol');\n        symbolCapabilities.dynamicRegistration = true;\n        symbolCapabilities.symbolKind = {\n            valueSet: SupporedSymbolKinds\n        };\n        symbolCapabilities.hierarchicalDocumentSymbolSupport = true;\n    };\n    DocumentSymbolFeature.prototype.initialize = function (capabilities, documentSelector) {\n        if (!capabilities.documentSymbolProvider || !documentSelector) {\n            return;\n        }\n        this.register(this.messages, {\n            id: UUID.generateUuid(),\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\n        });\n    };\n    DocumentSymbolFeature.prototype.registerLanguageProvider = function (options) {\n        var client = this._client;\n        var provideDocumentSymbols = function (document, token) {\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, client.code2ProtocolConverter.asDocumentSymbolParams(document), token).then(function (data) {\n                if (data === null) {\n                    return undefined;\n                }\n                if (data.length === 0) {\n                    return [];\n                }\n                else {\n                    var element = data[0];\n                    if (vscode_languageserver_protocol_1.DocumentSymbol.is(element)) {\n                        return client.protocol2CodeConverter.asDocumentSymbols(data);\n                    }\n                    else {\n                        return client.protocol2CodeConverter.asSymbolInformations(data);\n                    }\n                }\n            }, function (error) {\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, error);\n                return Promise.resolve([]);\n            });\n        };\n        var middleware = client.clientOptions.middleware;\n        return vscode_1.languages.registerDocumentSymbolProvider(options.documentSelector, {\n            provideDocumentSymbols: function (document, token) {\n                return middleware.provideDocumentSymbols\n                    ? middleware.provideDocumentSymbols(document, token, provideDocumentSymbols)\n                    : provideDocumentSymbols(document, token);\n            }\n        });\n    };\n    return DocumentSymbolFeature;\n}(TextDocumentFeature));\nvar WorkspaceSymbolFeature = /** @class */ (function (_super) {\n    __extends(WorkspaceSymbolFeature, _super);\n    function WorkspaceSymbolFeature(client) {\n        return _super.call(this, client, vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type) || this;\n    }\n    WorkspaceSymbolFeature.prototype.fillClientCapabilities = function (capabilites) {\n        var symbolCapabilities = ensure(ensure(capabilites, 'workspace'), 'symbol');\n        symbolCapabilities.dynamicRegistration = true;\n        symbolCapabilities.symbolKind = {\n            valueSet: SupporedSymbolKinds\n        };\n    };\n    WorkspaceSymbolFeature.prototype.initialize = function (capabilities) {\n        if (!capabilities.workspaceSymbolProvider) {\n            return;\n        }\n        this.register(this.messages, {\n            id: UUID.generateUuid(),\n            registerOptions: undefined\n        });\n    };\n    WorkspaceSymbolFeature.prototype.registerLanguageProvider = function (_options) {\n        var client = this._client;\n        var provideWorkspaceSymbols = function (query, token) {\n            return client.sendRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, { query: query }, token).then(client.protocol2CodeConverter.asSymbolInformations, function (error) {\n                client.logFailedRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, error);\n                return Promise.resolve([]);\n            });\n        };\n        var middleware = client.clientOptions.middleware;\n        return vscode_1.languages.registerWorkspaceSymbolProvider({\n            provideWorkspaceSymbols: function (query, token) {\n                return middleware.provideWorkspaceSymbols\n                    ? middleware.provideWorkspaceSymbols(query, token, provideWorkspaceSymbols)\n                    : provideWorkspaceSymbols(query, token);\n            }\n        });\n    };\n    return WorkspaceSymbolFeature;\n}(WorkspaceFeature));\nvar CodeActionFeature = /** @class */ (function (_super) {\n    __extends(CodeActionFeature, _super);\n    function CodeActionFeature(client) {\n        return _super.call(this, client, vscode_languageserver_protocol_1.CodeActionRequest.type) || this;\n    }\n    CodeActionFeature.prototype.fillClientCapabilities = function (capabilites) {\n        var cap = ensure(ensure(capabilites, 'textDocument'), 'codeAction');\n        cap.dynamicRegistration = true;\n        cap.codeActionLiteralSupport = {\n            codeActionKind: {\n                valueSet: [\n                    '',\n                    vscode_languageserver_protocol_1.CodeActionKind.QuickFix,\n                    vscode_languageserver_protocol_1.CodeActionKind.Refactor,\n                    vscode_languageserver_protocol_1.CodeActionKind.RefactorExtract,\n                    vscode_languageserver_protocol_1.CodeActionKind.RefactorInline,\n                    vscode_languageserver_protocol_1.CodeActionKind.RefactorRewrite,\n                    vscode_languageserver_protocol_1.CodeActionKind.Source,\n                    vscode_languageserver_protocol_1.CodeActionKind.SourceOrganizeImports\n                ]\n            }\n        };\n    };\n    CodeActionFeature.prototype.initialize = function (capabilities, documentSelector) {\n        if (!capabilities.codeActionProvider || !documentSelector) {\n            return;\n        }\n        this.register(this.messages, {\n            id: UUID.generateUuid(),\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\n        });\n    };\n    CodeActionFeature.prototype.registerLanguageProvider = function (options) {\n        var client = this._client;\n        var provideCodeActions = function (document, range, context, token) {\n            var params = {\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                range: client.code2ProtocolConverter.asRange(range),\n                context: client.code2ProtocolConverter.asCodeActionContext(context)\n            };\n            return client.sendRequest(vscode_languageserver_protocol_1.CodeActionRequest.type, params, token).then(function (values) {\n                var e_7, _a;\n                if (values === null) {\n                    return undefined;\n                }\n                var result = [];\n                try {\n                    for (var values_1 = __values(values), values_1_1 = values_1.next(); !values_1_1.done; values_1_1 = values_1.next()) {\n                        var item = values_1_1.value;\n                        if (vscode_languageserver_protocol_1.Command.is(item)) {\n                            result.push(client.protocol2CodeConverter.asCommand(item));\n                        }\n                        else {\n                            result.push(client.protocol2CodeConverter.asCodeAction(item));\n                        }\n                        ;\n                    }\n                }\n                catch (e_7_1) { e_7 = { error: e_7_1 }; }\n                finally {\n                    try {\n                        if (values_1_1 && !values_1_1.done && (_a = values_1.return)) _a.call(values_1);\n                    }\n                    finally { if (e_7) throw e_7.error; }\n                }\n                return result;\n            }, function (error) {\n                client.logFailedRequest(vscode_languageserver_protocol_1.CodeActionRequest.type, error);\n                return Promise.resolve([]);\n            });\n        };\n        var middleware = client.clientOptions.middleware;\n        return vscode_1.languages.registerCodeActionsProvider(options.documentSelector, {\n            provideCodeActions: function (document, range, context, token) {\n                return middleware.provideCodeActions\n                    ? middleware.provideCodeActions(document, range, context, token, provideCodeActions)\n                    : provideCodeActions(document, range, context, token);\n            }\n        });\n    };\n    return CodeActionFeature;\n}(TextDocumentFeature));\nvar CodeLensFeature = /** @class */ (function (_super) {\n    __extends(CodeLensFeature, _super);\n    function CodeLensFeature(client) {\n        return _super.call(this, client, vscode_languageserver_protocol_1.CodeLensRequest.type) || this;\n    }\n    CodeLensFeature.prototype.fillClientCapabilities = function (capabilites) {\n        ensure(ensure(capabilites, 'textDocument'), 'codeLens').dynamicRegistration = true;\n    };\n    CodeLensFeature.prototype.initialize = function (capabilities, documentSelector) {\n        if (!capabilities.codeLensProvider || !documentSelector) {\n            return;\n        }\n        this.register(this.messages, {\n            id: UUID.generateUuid(),\n            registerOptions: Object.assign({}, { documentSelector: documentSelector }, capabilities.codeLensProvider)\n        });\n    };\n    CodeLensFeature.prototype.registerLanguageProvider = function (options) {\n        var client = this._client;\n        var provideCodeLenses = function (document, token) {\n            return client.sendRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, client.code2ProtocolConverter.asCodeLensParams(document), token).then(client.protocol2CodeConverter.asCodeLenses, function (error) {\n                client.logFailedRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, error);\n                return Promise.resolve([]);\n            });\n        };\n        var resolveCodeLens = function (codeLens, token) {\n            return client.sendRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, client.code2ProtocolConverter.asCodeLens(codeLens), token).then(client.protocol2CodeConverter.asCodeLens, function (error) {\n                client.logFailedRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, error);\n                return codeLens;\n            });\n        };\n        var middleware = client.clientOptions.middleware;\n        return vscode_1.languages.registerCodeLensProvider(options.documentSelector, {\n            provideCodeLenses: function (document, token) {\n                return middleware.provideCodeLenses\n                    ? middleware.provideCodeLenses(document, token, provideCodeLenses)\n                    : provideCodeLenses(document, token);\n            },\n            resolveCodeLens: (options.resolveProvider)\n                ? function (codeLens, token) {\n                    return middleware.resolveCodeLens\n                        ? middleware.resolveCodeLens(codeLens, token, resolveCodeLens)\n                        : resolveCodeLens(codeLens, token);\n                }\n                : undefined\n        });\n    };\n    return CodeLensFeature;\n}(TextDocumentFeature));\nvar DocumentFormattingFeature = /** @class */ (function (_super) {\n    __extends(DocumentFormattingFeature, _super);\n    function DocumentFormattingFeature(client) {\n        return _super.call(this, client, vscode_languageserver_protocol_1.DocumentFormattingRequest.type) || this;\n    }\n    DocumentFormattingFeature.prototype.fillClientCapabilities = function (capabilites) {\n        ensure(ensure(capabilites, 'textDocument'), 'formatting').dynamicRegistration = true;\n    };\n    DocumentFormattingFeature.prototype.initialize = function (capabilities, documentSelector) {\n        if (!capabilities.documentFormattingProvider || !documentSelector) {\n            return;\n        }\n        this.register(this.messages, {\n            id: UUID.generateUuid(),\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\n        });\n    };\n    DocumentFormattingFeature.prototype.registerLanguageProvider = function (options) {\n        var client = this._client;\n        var provideDocumentFormattingEdits = function (document, options, token) {\n            var params = {\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                options: client.code2ProtocolConverter.asFormattingOptions(options)\n            };\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentFormattingRequest.type, params, token).then(client.protocol2CodeConverter.asTextEdits, function (error) {\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentFormattingRequest.type, error);\n                return Promise.resolve([]);\n            });\n        };\n        var middleware = client.clientOptions.middleware;\n        return vscode_1.languages.registerDocumentFormattingEditProvider(options.documentSelector, {\n            provideDocumentFormattingEdits: function (document, options, token) {\n                return middleware.provideDocumentFormattingEdits\n                    ? middleware.provideDocumentFormattingEdits(document, options, token, provideDocumentFormattingEdits)\n                    : provideDocumentFormattingEdits(document, options, token);\n            }\n        });\n    };\n    return DocumentFormattingFeature;\n}(TextDocumentFeature));\nvar DocumentRangeFormattingFeature = /** @class */ (function (_super) {\n    __extends(DocumentRangeFormattingFeature, _super);\n    function DocumentRangeFormattingFeature(client) {\n        return _super.call(this, client, vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type) || this;\n    }\n    DocumentRangeFormattingFeature.prototype.fillClientCapabilities = function (capabilites) {\n        ensure(ensure(capabilites, 'textDocument'), 'rangeFormatting').dynamicRegistration = true;\n    };\n    DocumentRangeFormattingFeature.prototype.initialize = function (capabilities, documentSelector) {\n        if (!capabilities.documentRangeFormattingProvider || !documentSelector) {\n            return;\n        }\n        this.register(this.messages, {\n            id: UUID.generateUuid(),\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\n        });\n    };\n    DocumentRangeFormattingFeature.prototype.registerLanguageProvider = function (options) {\n        var client = this._client;\n        var provideDocumentRangeFormattingEdits = function (document, range, options, token) {\n            var params = {\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                range: client.code2ProtocolConverter.asRange(range),\n                options: client.code2ProtocolConverter.asFormattingOptions(options)\n            };\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type, params, token).then(client.protocol2CodeConverter.asTextEdits, function (error) {\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type, error);\n                return Promise.resolve([]);\n            });\n        };\n        var middleware = client.clientOptions.middleware;\n        return vscode_1.languages.registerDocumentRangeFormattingEditProvider(options.documentSelector, {\n            provideDocumentRangeFormattingEdits: function (document, range, options, token) {\n                return middleware.provideDocumentRangeFormattingEdits\n                    ? middleware.provideDocumentRangeFormattingEdits(document, range, options, token, provideDocumentRangeFormattingEdits)\n                    : provideDocumentRangeFormattingEdits(document, range, options, token);\n            }\n        });\n    };\n    return DocumentRangeFormattingFeature;\n}(TextDocumentFeature));\nvar DocumentOnTypeFormattingFeature = /** @class */ (function (_super) {\n    __extends(DocumentOnTypeFormattingFeature, _super);\n    function DocumentOnTypeFormattingFeature(client) {\n        return _super.call(this, client, vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type) || this;\n    }\n    DocumentOnTypeFormattingFeature.prototype.fillClientCapabilities = function (capabilites) {\n        ensure(ensure(capabilites, 'textDocument'), 'onTypeFormatting').dynamicRegistration = true;\n    };\n    DocumentOnTypeFormattingFeature.prototype.initialize = function (capabilities, documentSelector) {\n        if (!capabilities.documentOnTypeFormattingProvider || !documentSelector) {\n            return;\n        }\n        this.register(this.messages, {\n            id: UUID.generateUuid(),\n            registerOptions: Object.assign({}, { documentSelector: documentSelector }, capabilities.documentOnTypeFormattingProvider)\n        });\n    };\n    DocumentOnTypeFormattingFeature.prototype.registerLanguageProvider = function (options) {\n        var client = this._client;\n        var moreTriggerCharacter = options.moreTriggerCharacter || [];\n        var provideOnTypeFormattingEdits = function (document, position, ch, options, token) {\n            var params = {\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                position: client.code2ProtocolConverter.asPosition(position),\n                ch: ch,\n                options: client.code2ProtocolConverter.asFormattingOptions(options)\n            };\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type, params, token).then(client.protocol2CodeConverter.asTextEdits, function (error) {\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type, error);\n                return Promise.resolve([]);\n            });\n        };\n        var middleware = client.clientOptions.middleware;\n        return vscode_1.languages.registerOnTypeFormattingEditProvider.apply(vscode_1.languages, __spread([options.documentSelector, {\n                provideOnTypeFormattingEdits: function (document, position, ch, options, token) {\n                    return middleware.provideOnTypeFormattingEdits\n                        ? middleware.provideOnTypeFormattingEdits(document, position, ch, options, token, provideOnTypeFormattingEdits)\n                        : provideOnTypeFormattingEdits(document, position, ch, options, token);\n                }\n            }, options.firstTriggerCharacter], moreTriggerCharacter));\n    };\n    return DocumentOnTypeFormattingFeature;\n}(TextDocumentFeature));\nvar RenameFeature = /** @class */ (function (_super) {\n    __extends(RenameFeature, _super);\n    function RenameFeature(client) {\n        return _super.call(this, client, vscode_languageserver_protocol_1.RenameRequest.type) || this;\n    }\n    RenameFeature.prototype.fillClientCapabilities = function (capabilites) {\n        ensure(ensure(capabilites, 'textDocument'), 'rename').dynamicRegistration = true;\n    };\n    RenameFeature.prototype.initialize = function (capabilities, documentSelector) {\n        if (!capabilities.renameProvider || !documentSelector) {\n            return;\n        }\n        this.register(this.messages, {\n            id: UUID.generateUuid(),\n            registerOptions: Object.assign({}, { documentSelector: documentSelector })\n        });\n    };\n    RenameFeature.prototype.registerLanguageProvider = function (options) {\n        var client = this._client;\n        var provideRenameEdits = function (document, position, newName, token) {\n            var params = {\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document),\n                position: client.code2ProtocolConverter.asPosition(position),\n                newName: newName\n            };\n            return client.sendRequest(vscode_languageserver_protocol_1.RenameRequest.type, params, token).then(client.protocol2CodeConverter.asWorkspaceEdit, function (error) {\n                client.logFailedRequest(vscode_languageserver_protocol_1.RenameRequest.type, error);\n                return Promise.reject(new Error(error.message));\n            });\n        };\n        var middleware = client.clientOptions.middleware;\n        return vscode_1.languages.registerRenameProvider(options.documentSelector, {\n            provideRenameEdits: function (document, position, newName, token) {\n                return middleware.provideRenameEdits\n                    ? middleware.provideRenameEdits(document, position, newName, token, provideRenameEdits)\n                    : provideRenameEdits(document, position, newName, token);\n            }\n        });\n    };\n    return RenameFeature;\n}(TextDocumentFeature));\nvar DocumentLinkFeature = /** @class */ (function (_super) {\n    __extends(DocumentLinkFeature, _super);\n    function DocumentLinkFeature(client) {\n        return _super.call(this, client, vscode_languageserver_protocol_1.DocumentLinkRequest.type) || this;\n    }\n    DocumentLinkFeature.prototype.fillClientCapabilities = function (capabilites) {\n        ensure(ensure(capabilites, 'textDocument'), 'documentLink').dynamicRegistration = true;\n    };\n    DocumentLinkFeature.prototype.initialize = function (capabilities, documentSelector) {\n        if (!capabilities.documentLinkProvider || !documentSelector) {\n            return;\n        }\n        this.register(this.messages, {\n            id: UUID.generateUuid(),\n            registerOptions: Object.assign({}, { documentSelector: documentSelector }, capabilities.documentLinkProvider)\n        });\n    };\n    DocumentLinkFeature.prototype.registerLanguageProvider = function (options) {\n        var client = this._client;\n        var provideDocumentLinks = function (document, token) {\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentLinkRequest.type, client.code2ProtocolConverter.asDocumentLinkParams(document), token).then(client.protocol2CodeConverter.asDocumentLinks, function (error) {\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentLinkRequest.type, error);\n                Promise.resolve(new Error(error.message));\n            });\n        };\n        var resolveDocumentLink = function (link, token) {\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentLinkResolveRequest.type, client.code2ProtocolConverter.asDocumentLink(link), token).then(client.protocol2CodeConverter.asDocumentLink, function (error) {\n                client.logFailedRequest(vscode_languageserver_protocol_1.DocumentLinkResolveRequest.type, error);\n                Promise.resolve(new Error(error.message));\n            });\n        };\n        var middleware = client.clientOptions.middleware;\n        return vscode_1.languages.registerDocumentLinkProvider(options.documentSelector, {\n            provideDocumentLinks: function (document, token) {\n                return middleware.provideDocumentLinks\n                    ? middleware.provideDocumentLinks(document, token, provideDocumentLinks)\n                    : provideDocumentLinks(document, token);\n            },\n            resolveDocumentLink: options.resolveProvider\n                ? function (link, token) {\n                    return middleware.resolveDocumentLink\n                        ? middleware.resolveDocumentLink(link, token, resolveDocumentLink)\n                        : resolveDocumentLink(link, token);\n                }\n                : undefined\n        });\n    };\n    return DocumentLinkFeature;\n}(TextDocumentFeature));\nvar ConfigurationFeature = /** @class */ (function () {\n    function ConfigurationFeature(_client) {\n        this._client = _client;\n        this._listeners = new Map();\n    }\n    Object.defineProperty(ConfigurationFeature.prototype, \"messages\", {\n        get: function () {\n            return vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ConfigurationFeature.prototype.fillClientCapabilities = function (capabilities) {\n        ensure(ensure(capabilities, 'workspace'), 'didChangeConfiguration').dynamicRegistration = true;\n    };\n    ConfigurationFeature.prototype.initialize = function () {\n        var section = this._client.clientOptions.synchronize.configurationSection;\n        if (section !== void 0) {\n            this.register(this.messages, {\n                id: UUID.generateUuid(),\n                registerOptions: {\n                    section: section\n                }\n            });\n        }\n    };\n    ConfigurationFeature.prototype.register = function (_message, data) {\n        var _this = this;\n        var disposable = vscode_1.workspace.onDidChangeConfiguration(function (event) {\n            _this.onDidChangeConfiguration(data.registerOptions.section, event);\n        });\n        this._listeners.set(data.id, disposable);\n        if (data.registerOptions.section !== void 0) {\n            this.onDidChangeConfiguration(data.registerOptions.section, undefined);\n        }\n    };\n    ConfigurationFeature.prototype.unregister = function (id) {\n        var disposable = this._listeners.get(id);\n        if (disposable) {\n            this._listeners.delete(id);\n            disposable.dispose();\n        }\n    };\n    ConfigurationFeature.prototype.dispose = function () {\n        var e_8, _a;\n        try {\n            for (var _b = __values(this._listeners.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var disposable = _c.value;\n                disposable.dispose();\n            }\n        }\n        catch (e_8_1) { e_8 = { error: e_8_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_8) throw e_8.error; }\n        }\n        this._listeners.clear();\n    };\n    ConfigurationFeature.prototype.onDidChangeConfiguration = function (configurationSection, event) {\n        var _this = this;\n        var sections;\n        if (Is.string(configurationSection)) {\n            sections = [configurationSection];\n        }\n        else {\n            sections = configurationSection;\n        }\n        if (sections !== void 0 && event !== void 0) {\n            var affected = sections.some(function (section) { return event.affectsConfiguration(section); });\n            if (!affected) {\n                return;\n            }\n        }\n        var didChangeConfiguration = function (sections) {\n            if (sections === void 0) {\n                _this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, { settings: null });\n                return;\n            }\n            _this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, { settings: _this.extractSettingsInformation(sections) });\n        };\n        var middleware = this.getMiddleware();\n        middleware\n            ? middleware(sections, didChangeConfiguration)\n            : didChangeConfiguration(sections);\n    };\n    ConfigurationFeature.prototype.extractSettingsInformation = function (keys) {\n        function ensurePath(config, path) {\n            var current = config;\n            for (var i = 0; i < path.length - 1; i++) {\n                var obj = current[path[i]];\n                if (!obj) {\n                    obj = Object.create(null);\n                    current[path[i]] = obj;\n                }\n                current = obj;\n            }\n            return current;\n        }\n        var resource = this._client.clientOptions.workspaceFolder\n            ? this._client.clientOptions.workspaceFolder.uri\n            : undefined;\n        var result = Object.create(null);\n        for (var i = 0; i < keys.length; i++) {\n            var key = keys[i];\n            var index = key.indexOf('.');\n            var config = null;\n            if (index >= 0) {\n                config = vscode_1.workspace.getConfiguration(key.substr(0, index), resource).get(key.substr(index + 1));\n            }\n            else {\n                config = vscode_1.workspace.getConfiguration(key, resource);\n            }\n            if (config) {\n                var path = keys[i].split('.');\n                ensurePath(result, path)[path[path.length - 1]] = config;\n            }\n        }\n        return result;\n    };\n    ConfigurationFeature.prototype.getMiddleware = function () {\n        var middleware = this._client.clientOptions.middleware;\n        if (middleware.workspace && middleware.workspace.didChangeConfiguration) {\n            return middleware.workspace.didChangeConfiguration;\n        }\n        else {\n            return undefined;\n        }\n    };\n    return ConfigurationFeature;\n}());\nvar ExecuteCommandFeature = /** @class */ (function () {\n    function ExecuteCommandFeature(_client) {\n        this._client = _client;\n        this._commands = new Map();\n    }\n    Object.defineProperty(ExecuteCommandFeature.prototype, \"messages\", {\n        get: function () {\n            return vscode_languageserver_protocol_1.ExecuteCommandRequest.type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ExecuteCommandFeature.prototype.fillClientCapabilities = function (capabilities) {\n        ensure(ensure(capabilities, 'workspace'), 'executeCommand').dynamicRegistration = true;\n    };\n    ExecuteCommandFeature.prototype.initialize = function (capabilities) {\n        if (!capabilities.executeCommandProvider) {\n            return;\n        }\n        this.register(this.messages, {\n            id: UUID.generateUuid(),\n            registerOptions: Object.assign({}, capabilities.executeCommandProvider)\n        });\n    };\n    ExecuteCommandFeature.prototype.register = function (_message, data) {\n        var e_9, _a;\n        var client = this._client;\n        if (data.registerOptions.commands) {\n            var disposeables = [];\n            var _loop_2 = function (command) {\n                disposeables.push(vscode_1.commands.registerCommand(command, function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var params = {\n                        command: command,\n                        arguments: args\n                    };\n                    return client.sendRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, params).then(undefined, function (error) {\n                        client.logFailedRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, error);\n                    });\n                }));\n            };\n            try {\n                for (var _b = __values(data.registerOptions.commands), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var command = _c.value;\n                    _loop_2(command);\n                }\n            }\n            catch (e_9_1) { e_9 = { error: e_9_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_9) throw e_9.error; }\n            }\n            this._commands.set(data.id, disposeables);\n        }\n    };\n    ExecuteCommandFeature.prototype.unregister = function (id) {\n        var disposeables = this._commands.get(id);\n        if (disposeables) {\n            disposeables.forEach(function (disposable) { return disposable.dispose(); });\n        }\n    };\n    ExecuteCommandFeature.prototype.dispose = function () {\n        this._commands.forEach(function (value) {\n            value.forEach(function (disposable) { return disposable.dispose(); });\n        });\n        this._commands.clear();\n    };\n    return ExecuteCommandFeature;\n}());\nvar MessageTransports;\n(function (MessageTransports) {\n    function is(value) {\n        var candidate = value;\n        return candidate && vscode_languageserver_protocol_1.MessageReader.is(value.reader) && vscode_languageserver_protocol_1.MessageWriter.is(value.writer);\n    }\n    MessageTransports.is = is;\n})(MessageTransports = exports.MessageTransports || (exports.MessageTransports = {}));\nvar BaseLanguageClient = /** @class */ (function () {\n    function BaseLanguageClient(id, name, clientOptions) {\n        var _this = this;\n        this._features = [];\n        this._method2Message = new Map();\n        this._dynamicFeatures = new Map();\n        this._id = id;\n        this._name = name;\n        clientOptions = clientOptions || {};\n        this._clientOptions = {\n            documentSelector: clientOptions.documentSelector || [],\n            synchronize: clientOptions.synchronize || {},\n            diagnosticCollectionName: clientOptions.diagnosticCollectionName,\n            outputChannelName: clientOptions.outputChannelName || this._name,\n            revealOutputChannelOn: clientOptions.revealOutputChannelOn || RevealOutputChannelOn.Error,\n            stdioEncoding: clientOptions.stdioEncoding || 'utf8',\n            initializationOptions: clientOptions.initializationOptions,\n            initializationFailedHandler: clientOptions.initializationFailedHandler,\n            errorHandler: clientOptions.errorHandler || new DefaultErrorHandler(this._name),\n            middleware: clientOptions.middleware || {},\n            uriConverters: clientOptions.uriConverters,\n            workspaceFolder: clientOptions.workspaceFolder\n        };\n        this._clientOptions.synchronize = this._clientOptions.synchronize || {};\n        this.state = ClientState.Initial;\n        this._connectionPromise = undefined;\n        this._resolvedConnection = undefined;\n        this._initializeResult = undefined;\n        if (clientOptions.outputChannel) {\n            this._outputChannel = clientOptions.outputChannel;\n            this._disposeOutputChannel = false;\n        }\n        else {\n            this._outputChannel = undefined;\n            this._disposeOutputChannel = true;\n        }\n        this._listeners = undefined;\n        this._providers = undefined;\n        this._diagnostics = undefined;\n        this._fileEvents = [];\n        this._fileEventDelayer = new async_1.Delayer(250);\n        this._onReady = new Promise(function (resolve, reject) {\n            _this._onReadyCallbacks = { resolve: resolve, reject: reject };\n        });\n        this._onStop = undefined;\n        this._telemetryEmitter = new vscode_languageserver_protocol_1.Emitter();\n        this._stateChangeEmitter = new vscode_languageserver_protocol_1.Emitter();\n        this._tracer = {\n            log: function (message, data) {\n                _this.logTrace(message, data);\n            }\n        };\n        this._c2p = c2p.createConverter(clientOptions.uriConverters ? clientOptions.uriConverters.code2Protocol : undefined);\n        this._p2c = p2c.createConverter(clientOptions.uriConverters ? clientOptions.uriConverters.protocol2Code : undefined);\n        this._syncedDocuments = new Map();\n        this.registerBuiltinFeatures();\n    }\n    Object.defineProperty(BaseLanguageClient.prototype, \"state\", {\n        get: function () {\n            return this._state;\n        },\n        set: function (value) {\n            var oldState = this.getPublicState();\n            this._state = value;\n            var newState = this.getPublicState();\n            if (newState !== oldState) {\n                this._stateChangeEmitter.fire({ oldState: oldState, newState: newState });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BaseLanguageClient.prototype.getPublicState = function () {\n        if (this.state === ClientState.Running) {\n            return State.Running;\n        }\n        else {\n            return State.Stopped;\n        }\n    };\n    Object.defineProperty(BaseLanguageClient.prototype, \"initializeResult\", {\n        get: function () {\n            return this._initializeResult;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BaseLanguageClient.prototype.sendRequest = function (type) {\n        var _a;\n        var params = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            params[_i - 1] = arguments[_i];\n        }\n        if (!this.isConnectionActive()) {\n            throw new Error('Language client is not ready yet');\n        }\n        this.forceDocumentSync();\n        try {\n            return (_a = this._resolvedConnection).sendRequest.apply(_a, __spread([type], params));\n        }\n        catch (error) {\n            this.error(\"Sending request \" + (Is.string(type) ? type : type.method) + \" failed.\", error);\n            throw error;\n        }\n    };\n    BaseLanguageClient.prototype.onRequest = function (type, handler) {\n        if (!this.isConnectionActive()) {\n            throw new Error('Language client is not ready yet');\n        }\n        try {\n            this._resolvedConnection.onRequest(type, handler);\n        }\n        catch (error) {\n            this.error(\"Registering request handler \" + (Is.string(type) ? type : type.method) + \" failed.\", error);\n            throw error;\n        }\n    };\n    BaseLanguageClient.prototype.sendNotification = function (type, params) {\n        if (!this.isConnectionActive()) {\n            throw new Error('Language client is not ready yet');\n        }\n        this.forceDocumentSync();\n        try {\n            this._resolvedConnection.sendNotification(type, params);\n        }\n        catch (error) {\n            this.error(\"Sending notification \" + (Is.string(type) ? type : type.method) + \" failed.\", error);\n            throw error;\n        }\n    };\n    BaseLanguageClient.prototype.onNotification = function (type, handler) {\n        if (!this.isConnectionActive()) {\n            throw new Error('Language client is not ready yet');\n        }\n        try {\n            this._resolvedConnection.onNotification(type, handler);\n        }\n        catch (error) {\n            this.error(\"Registering notification handler \" + (Is.string(type) ? type : type.method) + \" failed.\", error);\n            throw error;\n        }\n    };\n    Object.defineProperty(BaseLanguageClient.prototype, \"clientOptions\", {\n        get: function () {\n            return this._clientOptions;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseLanguageClient.prototype, \"protocol2CodeConverter\", {\n        get: function () {\n            return this._p2c;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseLanguageClient.prototype, \"code2ProtocolConverter\", {\n        get: function () {\n            return this._c2p;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseLanguageClient.prototype, \"onTelemetry\", {\n        get: function () {\n            return this._telemetryEmitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseLanguageClient.prototype, \"onDidChangeState\", {\n        get: function () {\n            return this._stateChangeEmitter.event;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseLanguageClient.prototype, \"outputChannel\", {\n        get: function () {\n            if (!this._outputChannel) {\n                this._outputChannel = vscode_1.window.createOutputChannel(this._clientOptions.outputChannelName ? this._clientOptions.outputChannelName : this._name);\n            }\n            return this._outputChannel;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(BaseLanguageClient.prototype, \"diagnostics\", {\n        get: function () {\n            return this._diagnostics;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BaseLanguageClient.prototype.createDefaultErrorHandler = function () {\n        return new DefaultErrorHandler(this._name);\n    };\n    Object.defineProperty(BaseLanguageClient.prototype, \"trace\", {\n        set: function (value) {\n            var _this = this;\n            this._trace = value;\n            this.onReady().then(function () {\n                _this.resolveConnection().then(function (connection) {\n                    connection.trace(value, _this._tracer);\n                });\n            }, function () {\n            });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    BaseLanguageClient.prototype.data2String = function (data) {\n        if (data instanceof vscode_languageserver_protocol_1.ResponseError) {\n            var responseError = data;\n            return \"  Message: \" + responseError.message + \"\\n  Code: \" + responseError.code + \" \" + (responseError.data ? '\\n' + responseError.data.toString() : '');\n        }\n        if (data instanceof Error) {\n            if (Is.string(data.stack)) {\n                return data.stack;\n            }\n            return data.message;\n        }\n        if (Is.string(data)) {\n            return data;\n        }\n        return data.toString();\n    };\n    BaseLanguageClient.prototype.info = function (message, data) {\n        this.outputChannel.appendLine(\"[Info  - \" + (new Date().toLocaleTimeString()) + \"] \" + message);\n        if (data) {\n            this.outputChannel.appendLine(this.data2String(data));\n        }\n        if (this._clientOptions.revealOutputChannelOn <= RevealOutputChannelOn.Info) {\n            this.outputChannel.show(true);\n        }\n    };\n    BaseLanguageClient.prototype.warn = function (message, data) {\n        this.outputChannel.appendLine(\"[Warn  - \" + (new Date().toLocaleTimeString()) + \"] \" + message);\n        if (data) {\n            this.outputChannel.appendLine(this.data2String(data));\n        }\n        if (this._clientOptions.revealOutputChannelOn <= RevealOutputChannelOn.Warn) {\n            this.outputChannel.show(true);\n        }\n    };\n    BaseLanguageClient.prototype.error = function (message, data) {\n        this.outputChannel.appendLine(\"[Error - \" + (new Date().toLocaleTimeString()) + \"] \" + message);\n        if (data) {\n            this.outputChannel.appendLine(this.data2String(data));\n        }\n        if (this._clientOptions.revealOutputChannelOn <= RevealOutputChannelOn.Error) {\n            this.outputChannel.show(true);\n        }\n    };\n    BaseLanguageClient.prototype.logTrace = function (message, data) {\n        this.outputChannel.appendLine(\"[Trace - \" + (new Date().toLocaleTimeString()) + \"] \" + message);\n        if (data) {\n            this.outputChannel.appendLine(this.data2String(data));\n        }\n    };\n    BaseLanguageClient.prototype.needsStart = function () {\n        return this.state === ClientState.Initial || this.state === ClientState.Stopping || this.state === ClientState.Stopped;\n    };\n    BaseLanguageClient.prototype.needsStop = function () {\n        return this.state === ClientState.Starting || this.state === ClientState.Running;\n    };\n    BaseLanguageClient.prototype.onReady = function () {\n        return this._onReady;\n    };\n    BaseLanguageClient.prototype.isConnectionActive = function () {\n        return this.state === ClientState.Running && !!this._resolvedConnection;\n    };\n    BaseLanguageClient.prototype.start = function () {\n        var _this = this;\n        this._listeners = [];\n        this._providers = [];\n        // If we restart then the diagnostics collection is reused.\n        if (!this._diagnostics) {\n            this._diagnostics = this._clientOptions.diagnosticCollectionName\n                ? vscode_1.languages.createDiagnosticCollection(this._clientOptions.diagnosticCollectionName)\n                : vscode_1.languages.createDiagnosticCollection();\n        }\n        this.state = ClientState.Starting;\n        this.resolveConnection().then(function (connection) {\n            connection.onLogMessage(function (message) {\n                switch (message.type) {\n                    case vscode_languageserver_protocol_1.MessageType.Error:\n                        _this.error(message.message);\n                        break;\n                    case vscode_languageserver_protocol_1.MessageType.Warning:\n                        _this.warn(message.message);\n                        break;\n                    case vscode_languageserver_protocol_1.MessageType.Info:\n                        _this.info(message.message);\n                        break;\n                    default:\n                        _this.outputChannel.appendLine(message.message);\n                }\n            });\n            connection.onShowMessage(function (message) {\n                switch (message.type) {\n                    case vscode_languageserver_protocol_1.MessageType.Error:\n                        vscode_1.window.showErrorMessage(message.message);\n                        break;\n                    case vscode_languageserver_protocol_1.MessageType.Warning:\n                        vscode_1.window.showWarningMessage(message.message);\n                        break;\n                    case vscode_languageserver_protocol_1.MessageType.Info:\n                        vscode_1.window.showInformationMessage(message.message);\n                        break;\n                    default:\n                        vscode_1.window.showInformationMessage(message.message);\n                }\n            });\n            connection.onRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, function (params) {\n                var messageFunc;\n                switch (params.type) {\n                    case vscode_languageserver_protocol_1.MessageType.Error:\n                        messageFunc = vscode_1.window.showErrorMessage;\n                        break;\n                    case vscode_languageserver_protocol_1.MessageType.Warning:\n                        messageFunc = vscode_1.window.showWarningMessage;\n                        break;\n                    case vscode_languageserver_protocol_1.MessageType.Info:\n                        messageFunc = vscode_1.window.showInformationMessage;\n                        break;\n                    default:\n                        messageFunc = vscode_1.window.showInformationMessage;\n                }\n                var actions = params.actions || [];\n                return messageFunc.apply(void 0, __spread([params.message], actions));\n            });\n            connection.onTelemetry(function (data) {\n                _this._telemetryEmitter.fire(data);\n            });\n            connection.listen();\n            // Error is handled in the intialize call.\n            return _this.initialize(connection);\n        }).then(undefined, function (error) {\n            _this.state = ClientState.StartFailed;\n            _this._onReadyCallbacks.reject(error);\n            _this.error('Starting client failed', error);\n            vscode_1.window.showErrorMessage(\"Couldn't start client \" + _this._name);\n        });\n        return new vscode_1.Disposable(function () {\n            if (_this.needsStop()) {\n                _this.stop();\n            }\n        });\n    };\n    BaseLanguageClient.prototype.resolveConnection = function () {\n        if (!this._connectionPromise) {\n            this._connectionPromise = this.createConnection();\n        }\n        return this._connectionPromise;\n    };\n    BaseLanguageClient.prototype.initialize = function (connection) {\n        var _this = this;\n        this.refreshTrace(connection, false);\n        var initOption = this._clientOptions.initializationOptions;\n        var rootPath = this._clientOptions.workspaceFolder\n            ? this._clientOptions.workspaceFolder.uri.fsPath\n            : this._clientGetRootPath();\n        var initParams = {\n            processId: process.pid,\n            rootPath: rootPath ? rootPath : null,\n            rootUri: rootPath ? this._c2p.asUri(vscode_1.Uri.file(rootPath)) : null,\n            capabilities: this.computeClientCapabilities(),\n            initializationOptions: Is.func(initOption) ? initOption() : initOption,\n            trace: vscode_languageserver_protocol_1.Trace.toString(this._trace),\n            workspaceFolders: null\n        };\n        this.fillInitializeParams(initParams);\n        return connection.initialize(initParams).then(function (result) {\n            _this._resolvedConnection = connection;\n            _this._initializeResult = result;\n            _this.state = ClientState.Running;\n            var textDocumentSyncOptions = undefined;\n            if (Is.number(result.capabilities.textDocumentSync) && result.capabilities.textDocumentSync !== vscode_languageserver_protocol_1.TextDocumentSyncKind.None) {\n                textDocumentSyncOptions = {\n                    openClose: true,\n                    change: result.capabilities.textDocumentSync,\n                    save: {\n                        includeText: false\n                    }\n                };\n            }\n            else if (result.capabilities.textDocumentSync !== void 0 && result.capabilities.textDocumentSync !== null) {\n                textDocumentSyncOptions = result.capabilities.textDocumentSync;\n            }\n            _this._capabilities = Object.assign({}, result.capabilities, { resolvedTextDocumentSync: textDocumentSyncOptions });\n            connection.onDiagnostics(function (params) { return _this.handleDiagnostics(params); });\n            connection.onRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, function (params) { return _this.handleRegistrationRequest(params); });\n            // See https://github.com/Microsoft/vscode-languageserver-node/issues/199\n            connection.onRequest('client/registerFeature', function (params) { return _this.handleRegistrationRequest(params); });\n            connection.onRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, function (params) { return _this.handleUnregistrationRequest(params); });\n            // See https://github.com/Microsoft/vscode-languageserver-node/issues/199\n            connection.onRequest('client/unregisterFeature', function (params) { return _this.handleUnregistrationRequest(params); });\n            connection.onRequest(vscode_languageserver_protocol_1.ApplyWorkspaceEditRequest.type, function (params) { return _this.handleApplyWorkspaceEdit(params); });\n            connection.sendNotification(vscode_languageserver_protocol_1.InitializedNotification.type, {});\n            _this.hookFileEvents(connection);\n            _this.hookConfigurationChanged(connection);\n            _this.initializeFeatures(connection);\n            _this._onReadyCallbacks.resolve();\n            return result;\n        }).then(undefined, function (error) {\n            if (_this._clientOptions.initializationFailedHandler) {\n                if (_this._clientOptions.initializationFailedHandler(error)) {\n                    _this.initialize(connection);\n                }\n                else {\n                    _this.stop();\n                    _this._onReadyCallbacks.reject(error);\n                }\n            }\n            else if (error instanceof vscode_languageserver_protocol_1.ResponseError && error.data && error.data.retry) {\n                vscode_1.window.showErrorMessage(error.message, { title: 'Retry', id: \"retry\" }).then(function (item) {\n                    if (item && item.id === 'retry') {\n                        _this.initialize(connection);\n                    }\n                    else {\n                        _this.stop();\n                        _this._onReadyCallbacks.reject(error);\n                    }\n                });\n            }\n            else {\n                if (error && error.message) {\n                    vscode_1.window.showErrorMessage(error.message);\n                }\n                _this.error('Server initialization failed.', error);\n                _this.stop();\n                _this._onReadyCallbacks.reject(error);\n            }\n        });\n    };\n    BaseLanguageClient.prototype._clientGetRootPath = function () {\n        var folders = vscode_1.workspace.workspaceFolders;\n        if (!folders || folders.length === 0) {\n            return undefined;\n        }\n        var folder = folders[0];\n        if (folder.uri.scheme === 'file') {\n            return folder.uri.fsPath;\n        }\n        return undefined;\n    };\n    BaseLanguageClient.prototype.stop = function () {\n        var _this = this;\n        this._initializeResult = undefined;\n        if (!this._connectionPromise) {\n            this.state = ClientState.Stopped;\n            return Promise.resolve();\n        }\n        if (this.state === ClientState.Stopping && this._onStop) {\n            return this._onStop;\n        }\n        this.state = ClientState.Stopping;\n        this.cleanUp();\n        // unkook listeners\n        return this._onStop = this.resolveConnection().then(function (connection) {\n            return connection.shutdown().then(function () {\n                connection.exit();\n                connection.dispose();\n                _this.state = ClientState.Stopped;\n                _this._onStop = undefined;\n                _this._connectionPromise = undefined;\n                _this._resolvedConnection = undefined;\n            });\n        });\n    };\n    BaseLanguageClient.prototype.cleanUp = function (channel, diagnostics) {\n        var e_10, _a;\n        if (channel === void 0) { channel = true; }\n        if (diagnostics === void 0) { diagnostics = true; }\n        if (this._listeners) {\n            this._listeners.forEach(function (listener) { return listener.dispose(); });\n            this._listeners = undefined;\n        }\n        if (this._providers) {\n            this._providers.forEach(function (provider) { return provider.dispose(); });\n            this._providers = undefined;\n        }\n        if (this._syncedDocuments) {\n            this._syncedDocuments.clear();\n        }\n        try {\n            for (var _b = __values(this._dynamicFeatures.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var handler = _c.value;\n                handler.dispose();\n            }\n        }\n        catch (e_10_1) { e_10 = { error: e_10_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_10) throw e_10.error; }\n        }\n        if (channel && this._outputChannel && this._disposeOutputChannel) {\n            this._outputChannel.dispose();\n            this._outputChannel = undefined;\n        }\n        if (diagnostics && this._diagnostics) {\n            this._diagnostics.dispose();\n            this._diagnostics = undefined;\n        }\n    };\n    BaseLanguageClient.prototype.notifyFileEvent = function (event) {\n        var _this = this;\n        this._fileEvents.push(event);\n        this._fileEventDelayer.trigger(function () {\n            _this.onReady().then(function () {\n                _this.resolveConnection().then(function (connection) {\n                    if (_this.isConnectionActive()) {\n                        connection.didChangeWatchedFiles({ changes: _this._fileEvents });\n                    }\n                    _this._fileEvents = [];\n                });\n            }, function (error) {\n                _this.error(\"Notify file events failed.\", error);\n            });\n        });\n    };\n    BaseLanguageClient.prototype.forceDocumentSync = function () {\n        this._dynamicFeatures.get(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type.method).forceDelivery();\n    };\n    BaseLanguageClient.prototype.handleDiagnostics = function (params) {\n        var _this = this;\n        if (!this._diagnostics) {\n            return;\n        }\n        var uri = this._p2c.asUri(params.uri);\n        var diagnostics = this._p2c.asDiagnostics(params.diagnostics);\n        var middleware = this.clientOptions.middleware.handleDiagnostics;\n        if (middleware) {\n            middleware(uri, diagnostics, function (uri, diagnostics) { return _this.setDiagnostics(uri, diagnostics); });\n        }\n        else {\n            this.setDiagnostics(uri, diagnostics);\n        }\n    };\n    BaseLanguageClient.prototype.setDiagnostics = function (uri, diagnostics) {\n        if (!this._diagnostics) {\n            return;\n        }\n        this._diagnostics.set(uri, diagnostics);\n    };\n    BaseLanguageClient.prototype.createConnection = function () {\n        var _this = this;\n        var errorHandler = function (error, message, count) {\n            _this.handleConnectionError(error, message, count);\n        };\n        var closeHandler = function () {\n            _this.handleConnectionClosed();\n        };\n        return this.createMessageTransports(this._clientOptions.stdioEncoding || 'utf8').then(function (transports) {\n            return createConnection(transports.reader, transports.writer, errorHandler, closeHandler);\n        });\n    };\n    BaseLanguageClient.prototype.handleConnectionClosed = function () {\n        // Check whether this is a normal shutdown in progress or the client stopped normally.\n        if (this.state === ClientState.Stopping || this.state === ClientState.Stopped) {\n            return;\n        }\n        try {\n            if (this._resolvedConnection) {\n                this._resolvedConnection.dispose();\n            }\n        }\n        catch (error) {\n            // Disposing a connection could fail if error cases.\n        }\n        var action = CloseAction.DoNotRestart;\n        try {\n            action = this._clientOptions.errorHandler.closed();\n        }\n        catch (error) {\n            // Ignore errors coming from the error handler.\n        }\n        this._connectionPromise = undefined;\n        this._resolvedConnection = undefined;\n        if (action === CloseAction.DoNotRestart) {\n            this.error('Connection to server got closed. Server will not be restarted.');\n            this.state = ClientState.Stopped;\n            this.cleanUp(false, true);\n        }\n        else if (action === CloseAction.Restart) {\n            this.info('Connection to server got closed. Server will restart.');\n            this.cleanUp(false, false);\n            this.state = ClientState.Initial;\n            this.start();\n        }\n    };\n    BaseLanguageClient.prototype.handleConnectionError = function (error, message, count) {\n        var action = this._clientOptions.errorHandler.error(error, message, count);\n        if (action === ErrorAction.Shutdown) {\n            this.error('Connection to server is erroring. Shutting down server.');\n            this.stop();\n        }\n    };\n    BaseLanguageClient.prototype.hookConfigurationChanged = function (connection) {\n        var _this = this;\n        vscode_1.workspace.onDidChangeConfiguration(function () {\n            _this.refreshTrace(connection, true);\n        });\n    };\n    BaseLanguageClient.prototype.refreshTrace = function (connection, sendNotification) {\n        if (sendNotification === void 0) { sendNotification = false; }\n        var config = vscode_1.workspace.getConfiguration(this._id);\n        var trace = vscode_languageserver_protocol_1.Trace.Off;\n        if (config) {\n            trace = vscode_languageserver_protocol_1.Trace.fromString(config.get('trace.server', 'off'));\n        }\n        this._trace = trace;\n        connection.trace(this._trace, this._tracer, sendNotification);\n    };\n    BaseLanguageClient.prototype.hookFileEvents = function (_connection) {\n        var fileEvents = this._clientOptions.synchronize.fileEvents;\n        if (!fileEvents) {\n            return;\n        }\n        var watchers;\n        if (Is.array(fileEvents)) {\n            watchers = fileEvents;\n        }\n        else {\n            watchers = [fileEvents];\n        }\n        if (!watchers) {\n            return;\n        }\n        this._dynamicFeatures.get(vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type.method).registerRaw(UUID.generateUuid(), watchers);\n    };\n    BaseLanguageClient.prototype.registerFeatures = function (features) {\n        var e_11, _a;\n        try {\n            for (var features_1 = __values(features), features_1_1 = features_1.next(); !features_1_1.done; features_1_1 = features_1.next()) {\n                var feature = features_1_1.value;\n                this.registerFeature(feature);\n            }\n        }\n        catch (e_11_1) { e_11 = { error: e_11_1 }; }\n        finally {\n            try {\n                if (features_1_1 && !features_1_1.done && (_a = features_1.return)) _a.call(features_1);\n            }\n            finally { if (e_11) throw e_11.error; }\n        }\n    };\n    BaseLanguageClient.prototype.registerFeature = function (feature) {\n        var e_12, _a;\n        this._features.push(feature);\n        if (DynamicFeature.is(feature)) {\n            var messages = feature.messages;\n            if (Array.isArray(messages)) {\n                try {\n                    for (var messages_1 = __values(messages), messages_1_1 = messages_1.next(); !messages_1_1.done; messages_1_1 = messages_1.next()) {\n                        var message = messages_1_1.value;\n                        this._method2Message.set(message.method, message);\n                        this._dynamicFeatures.set(message.method, feature);\n                    }\n                }\n                catch (e_12_1) { e_12 = { error: e_12_1 }; }\n                finally {\n                    try {\n                        if (messages_1_1 && !messages_1_1.done && (_a = messages_1.return)) _a.call(messages_1);\n                    }\n                    finally { if (e_12) throw e_12.error; }\n                }\n            }\n            else {\n                this._method2Message.set(messages.method, messages);\n                this._dynamicFeatures.set(messages.method, feature);\n            }\n        }\n    };\n    BaseLanguageClient.prototype.registerBuiltinFeatures = function () {\n        var _this = this;\n        this.registerFeature(new ConfigurationFeature(this));\n        this.registerFeature(new DidOpenTextDocumentFeature(this, this._syncedDocuments));\n        this.registerFeature(new DidChangeTextDocumentFeature(this));\n        this.registerFeature(new WillSaveFeature(this));\n        this.registerFeature(new WillSaveWaitUntilFeature(this));\n        this.registerFeature(new DidSaveTextDocumentFeature(this));\n        this.registerFeature(new DidCloseTextDocumentFeature(this, this._syncedDocuments));\n        this.registerFeature(new FileSystemWatcherFeature(this, function (event) { return _this.notifyFileEvent(event); }));\n        this.registerFeature(new CompletionItemFeature(this));\n        this.registerFeature(new HoverFeature(this));\n        this.registerFeature(new SignatureHelpFeature(this));\n        this.registerFeature(new DefinitionFeature(this));\n        this.registerFeature(new ReferencesFeature(this));\n        this.registerFeature(new DocumentHighlightFeature(this));\n        this.registerFeature(new DocumentSymbolFeature(this));\n        this.registerFeature(new WorkspaceSymbolFeature(this));\n        this.registerFeature(new CodeActionFeature(this));\n        this.registerFeature(new CodeLensFeature(this));\n        this.registerFeature(new DocumentFormattingFeature(this));\n        this.registerFeature(new DocumentRangeFormattingFeature(this));\n        this.registerFeature(new DocumentOnTypeFormattingFeature(this));\n        this.registerFeature(new RenameFeature(this));\n        this.registerFeature(new DocumentLinkFeature(this));\n        this.registerFeature(new ExecuteCommandFeature(this));\n    };\n    BaseLanguageClient.prototype.fillInitializeParams = function (params) {\n        var e_13, _a;\n        try {\n            for (var _b = __values(this._features), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var feature = _c.value;\n                if (Is.func(feature.fillInitializeParams)) {\n                    feature.fillInitializeParams(params);\n                }\n            }\n        }\n        catch (e_13_1) { e_13 = { error: e_13_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_13) throw e_13.error; }\n        }\n    };\n    BaseLanguageClient.prototype.computeClientCapabilities = function () {\n        var e_14, _a;\n        var result = {};\n        ensure(result, 'workspace').applyEdit = true;\n        ensure(ensure(result, 'workspace'), 'workspaceEdit').documentChanges = true;\n        ensure(ensure(result, 'textDocument'), 'publishDiagnostics').relatedInformation = true;\n        try {\n            for (var _b = __values(this._features), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var feature = _c.value;\n                feature.fillClientCapabilities(result);\n            }\n        }\n        catch (e_14_1) { e_14 = { error: e_14_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_14) throw e_14.error; }\n        }\n        return result;\n    };\n    BaseLanguageClient.prototype.initializeFeatures = function (_connection) {\n        var e_15, _a;\n        var documentSelector = this._clientOptions.documentSelector;\n        try {\n            for (var _b = __values(this._features), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var feature = _c.value;\n                feature.initialize(this._capabilities, documentSelector);\n            }\n        }\n        catch (e_15_1) { e_15 = { error: e_15_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_15) throw e_15.error; }\n        }\n    };\n    BaseLanguageClient.prototype.handleRegistrationRequest = function (params) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var e_16, _a;\n            try {\n                for (var _b = __values(params.registrations), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var registration = _c.value;\n                    var feature = _this._dynamicFeatures.get(registration.method);\n                    if (!feature) {\n                        reject(new Error(\"No feature implementation for \" + registration.method + \" found. Registration failed.\"));\n                        return;\n                    }\n                    var options = registration.registerOptions || {};\n                    options.documentSelector = options.documentSelector || _this._clientOptions.documentSelector;\n                    var data = {\n                        id: registration.id,\n                        registerOptions: options\n                    };\n                    feature.register(_this._method2Message.get(registration.method), data);\n                }\n            }\n            catch (e_16_1) { e_16 = { error: e_16_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_16) throw e_16.error; }\n            }\n            resolve();\n        });\n    };\n    BaseLanguageClient.prototype.handleUnregistrationRequest = function (params) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var e_17, _a;\n            try {\n                for (var _b = __values(params.unregisterations), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var unregistration = _c.value;\n                    var feature = _this._dynamicFeatures.get(unregistration.method);\n                    if (!feature) {\n                        reject(new Error(\"No feature implementation for \" + unregistration.method + \" found. Unregistration failed.\"));\n                        return;\n                    }\n                    feature.unregister(unregistration.id);\n                }\n            }\n            catch (e_17_1) { e_17 = { error: e_17_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_17) throw e_17.error; }\n            }\n            ;\n            resolve();\n        });\n    };\n    BaseLanguageClient.prototype.handleApplyWorkspaceEdit = function (params) {\n        var e_18, _a;\n        // This is some sort of workaround since the version check should be done by VS Code in the Workspace.applyEdit.\n        // However doing it here adds some safety since the server can lag more behind then an extension.\n        var workspaceEdit = params.edit;\n        var openTextDocuments = new Map();\n        vscode_1.workspace.textDocuments.forEach(function (document) { return openTextDocuments.set(document.uri.toString(), document); });\n        var versionMismatch = false;\n        if (workspaceEdit.documentChanges) {\n            try {\n                for (var _b = __values(workspaceEdit.documentChanges), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var change = _c.value;\n                    if (change.textDocument.version && change.textDocument.version >= 0) {\n                        var textDocument = openTextDocuments.get(change.textDocument.uri);\n                        if (textDocument && textDocument.version !== change.textDocument.version) {\n                            versionMismatch = true;\n                            break;\n                        }\n                    }\n                }\n            }\n            catch (e_18_1) { e_18 = { error: e_18_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_18) throw e_18.error; }\n            }\n        }\n        if (versionMismatch) {\n            return Promise.resolve({ applied: false });\n        }\n        return vscode_1.workspace.applyEdit(this._p2c.asWorkspaceEdit(params.edit)).then(function (value) { return { applied: value }; });\n    };\n    ;\n    BaseLanguageClient.prototype.logFailedRequest = function (type, error) {\n        // If we get a request cancel don't log anything.\n        if (error instanceof vscode_languageserver_protocol_1.ResponseError && error.code === vscode_languageserver_protocol_1.ErrorCodes.RequestCancelled) {\n            return;\n        }\n        this.error(\"Request \" + type.method + \" failed.\", error);\n    };\n    return BaseLanguageClient;\n}());\nexports.BaseLanguageClient = BaseLanguageClient;\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar code = require(\"vscode\");\nvar proto = require(\"vscode-languageserver-protocol\");\nvar Is = require(\"./utils/is\");\nvar protocolCompletionItem_1 = require(\"./protocolCompletionItem\");\nvar protocolCodeLens_1 = require(\"./protocolCodeLens\");\nvar protocolDocumentLink_1 = require(\"./protocolDocumentLink\");\nfunction createConverter(uriConverter) {\n    var nullConverter = function (value) { return value.toString(); };\n    var _uriConverter = uriConverter || nullConverter;\n    function asUri(value) {\n        return _uriConverter(value);\n    }\n    function asTextDocumentIdentifier(textDocument) {\n        return {\n            uri: _uriConverter(textDocument.uri)\n        };\n    }\n    function asVersionedTextDocumentIdentifier(textDocument) {\n        return {\n            uri: _uriConverter(textDocument.uri),\n            version: textDocument.version\n        };\n    }\n    function asOpenTextDocumentParams(textDocument) {\n        return {\n            textDocument: {\n                uri: _uriConverter(textDocument.uri),\n                languageId: textDocument.languageId,\n                version: textDocument.version,\n                text: textDocument.getText()\n            }\n        };\n    }\n    function isTextDocumentChangeEvent(value) {\n        var candidate = value;\n        return !!candidate.document && !!candidate.contentChanges;\n    }\n    function isTextDocument(value) {\n        var candidate = value;\n        return !!candidate.uri && !!candidate.version;\n    }\n    function asChangeTextDocumentParams(arg) {\n        if (isTextDocument(arg)) {\n            var result = {\n                textDocument: {\n                    uri: _uriConverter(arg.uri),\n                    version: arg.version\n                },\n                contentChanges: [{ text: arg.getText() }]\n            };\n            return result;\n        }\n        else if (isTextDocumentChangeEvent(arg)) {\n            var document = arg.document;\n            var result = {\n                textDocument: {\n                    uri: _uriConverter(document.uri),\n                    version: document.version\n                },\n                contentChanges: arg.contentChanges.map(function (change) {\n                    var range = change.range;\n                    return {\n                        range: {\n                            start: { line: range.start.line, character: range.start.character },\n                            end: { line: range.end.line, character: range.end.character }\n                        },\n                        rangeLength: change.rangeLength,\n                        text: change.text\n                    };\n                })\n            };\n            return result;\n        }\n        else {\n            throw Error('Unsupported text document change parameter');\n        }\n    }\n    function asCloseTextDocumentParams(textDocument) {\n        return {\n            textDocument: asTextDocumentIdentifier(textDocument)\n        };\n    }\n    function asSaveTextDocumentParams(textDocument, includeContent) {\n        if (includeContent === void 0) { includeContent = false; }\n        var result = {\n            textDocument: asVersionedTextDocumentIdentifier(textDocument)\n        };\n        if (includeContent) {\n            result.text = textDocument.getText();\n        }\n        return result;\n    }\n    function asTextDocumentSaveReason(reason) {\n        switch (reason) {\n            case code.TextDocumentSaveReason.Manual:\n                return proto.TextDocumentSaveReason.Manual;\n            case code.TextDocumentSaveReason.AfterDelay:\n                return proto.TextDocumentSaveReason.AfterDelay;\n            case code.TextDocumentSaveReason.FocusOut:\n                return proto.TextDocumentSaveReason.FocusOut;\n        }\n        return proto.TextDocumentSaveReason.Manual;\n    }\n    function asWillSaveTextDocumentParams(event) {\n        return {\n            textDocument: asTextDocumentIdentifier(event.document),\n            reason: asTextDocumentSaveReason(event.reason)\n        };\n    }\n    function asTextDocumentPositionParams(textDocument, position) {\n        return {\n            textDocument: asTextDocumentIdentifier(textDocument),\n            position: asWorkerPosition(position)\n        };\n    }\n    function asTriggerKind(triggerKind) {\n        switch (triggerKind) {\n            case code.CompletionTriggerKind.TriggerCharacter:\n                return proto.CompletionTriggerKind.TriggerCharacter;\n            case code.CompletionTriggerKind.TriggerForIncompleteCompletions:\n                return proto.CompletionTriggerKind.TriggerForIncompleteCompletions;\n            default:\n                return proto.CompletionTriggerKind.Invoked;\n        }\n    }\n    function asCompletionParams(textDocument, position, context) {\n        return {\n            textDocument: asTextDocumentIdentifier(textDocument),\n            position: asWorkerPosition(position),\n            context: {\n                triggerKind: asTriggerKind(context.triggerKind),\n                triggerCharacter: context.triggerCharacter\n            }\n        };\n    }\n    function asWorkerPosition(position) {\n        return { line: position.line, character: position.character };\n    }\n    function asPosition(value) {\n        if (value === void 0) {\n            return undefined;\n        }\n        else if (value === null) {\n            return null;\n        }\n        return { line: value.line, character: value.character };\n    }\n    function asRange(value) {\n        if (value === void 0 || value === null) {\n            return value;\n        }\n        return { start: asPosition(value.start), end: asPosition(value.end) };\n    }\n    function asDiagnosticSeverity(value) {\n        switch (value) {\n            case code.DiagnosticSeverity.Error:\n                return proto.DiagnosticSeverity.Error;\n            case code.DiagnosticSeverity.Warning:\n                return proto.DiagnosticSeverity.Warning;\n            case code.DiagnosticSeverity.Information:\n                return proto.DiagnosticSeverity.Information;\n            case code.DiagnosticSeverity.Hint:\n                return proto.DiagnosticSeverity.Hint;\n        }\n    }\n    function asDiagnostic(item) {\n        var result = proto.Diagnostic.create(asRange(item.range), item.message);\n        if (Is.number(item.severity)) {\n            result.severity = asDiagnosticSeverity(item.severity);\n        }\n        if (Is.number(item.code) || Is.string(item.code)) {\n            result.code = item.code;\n        }\n        if (item.source) {\n            result.source = item.source;\n        }\n        return result;\n    }\n    function asDiagnostics(items) {\n        if (items === void 0 || items === null) {\n            return items;\n        }\n        return items.map(asDiagnostic);\n    }\n    function asDocumentation(format, documentation) {\n        switch (format) {\n            case '$string':\n                return documentation;\n            case proto.MarkupKind.PlainText:\n                return { kind: format, value: documentation };\n            case proto.MarkupKind.Markdown:\n                return { kind: format, value: documentation.value };\n            default:\n                return \"Unsupported Markup content received. Kind is: \" + format;\n        }\n    }\n    function asCompletionItemKind(value, original) {\n        if (original !== void 0) {\n            return original;\n        }\n        return value + 1;\n    }\n    function asCompletionItem(item) {\n        var result = { label: item.label };\n        var protocolItem = item instanceof protocolCompletionItem_1.default ? item : undefined;\n        if (item.detail) {\n            result.detail = item.detail;\n        }\n        // We only send items back we created. So this can't be something else than\n        // a string right now.\n        if (item.documentation) {\n            if (!protocolItem || protocolItem.documentationFormat === '$string') {\n                result.documentation = item.documentation;\n            }\n            else {\n                result.documentation = asDocumentation(protocolItem.documentationFormat, item.documentation);\n            }\n        }\n        if (item.filterText) {\n            result.filterText = item.filterText;\n        }\n        fillPrimaryInsertText(result, item);\n        if (Is.number(item.kind)) {\n            result.kind = asCompletionItemKind(item.kind, protocolItem && protocolItem.originalItemKind);\n        }\n        if (item.sortText) {\n            result.sortText = item.sortText;\n        }\n        if (item.additionalTextEdits) {\n            result.additionalTextEdits = asTextEdits(item.additionalTextEdits);\n        }\n        if (item.commitCharacters) {\n            result.commitCharacters = item.commitCharacters.slice();\n        }\n        if (item.command) {\n            result.command = asCommand(item.command);\n        }\n        if (item.preselect === true || item.preselect === false) {\n            result.preselect = item.preselect;\n        }\n        if (protocolItem) {\n            if (protocolItem.data !== void 0) {\n                result.data = protocolItem.data;\n            }\n            if (protocolItem.deprecated === true || protocolItem.deprecated === false) {\n                result.deprecated = protocolItem.deprecated;\n            }\n        }\n        return result;\n    }\n    function fillPrimaryInsertText(target, source) {\n        var format = proto.InsertTextFormat.PlainText;\n        var text;\n        var range = undefined;\n        if (source.textEdit) {\n            text = source.textEdit.newText;\n            range = asRange(source.textEdit.range);\n        }\n        else if (source.insertText instanceof code.SnippetString) {\n            format = proto.InsertTextFormat.Snippet;\n            text = source.insertText.value;\n        }\n        else {\n            text = source.insertText;\n        }\n        if (source.range) {\n            range = asRange(source.range);\n        }\n        target.insertTextFormat = format;\n        if (source.fromEdit && text && range) {\n            target.textEdit = { newText: text, range: range };\n        }\n        else {\n            target.insertText = text;\n        }\n    }\n    function asTextEdit(edit) {\n        return { range: asRange(edit.range), newText: edit.newText };\n    }\n    function asTextEdits(edits) {\n        if (edits === void 0 || edits === null) {\n            return edits;\n        }\n        return edits.map(asTextEdit);\n    }\n    function asReferenceParams(textDocument, position, options) {\n        return {\n            textDocument: asTextDocumentIdentifier(textDocument),\n            position: asWorkerPosition(position),\n            context: { includeDeclaration: options.includeDeclaration }\n        };\n    }\n    function asCodeActionContext(context) {\n        if (context === void 0 || context === null) {\n            return context;\n        }\n        return proto.CodeActionContext.create(asDiagnostics(context.diagnostics), Is.string(context.only) ? [context.only] : undefined);\n    }\n    function asCommand(item) {\n        var result = proto.Command.create(item.title, item.command);\n        if (item.arguments) {\n            result.arguments = item.arguments;\n        }\n        return result;\n    }\n    function asCodeLens(item) {\n        var result = proto.CodeLens.create(asRange(item.range));\n        if (item.command) {\n            result.command = asCommand(item.command);\n        }\n        if (item instanceof protocolCodeLens_1.default) {\n            if (item.data) {\n                result.data = item.data;\n            }\n            ;\n        }\n        return result;\n    }\n    function asFormattingOptions(item) {\n        return { tabSize: item.tabSize, insertSpaces: item.insertSpaces };\n    }\n    function asDocumentSymbolParams(textDocument) {\n        return {\n            textDocument: asTextDocumentIdentifier(textDocument)\n        };\n    }\n    function asCodeLensParams(textDocument) {\n        return {\n            textDocument: asTextDocumentIdentifier(textDocument)\n        };\n    }\n    function asDocumentLink(item) {\n        var result = proto.DocumentLink.create(asRange(item.range));\n        if (item.target) {\n            result.target = asUri(item.target);\n        }\n        var protocolItem = item instanceof protocolDocumentLink_1.default ? item : undefined;\n        if (protocolItem && protocolItem.data) {\n            result.data = protocolItem.data;\n        }\n        return result;\n    }\n    function asDocumentLinkParams(textDocument) {\n        return {\n            textDocument: asTextDocumentIdentifier(textDocument)\n        };\n    }\n    return {\n        asUri: asUri,\n        asTextDocumentIdentifier: asTextDocumentIdentifier,\n        asOpenTextDocumentParams: asOpenTextDocumentParams,\n        asChangeTextDocumentParams: asChangeTextDocumentParams,\n        asCloseTextDocumentParams: asCloseTextDocumentParams,\n        asSaveTextDocumentParams: asSaveTextDocumentParams,\n        asWillSaveTextDocumentParams: asWillSaveTextDocumentParams,\n        asTextDocumentPositionParams: asTextDocumentPositionParams,\n        asCompletionParams: asCompletionParams,\n        asWorkerPosition: asWorkerPosition,\n        asRange: asRange,\n        asPosition: asPosition,\n        asDiagnosticSeverity: asDiagnosticSeverity,\n        asDiagnostic: asDiagnostic,\n        asDiagnostics: asDiagnostics,\n        asCompletionItem: asCompletionItem,\n        asTextEdit: asTextEdit,\n        asReferenceParams: asReferenceParams,\n        asCodeActionContext: asCodeActionContext,\n        asCommand: asCommand,\n        asCodeLens: asCodeLens,\n        asFormattingOptions: asFormattingOptions,\n        asDocumentSymbolParams: asDocumentSymbolParams,\n        asCodeLensParams: asCodeLensParams,\n        asDocumentLink: asDocumentLink,\n        asDocumentLinkParams: asDocumentLinkParams\n    };\n}\nexports.createConverter = createConverter;\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar UUID = require(\"./utils/uuid\");\nvar Is = require(\"./utils/is\");\nvar vscode_1 = require(\"vscode\");\nvar vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nvar client_1 = require(\"./client\");\nfunction ensure(target, key) {\n    if (target[key] === void 0) {\n        target[key] = {};\n    }\n    return target[key];\n}\nvar ColorProviderFeature = /** @class */ (function (_super) {\n    __extends(ColorProviderFeature, _super);\n    function ColorProviderFeature(client) {\n        return _super.call(this, client, vscode_languageserver_protocol_1.DocumentColorRequest.type) || this;\n    }\n    ColorProviderFeature.prototype.fillClientCapabilities = function (capabilites) {\n        ensure(ensure(capabilites, 'textDocument'), 'colorProvider').dynamicRegistration = true;\n    };\n    ColorProviderFeature.prototype.initialize = function (capabilities, documentSelector) {\n        if (!capabilities.colorProvider) {\n            return;\n        }\n        var implCapabilities = capabilities.colorProvider;\n        var id = Is.string(implCapabilities.id) && implCapabilities.id.length > 0 ? implCapabilities.id : UUID.generateUuid();\n        var selector = implCapabilities.documentSelector || documentSelector;\n        if (selector) {\n            this.register(this.messages, {\n                id: id,\n                registerOptions: Object.assign({}, { documentSelector: selector })\n            });\n        }\n    };\n    ColorProviderFeature.prototype.registerLanguageProvider = function (options) {\n        var _this = this;\n        var client = this._client;\n        var provideColorPresentations = function (color, context, token) {\n            var requestParams = {\n                color: color,\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(context.document),\n                range: client.code2ProtocolConverter.asRange(context.range)\n            };\n            return client.sendRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, requestParams, token).then(_this.asColorPresentations.bind(_this), function (error) {\n                client.logFailedRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, error);\n                return Promise.resolve(null);\n            });\n        };\n        var provideDocumentColors = function (document, token) {\n            var requestParams = {\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document)\n            };\n            return client.sendRequest(vscode_languageserver_protocol_1.DocumentColorRequest.type, requestParams, token).then(_this.asColorInformations.bind(_this), function (error) {\n                client.logFailedRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, error);\n                return Promise.resolve(null);\n            });\n        };\n        var middleware = client.clientOptions.middleware;\n        return vscode_1.languages.registerColorProvider(options.documentSelector, {\n            provideColorPresentations: function (color, context, token) {\n                return middleware.provideColorPresentations\n                    ? middleware.provideColorPresentations(color, context, token, provideColorPresentations)\n                    : provideColorPresentations(color, context, token);\n            },\n            provideDocumentColors: function (document, token) {\n                return middleware.provideDocumentColors\n                    ? middleware.provideDocumentColors(document, token, provideDocumentColors)\n                    : provideDocumentColors(document, token);\n            }\n        });\n    };\n    ColorProviderFeature.prototype.asColor = function (color) {\n        return new vscode_1.Color(color.red, color.green, color.blue, color.alpha);\n    };\n    ColorProviderFeature.prototype.asColorInformations = function (colorInformation) {\n        var _this = this;\n        if (Array.isArray(colorInformation)) {\n            return colorInformation.map(function (ci) {\n                return new vscode_1.ColorInformation(_this._client.protocol2CodeConverter.asRange(ci.range), _this.asColor(ci.color));\n            });\n        }\n        return [];\n    };\n    ColorProviderFeature.prototype.asColorPresentations = function (colorPresentations) {\n        var _this = this;\n        if (Array.isArray(colorPresentations)) {\n            return colorPresentations.map(function (cp) {\n                var presentation = new vscode_1.ColorPresentation(cp.label);\n                presentation.additionalTextEdits = _this._client.protocol2CodeConverter.asTextEdits(cp.additionalTextEdits);\n                presentation.textEdit = _this._client.protocol2CodeConverter.asTextEdit(cp.textEdit);\n                return presentation;\n            });\n        }\n        return [];\n    };\n    return ColorProviderFeature;\n}(client_1.TextDocumentFeature));\nexports.ColorProviderFeature = ColorProviderFeature;\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar UUID = require(\"./utils/uuid\");\nvar Is = require(\"./utils/is\");\nvar vscode_1 = require(\"vscode\");\nvar vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nvar client_1 = require(\"./client\");\nfunction ensure(target, key) {\n    if (target[key] === void 0) {\n        target[key] = {};\n    }\n    return target[key];\n}\nvar FoldingRangeFeature = /** @class */ (function (_super) {\n    __extends(FoldingRangeFeature, _super);\n    function FoldingRangeFeature(client) {\n        return _super.call(this, client, vscode_languageserver_protocol_1.FoldingRangeRequest.type) || this;\n    }\n    FoldingRangeFeature.prototype.fillClientCapabilities = function (capabilites) {\n        var capability = ensure(ensure(capabilites, 'textDocument'), 'foldingRange');\n        capability.dynamicRegistration = true;\n        capability.rangeLimit = 5000;\n        capability.lineFoldingOnly = true;\n    };\n    FoldingRangeFeature.prototype.initialize = function (capabilities, documentSelector) {\n        if (!capabilities.foldingRangeProvider) {\n            return;\n        }\n        var implCapabilities = capabilities.foldingRangeProvider;\n        var id = Is.string(implCapabilities.id) && implCapabilities.id.length > 0 ? implCapabilities.id : UUID.generateUuid();\n        var selector = implCapabilities.documentSelector || documentSelector;\n        if (selector) {\n            this.register(this.messages, {\n                id: id,\n                registerOptions: Object.assign({}, { documentSelector: selector })\n            });\n        }\n    };\n    FoldingRangeFeature.prototype.registerLanguageProvider = function (options) {\n        var _this = this;\n        var client = this._client;\n        var provideFoldingRanges = function (document, _, token) {\n            var requestParams = {\n                textDocument: client.code2ProtocolConverter.asTextDocumentIdentifier(document)\n            };\n            return client.sendRequest(vscode_languageserver_protocol_1.FoldingRangeRequest.type, requestParams, token).then(_this.asFoldingRanges.bind(_this), function (error) {\n                client.logFailedRequest(vscode_languageserver_protocol_1.FoldingRangeRequest.type, error);\n                return Promise.resolve(null);\n            });\n        };\n        var middleware = client.clientOptions.middleware;\n        return vscode_1.languages.registerFoldingRangeProvider(options.documentSelector, {\n            provideFoldingRanges: function (document, context, token) {\n                return middleware.provideFoldingRanges\n                    ? middleware.provideFoldingRanges(document, context, token, provideFoldingRanges)\n                    : provideFoldingRanges(document, context, token);\n            }\n        });\n    };\n    FoldingRangeFeature.prototype.asFoldingRangeKind = function (kind) {\n        if (kind) {\n            switch (kind) {\n                case vscode_languageserver_protocol_1.FoldingRangeKind.Comment:\n                    return vscode_1.FoldingRangeKind.Comment;\n                case vscode_languageserver_protocol_1.FoldingRangeKind.Imports:\n                    return vscode_1.FoldingRangeKind.Imports;\n                case vscode_languageserver_protocol_1.FoldingRangeKind.Region:\n                    return vscode_1.FoldingRangeKind.Region;\n            }\n        }\n        return void 0;\n    };\n    FoldingRangeFeature.prototype.asFoldingRanges = function (foldingRanges) {\n        var _this = this;\n        if (Array.isArray(foldingRanges)) {\n            return foldingRanges.map(function (r) {\n                return new vscode_1.FoldingRange(r.startLine, r.endLine, _this.asFoldingRangeKind(r.kind));\n            });\n        }\n        return [];\n    };\n    return FoldingRangeFeature;\n}(client_1.TextDocumentFeature));\nexports.FoldingRangeFeature = FoldingRangeFeature;\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar UUID = require(\"./utils/uuid\");\nvar Is = require(\"./utils/is\");\nvar vscode_1 = require(\"vscode\");\nvar vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nvar client_1 = require(\"./client\");\nfunction ensure(target, key) {\n    if (target[key] === void 0) {\n        target[key] = {};\n    }\n    return target[key];\n}\nvar ImplementationFeature = /** @class */ (function (_super) {\n    __extends(ImplementationFeature, _super);\n    function ImplementationFeature(client) {\n        return _super.call(this, client, vscode_languageserver_protocol_1.ImplementationRequest.type) || this;\n    }\n    ImplementationFeature.prototype.fillClientCapabilities = function (capabilites) {\n        ensure(ensure(capabilites, 'textDocument'), 'implementation').dynamicRegistration = true;\n    };\n    ImplementationFeature.prototype.initialize = function (capabilities, documentSelector) {\n        if (!capabilities.implementationProvider) {\n            return;\n        }\n        if (capabilities.implementationProvider === true) {\n            if (!documentSelector) {\n                return;\n            }\n            this.register(this.messages, {\n                id: UUID.generateUuid(),\n                registerOptions: Object.assign({}, { documentSelector: documentSelector })\n            });\n        }\n        else {\n            var implCapabilities = capabilities.implementationProvider;\n            var id = Is.string(implCapabilities.id) && implCapabilities.id.length > 0 ? implCapabilities.id : UUID.generateUuid();\n            var selector = implCapabilities.documentSelector || documentSelector;\n            if (selector) {\n                this.register(this.messages, {\n                    id: id,\n                    registerOptions: Object.assign({}, { documentSelector: selector })\n                });\n            }\n        }\n    };\n    ImplementationFeature.prototype.registerLanguageProvider = function (options) {\n        var client = this._client;\n        var provideImplementation = function (document, position, token) {\n            return client.sendRequest(vscode_languageserver_protocol_1.ImplementationRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDefinitionResult, function (error) {\n                client.logFailedRequest(vscode_languageserver_protocol_1.ImplementationRequest.type, error);\n                return Promise.resolve(null);\n            });\n        };\n        var middleware = client.clientOptions.middleware;\n        return vscode_1.languages.registerImplementationProvider(options.documentSelector, {\n            provideImplementation: function (document, position, token) {\n                return middleware.provideImplementation\n                    ? middleware.provideImplementation(document, position, token, provideImplementation)\n                    : provideImplementation(document, position, token);\n            }\n        });\n    };\n    return ImplementationFeature;\n}(client_1.TextDocumentFeature));\nexports.ImplementationFeature = ImplementationFeature;\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar code = require(\"vscode\");\nvar ProtocolCodeLens = /** @class */ (function (_super) {\n    __extends(ProtocolCodeLens, _super);\n    function ProtocolCodeLens(range) {\n        return _super.call(this, range) || this;\n    }\n    return ProtocolCodeLens;\n}(code.CodeLens));\nexports.default = ProtocolCodeLens;\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar code = require(\"vscode\");\nvar ProtocolCompletionItem = /** @class */ (function (_super) {\n    __extends(ProtocolCompletionItem, _super);\n    function ProtocolCompletionItem(label) {\n        return _super.call(this, label) || this;\n    }\n    return ProtocolCompletionItem;\n}(code.CompletionItem));\nexports.default = ProtocolCompletionItem;\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nvar __values = (this && this.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar code = require(\"vscode\");\nvar ls = require(\"vscode-languageserver-protocol\");\nvar Is = require(\"./utils/is\");\nvar protocolCompletionItem_1 = require(\"./protocolCompletionItem\");\nvar protocolCodeLens_1 = require(\"./protocolCodeLens\");\nvar protocolDocumentLink_1 = require(\"./protocolDocumentLink\");\nvar CodeBlock;\n(function (CodeBlock) {\n    function is(value) {\n        var candidate = value;\n        return candidate && Is.string(candidate.language) && Is.string(candidate.value);\n    }\n    CodeBlock.is = is;\n})(CodeBlock || (CodeBlock = {}));\nfunction createConverter(uriConverter) {\n    var nullConverter = function (value) { return code.Uri.parse(value); };\n    var _uriConverter = uriConverter || nullConverter;\n    function asUri(value) {\n        return _uriConverter(value);\n    }\n    function asDiagnostics(diagnostics) {\n        return diagnostics.map(asDiagnostic);\n    }\n    function asDiagnostic(diagnostic) {\n        var result = new code.Diagnostic(asRange(diagnostic.range), diagnostic.message, asDiagnosticSeverity(diagnostic.severity));\n        if (Is.number(diagnostic.code) || Is.string(diagnostic.code)) {\n            result.code = diagnostic.code;\n        }\n        if (diagnostic.source) {\n            result.source = diagnostic.source;\n        }\n        if (diagnostic.relatedInformation) {\n            result.relatedInformation = asRelatedInformation(diagnostic.relatedInformation);\n        }\n        return result;\n    }\n    function asRelatedInformation(relatedInformation) {\n        return relatedInformation.map(asDiagnosticRelatedInformation);\n    }\n    function asDiagnosticRelatedInformation(information) {\n        return new code.DiagnosticRelatedInformation(asLocation(information.location), information.message);\n    }\n    function asPosition(value) {\n        if (!value) {\n            return undefined;\n        }\n        return new code.Position(value.line, value.character);\n    }\n    function asRange(value) {\n        if (!value) {\n            return undefined;\n        }\n        return new code.Range(asPosition(value.start), asPosition(value.end));\n    }\n    function asDiagnosticSeverity(value) {\n        if (value === void 0 || value === null) {\n            return code.DiagnosticSeverity.Error;\n        }\n        switch (value) {\n            case ls.DiagnosticSeverity.Error:\n                return code.DiagnosticSeverity.Error;\n            case ls.DiagnosticSeverity.Warning:\n                return code.DiagnosticSeverity.Warning;\n            case ls.DiagnosticSeverity.Information:\n                return code.DiagnosticSeverity.Information;\n            case ls.DiagnosticSeverity.Hint:\n                return code.DiagnosticSeverity.Hint;\n        }\n        return code.DiagnosticSeverity.Error;\n    }\n    function asHoverContent(value) {\n        var e_1, _a;\n        if (Is.string(value)) {\n            return new code.MarkdownString(value);\n        }\n        else if (CodeBlock.is(value)) {\n            var result = new code.MarkdownString();\n            return result.appendCodeblock(value.value, value.language);\n        }\n        else if (Array.isArray(value)) {\n            var result = [];\n            try {\n                for (var value_1 = __values(value), value_1_1 = value_1.next(); !value_1_1.done; value_1_1 = value_1.next()) {\n                    var element = value_1_1.value;\n                    var item = new code.MarkdownString();\n                    if (CodeBlock.is(element)) {\n                        item.appendCodeblock(element.value, element.language);\n                    }\n                    else {\n                        item.appendMarkdown(element);\n                    }\n                    result.push(item);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (value_1_1 && !value_1_1.done && (_a = value_1.return)) _a.call(value_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return result;\n        }\n        else {\n            var result = void 0;\n            switch (value.kind) {\n                case ls.MarkupKind.Markdown:\n                    return new code.MarkdownString(value.value);\n                case ls.MarkupKind.PlainText:\n                    result = new code.MarkdownString();\n                    result.appendText(value.value);\n                    return result;\n                default:\n                    result = new code.MarkdownString();\n                    result.appendText(\"Unsupported Markup content received. Kind is: \" + value.kind);\n                    return result;\n            }\n        }\n    }\n    function asDocumentation(value) {\n        if (Is.string(value)) {\n            return value;\n        }\n        else {\n            switch (value.kind) {\n                case ls.MarkupKind.Markdown:\n                    return new code.MarkdownString(value.value);\n                case ls.MarkupKind.PlainText:\n                    return value.value;\n                default:\n                    return \"Unsupported Markup content received. Kind is: \" + value.kind;\n            }\n        }\n    }\n    function asHover(hover) {\n        if (!hover) {\n            return undefined;\n        }\n        return new code.Hover(asHoverContent(hover.contents), asRange(hover.range));\n    }\n    function asCompletionResult(result) {\n        if (!result) {\n            return undefined;\n        }\n        if (Array.isArray(result)) {\n            var items = result;\n            return items.map(asCompletionItem);\n        }\n        var list = result;\n        return new code.CompletionList(list.items.map(asCompletionItem), list.isIncomplete);\n    }\n    function asCompletionItemKind(value) {\n        // Protocol item kind is 1 based, codes item kind is zero based.\n        if (ls.CompletionItemKind.Text <= value && value <= ls.CompletionItemKind.TypeParameter) {\n            return [value - 1, undefined];\n        }\n        ;\n        return [code.CompletionItemKind.Text, value];\n    }\n    function asCompletionItem(item) {\n        var result = new protocolCompletionItem_1.default(item.label);\n        if (item.detail) {\n            result.detail = item.detail;\n        }\n        if (item.documentation) {\n            result.documentation = asDocumentation(item.documentation);\n            result.documentationFormat = Is.string(item.documentation) ? '$string' : item.documentation.kind;\n        }\n        ;\n        if (item.filterText) {\n            result.filterText = item.filterText;\n        }\n        var insertText = asCompletionInsertText(item);\n        if (insertText) {\n            result.insertText = insertText.text;\n            result.range = insertText.range;\n            result.fromEdit = insertText.fromEdit;\n        }\n        if (Is.number(item.kind)) {\n            var _a = __read(asCompletionItemKind(item.kind), 2), itemKind = _a[0], original = _a[1];\n            result.kind = itemKind;\n            if (original) {\n                result.originalItemKind = original;\n            }\n        }\n        if (item.sortText) {\n            result.sortText = item.sortText;\n        }\n        if (item.additionalTextEdits) {\n            result.additionalTextEdits = asTextEdits(item.additionalTextEdits);\n        }\n        if (Is.stringArray(item.commitCharacters)) {\n            result.commitCharacters = item.commitCharacters.slice();\n        }\n        if (item.command) {\n            result.command = asCommand(item.command);\n        }\n        if (item.deprecated === true || item.deprecated === false) {\n            result.deprecated = item.deprecated;\n        }\n        if (item.preselect === true || item.preselect === false) {\n            result.preselect = item.preselect;\n        }\n        if (item.data !== void 0) {\n            result.data = item.data;\n        }\n        return result;\n    }\n    function asCompletionInsertText(item) {\n        if (item.textEdit) {\n            if (item.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                return { text: new code.SnippetString(item.textEdit.newText), range: asRange(item.textEdit.range), fromEdit: true };\n            }\n            else {\n                return { text: item.textEdit.newText, range: asRange(item.textEdit.range), fromEdit: true };\n            }\n        }\n        else if (item.insertText) {\n            if (item.insertTextFormat === ls.InsertTextFormat.Snippet) {\n                return { text: new code.SnippetString(item.insertText), fromEdit: false };\n            }\n            else {\n                return { text: item.insertText, fromEdit: false };\n            }\n        }\n        else {\n            return undefined;\n        }\n    }\n    function asTextEdit(edit) {\n        if (!edit) {\n            return undefined;\n        }\n        return new code.TextEdit(asRange(edit.range), edit.newText);\n    }\n    function asTextEdits(items) {\n        if (!items) {\n            return undefined;\n        }\n        return items.map(asTextEdit);\n    }\n    function asSignatureHelp(item) {\n        if (!item) {\n            return undefined;\n        }\n        var result = new code.SignatureHelp();\n        if (Is.number(item.activeSignature)) {\n            result.activeSignature = item.activeSignature;\n        }\n        else {\n            // activeSignature was optional in the past\n            result.activeSignature = 0;\n        }\n        if (Is.number(item.activeParameter)) {\n            result.activeParameter = item.activeParameter;\n        }\n        else {\n            // activeParameter was optional in the past\n            result.activeParameter = 0;\n        }\n        if (item.signatures) {\n            result.signatures = asSignatureInformations(item.signatures);\n        }\n        return result;\n    }\n    function asSignatureInformations(items) {\n        return items.map(asSignatureInformation);\n    }\n    function asSignatureInformation(item) {\n        var result = new code.SignatureInformation(item.label);\n        if (item.documentation) {\n            result.documentation = asDocumentation(item.documentation);\n        }\n        if (item.parameters) {\n            result.parameters = asParameterInformations(item.parameters);\n        }\n        return result;\n    }\n    function asParameterInformations(item) {\n        return item.map(asParameterInformation);\n    }\n    function asParameterInformation(item) {\n        var result = new code.ParameterInformation(item.label);\n        if (item.documentation) {\n            result.documentation = asDocumentation(item.documentation);\n        }\n        ;\n        return result;\n    }\n    function asDefinitionResult(item) {\n        if (!item) {\n            return undefined;\n        }\n        if (Is.array(item)) {\n            return item.map(function (location) { return asLocation(location); });\n        }\n        else {\n            return asLocation(item);\n        }\n    }\n    function asLocation(item) {\n        if (!item) {\n            return undefined;\n        }\n        return new code.Location(_uriConverter(item.uri), asRange(item.range));\n    }\n    function asReferences(values) {\n        if (!values) {\n            return undefined;\n        }\n        return values.map(function (location) { return asLocation(location); });\n    }\n    function asDocumentHighlights(values) {\n        if (!values) {\n            return undefined;\n        }\n        return values.map(asDocumentHighlight);\n    }\n    function asDocumentHighlight(item) {\n        var result = new code.DocumentHighlight(asRange(item.range));\n        if (Is.number(item.kind)) {\n            result.kind = asDocumentHighlightKind(item.kind);\n        }\n        return result;\n    }\n    function asDocumentHighlightKind(item) {\n        switch (item) {\n            case ls.DocumentHighlightKind.Text:\n                return code.DocumentHighlightKind.Text;\n            case ls.DocumentHighlightKind.Read:\n                return code.DocumentHighlightKind.Read;\n            case ls.DocumentHighlightKind.Write:\n                return code.DocumentHighlightKind.Write;\n        }\n        return code.DocumentHighlightKind.Text;\n    }\n    function asSymbolInformations(values, uri) {\n        if (!values) {\n            return undefined;\n        }\n        return values.map(function (information) { return asSymbolInformation(information, uri); });\n    }\n    function asSymbolKind(item) {\n        if (item <= ls.SymbolKind.TypeParameter) {\n            // Symbol kind is one based in the protocol and zero based in code.\n            return item - 1;\n        }\n        return code.SymbolKind.Property;\n    }\n    function asSymbolInformation(item, uri) {\n        // Symbol kind is one based in the protocol and zero based in code.\n        var result = new code.SymbolInformation(item.name, asSymbolKind(item.kind), asRange(item.location.range), item.location.uri ? _uriConverter(item.location.uri) : uri);\n        if (item.containerName) {\n            result.containerName = item.containerName;\n        }\n        return result;\n    }\n    function asDocumentSymbols(values) {\n        if (values === void 0 || values === null) {\n            return undefined;\n        }\n        return values.map(asDocumentSymbol);\n    }\n    function asDocumentSymbol(value) {\n        var e_2, _a;\n        var result = new code.DocumentSymbol(value.name, value.detail !== void 0 ? value.detail : value.name, asSymbolKind(value.kind), asRange(value.range), asRange(value.selectionRange));\n        if (value.children !== void 0 && value.children.length > 0) {\n            var children = [];\n            try {\n                for (var _b = __values(value.children), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var child = _c.value;\n                    children.push(asDocumentSymbol(child));\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            result.children = children;\n        }\n        return result;\n    }\n    function asCommand(item) {\n        var result = { title: item.title, command: item.command };\n        if (item.arguments) {\n            result.arguments = item.arguments;\n        }\n        return result;\n    }\n    function asCommands(items) {\n        if (!items) {\n            return undefined;\n        }\n        return items.map(asCommand);\n    }\n    var kindMapping = new Map();\n    kindMapping.set('', code.CodeActionKind.Empty);\n    kindMapping.set(ls.CodeActionKind.QuickFix, code.CodeActionKind.QuickFix);\n    kindMapping.set(ls.CodeActionKind.Refactor, code.CodeActionKind.Refactor);\n    kindMapping.set(ls.CodeActionKind.RefactorExtract, code.CodeActionKind.RefactorExtract);\n    kindMapping.set(ls.CodeActionKind.RefactorInline, code.CodeActionKind.RefactorInline);\n    kindMapping.set(ls.CodeActionKind.RefactorRewrite, code.CodeActionKind.RefactorRewrite);\n    kindMapping.set(ls.CodeActionKind.Source, code.CodeActionKind.Source);\n    kindMapping.set(ls.CodeActionKind.SourceOrganizeImports, code.CodeActionKind.SourceOrganizeImports);\n    function asCodeActionKind(item) {\n        var e_3, _a;\n        if (item === void 0 || item === null) {\n            return undefined;\n        }\n        var result = kindMapping.get(item);\n        if (result) {\n            return result;\n        }\n        var parts = item.split('.');\n        result = code.CodeActionKind.Empty;\n        try {\n            for (var parts_1 = __values(parts), parts_1_1 = parts_1.next(); !parts_1_1.done; parts_1_1 = parts_1.next()) {\n                var part = parts_1_1.value;\n                result = result.append(part);\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (parts_1_1 && !parts_1_1.done && (_a = parts_1.return)) _a.call(parts_1);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        return result;\n    }\n    function asCodeAction(item) {\n        if (item === void 0 || item === null) {\n            return undefined;\n        }\n        var result = new code.CodeAction(item.title);\n        if (item.kind !== void 0) {\n            result.kind = asCodeActionKind(item.kind);\n        }\n        if (item.diagnostics) {\n            result.diagnostics = asDiagnostics(item.diagnostics);\n        }\n        if (item.edit) {\n            result.edit = asWorkspaceEdit(item.edit);\n        }\n        if (item.command) {\n            result.command = asCommand(item.command);\n        }\n        return result;\n    }\n    function asCodeLens(item) {\n        if (!item) {\n            return undefined;\n        }\n        var result = new protocolCodeLens_1.default(asRange(item.range));\n        if (item.command) {\n            result.command = asCommand(item.command);\n        }\n        if (item.data !== void 0 && item.data !== null) {\n            result.data = item.data;\n        }\n        return result;\n    }\n    function asCodeLenses(items) {\n        if (!items) {\n            return undefined;\n        }\n        return items.map(function (codeLens) { return asCodeLens(codeLens); });\n    }\n    function asWorkspaceEdit(item) {\n        if (!item) {\n            return undefined;\n        }\n        var result = new code.WorkspaceEdit();\n        if (item.documentChanges) {\n            item.documentChanges.forEach(function (change) {\n                result.set(_uriConverter(change.textDocument.uri), asTextEdits(change.edits));\n            });\n        }\n        else if (item.changes) {\n            Object.keys(item.changes).forEach(function (key) {\n                result.set(_uriConverter(key), asTextEdits(item.changes[key]));\n            });\n        }\n        return result;\n    }\n    function asDocumentLink(item) {\n        var range = asRange(item.range);\n        var target = item.target ? asUri(item.target) : undefined;\n        // target must be optional in DocumentLink\n        var link = new protocolDocumentLink_1.default(range, target);\n        if (item.data !== void 0 && item.data !== null) {\n            link.data = item.data;\n        }\n        return link;\n    }\n    function asDocumentLinks(items) {\n        if (!items) {\n            return undefined;\n        }\n        return items.map(asDocumentLink);\n    }\n    function asColor(color) {\n        return new code.Color(color.red, color.green, color.blue, color.alpha);\n    }\n    function asColorInformation(ci) {\n        return new code.ColorInformation(asRange(ci.range), asColor(ci.color));\n    }\n    function asColorInformations(colorInformation) {\n        if (Array.isArray(colorInformation)) {\n            return colorInformation.map(asColorInformation);\n        }\n        return undefined;\n    }\n    function asColorPresentation(cp) {\n        var presentation = new code.ColorPresentation(cp.label);\n        presentation.additionalTextEdits = asTextEdits(cp.additionalTextEdits);\n        if (cp.textEdit) {\n            presentation.textEdit = asTextEdit(cp.textEdit);\n        }\n        return presentation;\n    }\n    function asColorPresentations(colorPresentations) {\n        if (Array.isArray(colorPresentations)) {\n            return colorPresentations.map(asColorPresentation);\n        }\n        return undefined;\n    }\n    function asFoldingRangeKind(kind) {\n        if (kind) {\n            switch (kind) {\n                case ls.FoldingRangeKind.Comment:\n                    return code.FoldingRangeKind.Comment;\n                case ls.FoldingRangeKind.Imports:\n                    return code.FoldingRangeKind.Imports;\n                case ls.FoldingRangeKind.Region:\n                    return code.FoldingRangeKind.Region;\n            }\n        }\n        return void 0;\n    }\n    function asFoldingRange(r) {\n        return new code.FoldingRange(r.startLine, r.endLine, asFoldingRangeKind(r.kind));\n    }\n    function asFoldingRanges(foldingRanges) {\n        if (Array.isArray(foldingRanges)) {\n            return foldingRanges.map(asFoldingRange);\n        }\n        return void 0;\n    }\n    return {\n        asUri: asUri,\n        asDiagnostics: asDiagnostics,\n        asDiagnostic: asDiagnostic,\n        asRange: asRange,\n        asPosition: asPosition,\n        asDiagnosticSeverity: asDiagnosticSeverity,\n        asHover: asHover,\n        asCompletionResult: asCompletionResult,\n        asCompletionItem: asCompletionItem,\n        asTextEdit: asTextEdit,\n        asTextEdits: asTextEdits,\n        asSignatureHelp: asSignatureHelp,\n        asSignatureInformations: asSignatureInformations,\n        asSignatureInformation: asSignatureInformation,\n        asParameterInformations: asParameterInformations,\n        asParameterInformation: asParameterInformation,\n        asDefinitionResult: asDefinitionResult,\n        asLocation: asLocation,\n        asReferences: asReferences,\n        asDocumentHighlights: asDocumentHighlights,\n        asDocumentHighlight: asDocumentHighlight,\n        asDocumentHighlightKind: asDocumentHighlightKind,\n        asSymbolInformations: asSymbolInformations,\n        asSymbolInformation: asSymbolInformation,\n        asDocumentSymbols: asDocumentSymbols,\n        asDocumentSymbol: asDocumentSymbol,\n        asCommand: asCommand,\n        asCommands: asCommands,\n        asCodeAction: asCodeAction,\n        asCodeLens: asCodeLens,\n        asCodeLenses: asCodeLenses,\n        asWorkspaceEdit: asWorkspaceEdit,\n        asDocumentLink: asDocumentLink,\n        asDocumentLinks: asDocumentLinks,\n        asFoldingRangeKind: asFoldingRangeKind,\n        asFoldingRange: asFoldingRange,\n        asFoldingRanges: asFoldingRanges,\n        asColor: asColor,\n        asColorInformation: asColorInformation,\n        asColorInformations: asColorInformations,\n        asColorPresentation: asColorPresentation,\n        asColorPresentations: asColorPresentations\n    };\n}\nexports.createConverter = createConverter;\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar code = require(\"vscode\");\nvar ProtocolDocumentLink = /** @class */ (function (_super) {\n    __extends(ProtocolDocumentLink, _super);\n    function ProtocolDocumentLink(range, target) {\n        return _super.call(this, range, target) || this;\n    }\n    return ProtocolDocumentLink;\n}(code.DocumentLink));\nexports.default = ProtocolDocumentLink;\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar UUID = require(\"./utils/uuid\");\nvar Is = require(\"./utils/is\");\nvar vscode_1 = require(\"vscode\");\nvar vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nvar client_1 = require(\"./client\");\nfunction ensure(target, key) {\n    if (target[key] === void 0) {\n        target[key] = {};\n    }\n    return target[key];\n}\nvar TypeDefinitionFeature = /** @class */ (function (_super) {\n    __extends(TypeDefinitionFeature, _super);\n    function TypeDefinitionFeature(client) {\n        return _super.call(this, client, vscode_languageserver_protocol_1.TypeDefinitionRequest.type) || this;\n    }\n    TypeDefinitionFeature.prototype.fillClientCapabilities = function (capabilites) {\n        ensure(ensure(capabilites, 'textDocument'), 'typeDefinition').dynamicRegistration = true;\n    };\n    TypeDefinitionFeature.prototype.initialize = function (capabilities, documentSelector) {\n        if (!capabilities.typeDefinitionProvider) {\n            return;\n        }\n        if (capabilities.typeDefinitionProvider === true) {\n            if (!documentSelector) {\n                return;\n            }\n            this.register(this.messages, {\n                id: UUID.generateUuid(),\n                registerOptions: Object.assign({}, { documentSelector: documentSelector })\n            });\n        }\n        else {\n            var implCapabilities = capabilities.typeDefinitionProvider;\n            var id = Is.string(implCapabilities.id) && implCapabilities.id.length > 0 ? implCapabilities.id : UUID.generateUuid();\n            var selector = implCapabilities.documentSelector || documentSelector;\n            if (selector) {\n                this.register(this.messages, {\n                    id: id,\n                    registerOptions: Object.assign({}, { documentSelector: selector })\n                });\n            }\n        }\n    };\n    TypeDefinitionFeature.prototype.registerLanguageProvider = function (options) {\n        var client = this._client;\n        var provideTypeDefinition = function (document, position, token) {\n            return client.sendRequest(vscode_languageserver_protocol_1.TypeDefinitionRequest.type, client.code2ProtocolConverter.asTextDocumentPositionParams(document, position), token).then(client.protocol2CodeConverter.asDefinitionResult, function (error) {\n                client.logFailedRequest(vscode_languageserver_protocol_1.TypeDefinitionRequest.type, error);\n                return Promise.resolve(null);\n            });\n        };\n        var middleware = client.clientOptions.middleware;\n        return vscode_1.languages.registerTypeDefinitionProvider(options.documentSelector, {\n            provideTypeDefinition: function (document, position, token) {\n                return middleware.provideTypeDefinition\n                    ? middleware.provideTypeDefinition(document, position, token, provideTypeDefinition)\n                    : provideTypeDefinition(document, position, token);\n            }\n        });\n    };\n    return TypeDefinitionFeature;\n}(client_1.TextDocumentFeature));\nexports.TypeDefinitionFeature = TypeDefinitionFeature;\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Delayer = /** @class */ (function () {\n    function Delayer(defaultDelay) {\n        this.defaultDelay = defaultDelay;\n        this.timeout = undefined;\n        this.completionPromise = undefined;\n        this.onSuccess = undefined;\n        this.task = undefined;\n    }\n    Delayer.prototype.trigger = function (task, delay) {\n        var _this = this;\n        if (delay === void 0) { delay = this.defaultDelay; }\n        this.task = task;\n        if (delay >= 0) {\n            this.cancelTimeout();\n        }\n        if (!this.completionPromise) {\n            this.completionPromise = new Promise(function (resolve) {\n                _this.onSuccess = resolve;\n            }).then(function () {\n                _this.completionPromise = undefined;\n                _this.onSuccess = undefined;\n                var result = _this.task();\n                _this.task = undefined;\n                return result;\n            });\n        }\n        if (delay >= 0 || this.timeout === void 0) {\n            this.timeout = setTimeout(function () {\n                _this.timeout = undefined;\n                _this.onSuccess(undefined);\n            }, delay >= 0 ? delay : this.defaultDelay);\n        }\n        return this.completionPromise;\n    };\n    Delayer.prototype.forceDelivery = function () {\n        if (!this.completionPromise) {\n            return undefined;\n        }\n        this.cancelTimeout();\n        var result = this.task();\n        this.completionPromise = undefined;\n        this.onSuccess = undefined;\n        this.task = undefined;\n        return result;\n    };\n    Delayer.prototype.isTriggered = function () {\n        return this.timeout !== void 0;\n    };\n    Delayer.prototype.cancel = function () {\n        this.cancelTimeout();\n        this.completionPromise = undefined;\n    };\n    Delayer.prototype.cancelTimeout = function () {\n        if (this.timeout !== void 0) {\n            clearTimeout(this.timeout);\n            this.timeout = undefined;\n        }\n    };\n    return Delayer;\n}());\nexports.Delayer = Delayer;\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar toString = Object.prototype.toString;\nfunction boolean(value) {\n    return value === true || value === false;\n}\nexports.boolean = boolean;\nfunction string(value) {\n    return toString.call(value) === '[object String]';\n}\nexports.string = string;\nfunction number(value) {\n    return toString.call(value) === '[object Number]';\n}\nexports.number = number;\nfunction error(value) {\n    return toString.call(value) === '[object Error]';\n}\nexports.error = error;\nfunction func(value) {\n    return toString.call(value) === '[object Function]';\n}\nexports.func = func;\nfunction array(value) {\n    return Array.isArray(value);\n}\nexports.array = array;\nfunction stringArray(value) {\n    return array(value) && value.every(function (elem) { return string(elem); });\n}\nexports.stringArray = stringArray;\nfunction typedArray(value, check) {\n    return Array.isArray(value) && value.every(check);\n}\nexports.typedArray = typedArray;\nfunction thenable(value) {\n    return value && func(value.then);\n}\nexports.thenable = thenable;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ValueUUID = /** @class */ (function () {\n    function ValueUUID(_value) {\n        this._value = _value;\n        // empty\n    }\n    ValueUUID.prototype.asHex = function () {\n        return this._value;\n    };\n    ValueUUID.prototype.equals = function (other) {\n        return this.asHex() === other.asHex();\n    };\n    return ValueUUID;\n}());\nvar V4UUID = /** @class */ (function (_super) {\n    __extends(V4UUID, _super);\n    function V4UUID() {\n        return _super.call(this, [\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            '-',\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            '-',\n            '4',\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            '-',\n            V4UUID._oneOf(V4UUID._timeHighBits),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            '-',\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n            V4UUID._randomHex(),\n        ].join('')) || this;\n    }\n    V4UUID._oneOf = function (array) {\n        return array[Math.floor(array.length * Math.random())];\n    };\n    V4UUID._randomHex = function () {\n        return V4UUID._oneOf(V4UUID._chars);\n    };\n    V4UUID._chars = ['0', '1', '2', '3', '4', '5', '6', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n    V4UUID._timeHighBits = ['8', '9', 'a', 'b'];\n    return V4UUID;\n}(ValueUUID));\n/**\n * An empty UUID that contains only zeros.\n */\nexports.empty = new ValueUUID('00000000-0000-0000-0000-000000000000');\nfunction v4() {\n    return new V4UUID();\n}\nexports.v4 = v4;\nvar _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\nfunction isUUID(value) {\n    return _UUIDPattern.test(value);\n}\nexports.isUUID = isUUID;\n/**\n * Parses a UUID that is of the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.\n * @param value A uuid string.\n */\nfunction parse(value) {\n    if (!isUUID(value)) {\n        throw new Error('invalid uuid');\n    }\n    return new ValueUUID(value);\n}\nexports.parse = parse;\nfunction generateUuid() {\n    return v4().asHex();\n}\nexports.generateUuid = generateUuid;\n","/* --------------------------------------------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n * ------------------------------------------------------------------------------------------ */\n'use strict';\nvar __values = (this && this.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar UUID = require(\"./utils/uuid\");\nvar vscode_1 = require(\"vscode\");\nvar vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\nfunction access(target, key) {\n    if (target === void 0) {\n        return undefined;\n    }\n    return target[key];\n}\nvar WorkspaceFoldersFeature = /** @class */ (function () {\n    function WorkspaceFoldersFeature(_client) {\n        this._client = _client;\n        this._listeners = new Map();\n    }\n    Object.defineProperty(WorkspaceFoldersFeature.prototype, \"messages\", {\n        get: function () {\n            return vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WorkspaceFoldersFeature.prototype.fillInitializeParams = function (params) {\n        var _this = this;\n        var folders = vscode_1.workspace.workspaceFolders;\n        if (folders === void 0) {\n            params.workspaceFolders = null;\n        }\n        else {\n            params.workspaceFolders = folders.map(function (folder) { return _this.asProtocol(folder); });\n        }\n    };\n    WorkspaceFoldersFeature.prototype.fillClientCapabilities = function (capabilities) {\n        capabilities.workspace = capabilities.workspace || {};\n        capabilities.workspace.workspaceFolders = true;\n    };\n    WorkspaceFoldersFeature.prototype.initialize = function (capabilities) {\n        var _this = this;\n        var client = this._client;\n        client.onRequest(vscode_languageserver_protocol_1.WorkspaceFoldersRequest.type, function (token) {\n            var workspaceFolders = function () {\n                var folders = vscode_1.workspace.workspaceFolders;\n                if (folders === void 0) {\n                    return null;\n                }\n                var result = folders.map(function (folder) {\n                    return _this.asProtocol(folder);\n                });\n                return result;\n            };\n            var middleware = client.clientOptions.middleware.workspace;\n            return middleware && middleware.workspaceFolders\n                ? middleware.workspaceFolders(token, workspaceFolders)\n                : workspaceFolders(token);\n        });\n        var value = access(access(access(capabilities, 'workspace'), 'workspaceFolders'), 'changeNotifications');\n        var id;\n        if (typeof value === 'string') {\n            id = value;\n        }\n        else if (value === true) {\n            id = UUID.generateUuid();\n        }\n        if (id) {\n            this.register(this.messages, {\n                id: id,\n                registerOptions: undefined\n            });\n        }\n    };\n    WorkspaceFoldersFeature.prototype.register = function (_message, data) {\n        var _this = this;\n        var id = data.id;\n        var client = this._client;\n        var disposable = vscode_1.workspace.onDidChangeWorkspaceFolders(function (event) {\n            var didChangeWorkspaceFolders = function (event) {\n                var params = {\n                    event: {\n                        added: event.added.map(function (folder) { return _this.asProtocol(folder); }),\n                        removed: event.removed.map(function (folder) { return _this.asProtocol(folder); })\n                    }\n                };\n                _this._client.sendNotification(vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type, params);\n            };\n            var middleware = client.clientOptions.middleware.workspace;\n            middleware && middleware.didChangeWorkspaceFolders\n                ? middleware.didChangeWorkspaceFolders(event, didChangeWorkspaceFolders)\n                : didChangeWorkspaceFolders(event);\n        });\n        this._listeners.set(id, disposable);\n    };\n    WorkspaceFoldersFeature.prototype.unregister = function (id) {\n        var disposable = this._listeners.get(id);\n        if (disposable === void 0) {\n            return;\n        }\n        this._listeners.delete(id);\n        disposable.dispose();\n    };\n    WorkspaceFoldersFeature.prototype.dispose = function () {\n        var e_1, _a;\n        try {\n            for (var _b = __values(this._listeners.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var disposable = _c.value;\n                disposable.dispose();\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        this._listeners.clear();\n    };\n    WorkspaceFoldersFeature.prototype.asProtocol = function (workspaceFolder) {\n        if (workspaceFolder === void 0) {\n            return null;\n        }\n        return { uri: this._client.code2ProtocolConverter.asUri(workspaceFolder.uri), name: workspaceFolder.name };\n    };\n    return WorkspaceFoldersFeature;\n}());\nexports.WorkspaceFoldersFeature = WorkspaceFoldersFeature;\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nexports.ErrorCodes = vscode_jsonrpc_1.ErrorCodes;\r\nexports.ResponseError = vscode_jsonrpc_1.ResponseError;\r\nexports.CancellationToken = vscode_jsonrpc_1.CancellationToken;\r\nexports.CancellationTokenSource = vscode_jsonrpc_1.CancellationTokenSource;\r\nexports.Disposable = vscode_jsonrpc_1.Disposable;\r\nexports.Event = vscode_jsonrpc_1.Event;\r\nexports.Emitter = vscode_jsonrpc_1.Emitter;\r\nexports.Trace = vscode_jsonrpc_1.Trace;\r\nexports.TraceFormat = vscode_jsonrpc_1.TraceFormat;\r\nexports.SetTraceNotification = vscode_jsonrpc_1.SetTraceNotification;\r\nexports.LogTraceNotification = vscode_jsonrpc_1.LogTraceNotification;\r\nexports.RequestType = vscode_jsonrpc_1.RequestType;\r\nexports.RequestType0 = vscode_jsonrpc_1.RequestType0;\r\nexports.NotificationType = vscode_jsonrpc_1.NotificationType;\r\nexports.NotificationType0 = vscode_jsonrpc_1.NotificationType0;\r\nexports.MessageReader = vscode_jsonrpc_1.MessageReader;\r\nexports.MessageWriter = vscode_jsonrpc_1.MessageWriter;\r\nexports.ConnectionStrategy = vscode_jsonrpc_1.ConnectionStrategy;\r\nexports.StreamMessageReader = vscode_jsonrpc_1.StreamMessageReader;\r\nexports.StreamMessageWriter = vscode_jsonrpc_1.StreamMessageWriter;\r\nexports.IPCMessageReader = vscode_jsonrpc_1.IPCMessageReader;\r\nexports.IPCMessageWriter = vscode_jsonrpc_1.IPCMessageWriter;\r\nexports.createClientPipeTransport = vscode_jsonrpc_1.createClientPipeTransport;\r\nexports.createServerPipeTransport = vscode_jsonrpc_1.createServerPipeTransport;\r\nexports.generateRandomPipeName = vscode_jsonrpc_1.generateRandomPipeName;\r\nexports.createClientSocketTransport = vscode_jsonrpc_1.createClientSocketTransport;\r\nexports.createServerSocketTransport = vscode_jsonrpc_1.createServerSocketTransport;\r\n__export(require(\"vscode-languageserver-types\"));\r\n__export(require(\"./protocol\"));\r\nfunction createProtocolConnection(reader, writer, logger, strategy) {\r\n    return vscode_jsonrpc_1.createMessageConnection(reader, writer, logger, strategy);\r\n}\r\nexports.createProtocolConnection = createProtocolConnection;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * A request to list all color symbols found in a given text document. The request's\r\n * parameter is of type [DocumentColorParams](#DocumentColorParams) the\r\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar DocumentColorRequest;\r\n(function (DocumentColorRequest) {\r\n    DocumentColorRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/documentColor');\r\n})(DocumentColorRequest = exports.DocumentColorRequest || (exports.DocumentColorRequest = {}));\r\n/**\r\n * A request to list all presentation for a color. The request's\r\n * parameter is of type [ColorPresentationParams](#ColorPresentationParams) the\r\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar ColorPresentationRequest;\r\n(function (ColorPresentationRequest) {\r\n    ColorPresentationRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/colorPresentation');\r\n})(ColorPresentationRequest = exports.ColorPresentationRequest || (exports.ColorPresentationRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * The 'workspace/configuration' request is sent from the server to the client to fetch a certain\r\n * configuration setting.\r\n *\r\n * This pull model replaces the old push model were the client signaled configuration change via an\r\n * event. If the server still needs to react to configuration changes (since the server caches the\r\n * result of `workspace/configuration` requests) the server should register for an empty configuration\r\n * change event and empty the cache if such an event is received.\r\n */\r\nvar ConfigurationRequest;\r\n(function (ConfigurationRequest) {\r\n    ConfigurationRequest.type = new vscode_jsonrpc_1.RequestType('workspace/configuration');\r\n})(ConfigurationRequest = exports.ConfigurationRequest || (exports.ConfigurationRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\n/**\r\n * A request to resolve the type definition locations of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPositioParams]\r\n * (#TextDocumentPositionParams) the response is of type [Declaration](#Declaration)\r\n * or a typed array of [DeclarationLink](#DeclarationLink) or a Thenable that resolves\r\n * to such.\r\n */\r\nvar DeclarationRequest;\r\n(function (DeclarationRequest) {\r\n    DeclarationRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/declaration');\r\n})(DeclarationRequest = exports.DeclarationRequest || (exports.DeclarationRequest = {}));\r\n","\"use strict\";\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * Enum of known range kinds\r\n */\r\nvar FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind = exports.FoldingRangeKind || (exports.FoldingRangeKind = {}));\r\n/**\r\n * A request to provide folding ranges in a document. The request's\r\n * parameter is of type [FoldingRangeParams](#FoldingRangeParams), the\r\n * response is of type [FoldingRangeList](#FoldingRangeList) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar FoldingRangeRequest;\r\n(function (FoldingRangeRequest) {\r\n    FoldingRangeRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/foldingRange');\r\n})(FoldingRangeRequest = exports.FoldingRangeRequest || (exports.FoldingRangeRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\n/**\r\n * A request to resolve the implementation locations of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPositioParams]\r\n * (#TextDocumentPositionParams) the response is of type [Definition](#Definition) or a\r\n * Thenable that resolves to such.\r\n */\r\nvar ImplementationRequest;\r\n(function (ImplementationRequest) {\r\n    ImplementationRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/implementation');\r\n})(ImplementationRequest = exports.ImplementationRequest || (exports.ImplementationRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Is = require(\"./utils/is\");\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst protocol_implementation_1 = require(\"./protocol.implementation\");\r\nexports.ImplementationRequest = protocol_implementation_1.ImplementationRequest;\r\nconst protocol_typeDefinition_1 = require(\"./protocol.typeDefinition\");\r\nexports.TypeDefinitionRequest = protocol_typeDefinition_1.TypeDefinitionRequest;\r\nconst protocol_workspaceFolders_1 = require(\"./protocol.workspaceFolders\");\r\nexports.WorkspaceFoldersRequest = protocol_workspaceFolders_1.WorkspaceFoldersRequest;\r\nexports.DidChangeWorkspaceFoldersNotification = protocol_workspaceFolders_1.DidChangeWorkspaceFoldersNotification;\r\nconst protocol_configuration_1 = require(\"./protocol.configuration\");\r\nexports.ConfigurationRequest = protocol_configuration_1.ConfigurationRequest;\r\nconst protocol_colorProvider_1 = require(\"./protocol.colorProvider\");\r\nexports.DocumentColorRequest = protocol_colorProvider_1.DocumentColorRequest;\r\nexports.ColorPresentationRequest = protocol_colorProvider_1.ColorPresentationRequest;\r\nconst protocol_foldingRange_1 = require(\"./protocol.foldingRange\");\r\nexports.FoldingRangeRequest = protocol_foldingRange_1.FoldingRangeRequest;\r\nconst protocol_declaration_1 = require(\"./protocol.declaration\");\r\nexports.DeclarationRequest = protocol_declaration_1.DeclarationRequest;\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\nvar DocumentFilter;\r\n(function (DocumentFilter) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return Is.string(candidate.language) || Is.string(candidate.scheme) || Is.string(candidate.pattern);\r\n    }\r\n    DocumentFilter.is = is;\r\n})(DocumentFilter = exports.DocumentFilter || (exports.DocumentFilter = {}));\r\n/**\r\n * The `client/registerCapability` request is sent from the server to the client to register a new capability\r\n * handler on the client side.\r\n */\r\nvar RegistrationRequest;\r\n(function (RegistrationRequest) {\r\n    RegistrationRequest.type = new vscode_jsonrpc_1.RequestType('client/registerCapability');\r\n})(RegistrationRequest = exports.RegistrationRequest || (exports.RegistrationRequest = {}));\r\n/**\r\n * The `client/unregisterCapability` request is sent from the server to the client to unregister a previously registered capability\r\n * handler on the client side.\r\n */\r\nvar UnregistrationRequest;\r\n(function (UnregistrationRequest) {\r\n    UnregistrationRequest.type = new vscode_jsonrpc_1.RequestType('client/unregisterCapability');\r\n})(UnregistrationRequest = exports.UnregistrationRequest || (exports.UnregistrationRequest = {}));\r\nvar ResourceOperationKind;\r\n(function (ResourceOperationKind) {\r\n    /**\r\n     * Supports creating new files and folders.\r\n     */\r\n    ResourceOperationKind.Create = 'create';\r\n    /**\r\n     * Supports renaming existing files and folders.\r\n     */\r\n    ResourceOperationKind.Rename = 'rename';\r\n    /**\r\n     * Supports deleting existing files and folders.\r\n     */\r\n    ResourceOperationKind.Delete = 'delete';\r\n})(ResourceOperationKind = exports.ResourceOperationKind || (exports.ResourceOperationKind = {}));\r\nvar FailureHandlingKind;\r\n(function (FailureHandlingKind) {\r\n    /**\r\n     * Applying the workspace change is simply aborted if one of the changes provided\r\n     * fails. All operations executed before the failing operation stay executed.\r\n     */\r\n    FailureHandlingKind.Abort = 'abort';\r\n    /**\r\n     * All operations are executed transactional. That means they either all\r\n     * succeed or no changes at all are applied to the workspace.\r\n     */\r\n    FailureHandlingKind.Transactional = 'transactional';\r\n    /**\r\n     * If the workspace edit contains only textual file changes they are executed transactional.\r\n     * If resource changes (create, rename or delete file) are part of the change the failure\r\n     * handling startegy is abort.\r\n     */\r\n    FailureHandlingKind.TextOnlyTransactional = 'textOnlyTransactional';\r\n    /**\r\n     * The client tries to undo the operations already executed. But there is no\r\n     * guaruntee that this is succeeding.\r\n     */\r\n    FailureHandlingKind.Undo = 'undo';\r\n})(FailureHandlingKind = exports.FailureHandlingKind || (exports.FailureHandlingKind = {}));\r\n/**\r\n * Defines how the host (editor) should sync\r\n * document changes to the language server.\r\n */\r\nvar TextDocumentSyncKind;\r\n(function (TextDocumentSyncKind) {\r\n    /**\r\n     * Documents should not be synced at all.\r\n     */\r\n    TextDocumentSyncKind.None = 0;\r\n    /**\r\n     * Documents are synced by always sending the full content\r\n     * of the document.\r\n     */\r\n    TextDocumentSyncKind.Full = 1;\r\n    /**\r\n     * Documents are synced by sending the full content on open.\r\n     * After that only incremental updates to the document are\r\n     * send.\r\n     */\r\n    TextDocumentSyncKind.Incremental = 2;\r\n})(TextDocumentSyncKind = exports.TextDocumentSyncKind || (exports.TextDocumentSyncKind = {}));\r\n/**\r\n * The initialize request is sent from the client to the server.\r\n * It is sent once as the request after starting up the server.\r\n * The requests parameter is of type [InitializeParams](#InitializeParams)\r\n * the response if of type [InitializeResult](#InitializeResult) of a Thenable that\r\n * resolves to such.\r\n */\r\nvar InitializeRequest;\r\n(function (InitializeRequest) {\r\n    InitializeRequest.type = new vscode_jsonrpc_1.RequestType('initialize');\r\n})(InitializeRequest = exports.InitializeRequest || (exports.InitializeRequest = {}));\r\n/**\r\n * Known error codes for an `InitializeError`;\r\n */\r\nvar InitializeError;\r\n(function (InitializeError) {\r\n    /**\r\n     * If the protocol version provided by the client can't be handled by the server.\r\n     * @deprecated This initialize error got replaced by client capabilities. There is\r\n     * no version handshake in version 3.0x\r\n     */\r\n    InitializeError.unknownProtocolVersion = 1;\r\n})(InitializeError = exports.InitializeError || (exports.InitializeError = {}));\r\n/**\r\n * The intialized notification is sent from the client to the\r\n * server after the client is fully initialized and the server\r\n * is allowed to send requests from the server to the client.\r\n */\r\nvar InitializedNotification;\r\n(function (InitializedNotification) {\r\n    InitializedNotification.type = new vscode_jsonrpc_1.NotificationType('initialized');\r\n})(InitializedNotification = exports.InitializedNotification || (exports.InitializedNotification = {}));\r\n//---- Shutdown Method ----\r\n/**\r\n * A shutdown request is sent from the client to the server.\r\n * It is sent once when the client decides to shutdown the\r\n * server. The only notification that is sent after a shutdown request\r\n * is the exit event.\r\n */\r\nvar ShutdownRequest;\r\n(function (ShutdownRequest) {\r\n    ShutdownRequest.type = new vscode_jsonrpc_1.RequestType0('shutdown');\r\n})(ShutdownRequest = exports.ShutdownRequest || (exports.ShutdownRequest = {}));\r\n//---- Exit Notification ----\r\n/**\r\n * The exit event is sent from the client to the server to\r\n * ask the server to exit its process.\r\n */\r\nvar ExitNotification;\r\n(function (ExitNotification) {\r\n    ExitNotification.type = new vscode_jsonrpc_1.NotificationType0('exit');\r\n})(ExitNotification = exports.ExitNotification || (exports.ExitNotification = {}));\r\n//---- Configuration notification ----\r\n/**\r\n * The configuration change notification is sent from the client to the server\r\n * when the client's configuration has changed. The notification contains\r\n * the changed configuration as defined by the language client.\r\n */\r\nvar DidChangeConfigurationNotification;\r\n(function (DidChangeConfigurationNotification) {\r\n    DidChangeConfigurationNotification.type = new vscode_jsonrpc_1.NotificationType('workspace/didChangeConfiguration');\r\n})(DidChangeConfigurationNotification = exports.DidChangeConfigurationNotification || (exports.DidChangeConfigurationNotification = {}));\r\n//---- Message show and log notifications ----\r\n/**\r\n * The message type\r\n */\r\nvar MessageType;\r\n(function (MessageType) {\r\n    /**\r\n     * An error message.\r\n     */\r\n    MessageType.Error = 1;\r\n    /**\r\n     * A warning message.\r\n     */\r\n    MessageType.Warning = 2;\r\n    /**\r\n     * An information message.\r\n     */\r\n    MessageType.Info = 3;\r\n    /**\r\n     * A log message.\r\n     */\r\n    MessageType.Log = 4;\r\n})(MessageType = exports.MessageType || (exports.MessageType = {}));\r\n/**\r\n * The show message notification is sent from a server to a client to ask\r\n * the client to display a particular message in the user interface.\r\n */\r\nvar ShowMessageNotification;\r\n(function (ShowMessageNotification) {\r\n    ShowMessageNotification.type = new vscode_jsonrpc_1.NotificationType('window/showMessage');\r\n})(ShowMessageNotification = exports.ShowMessageNotification || (exports.ShowMessageNotification = {}));\r\n/**\r\n * The show message request is sent from the server to the client to show a message\r\n * and a set of options actions to the user.\r\n */\r\nvar ShowMessageRequest;\r\n(function (ShowMessageRequest) {\r\n    ShowMessageRequest.type = new vscode_jsonrpc_1.RequestType('window/showMessageRequest');\r\n})(ShowMessageRequest = exports.ShowMessageRequest || (exports.ShowMessageRequest = {}));\r\n/**\r\n * The log message notification is sent from the server to the client to ask\r\n * the client to log a particular message.\r\n */\r\nvar LogMessageNotification;\r\n(function (LogMessageNotification) {\r\n    LogMessageNotification.type = new vscode_jsonrpc_1.NotificationType('window/logMessage');\r\n})(LogMessageNotification = exports.LogMessageNotification || (exports.LogMessageNotification = {}));\r\n//---- Telemetry notification\r\n/**\r\n * The telemetry event notification is sent from the server to the client to ask\r\n * the client to log telemetry data.\r\n */\r\nvar TelemetryEventNotification;\r\n(function (TelemetryEventNotification) {\r\n    TelemetryEventNotification.type = new vscode_jsonrpc_1.NotificationType('telemetry/event');\r\n})(TelemetryEventNotification = exports.TelemetryEventNotification || (exports.TelemetryEventNotification = {}));\r\n/**\r\n * The document open notification is sent from the client to the server to signal\r\n * newly opened text documents. The document's truth is now managed by the client\r\n * and the server must not try to read the document's truth using the document's\r\n * uri. Open in this sense means it is managed by the client. It doesn't necessarily\r\n * mean that its content is presented in an editor. An open notification must not\r\n * be sent more than once without a corresponding close notification send before.\r\n * This means open and close notification must be balanced and the max open count\r\n * is one.\r\n */\r\nvar DidOpenTextDocumentNotification;\r\n(function (DidOpenTextDocumentNotification) {\r\n    DidOpenTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/didOpen');\r\n})(DidOpenTextDocumentNotification = exports.DidOpenTextDocumentNotification || (exports.DidOpenTextDocumentNotification = {}));\r\n/**\r\n * The document change notification is sent from the client to the server to signal\r\n * changes to a text document.\r\n */\r\nvar DidChangeTextDocumentNotification;\r\n(function (DidChangeTextDocumentNotification) {\r\n    DidChangeTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/didChange');\r\n})(DidChangeTextDocumentNotification = exports.DidChangeTextDocumentNotification || (exports.DidChangeTextDocumentNotification = {}));\r\n/**\r\n * The document close notification is sent from the client to the server when\r\n * the document got closed in the client. The document's truth now exists where\r\n * the document's uri points to (e.g. if the document's uri is a file uri the\r\n * truth now exists on disk). As with the open notification the close notification\r\n * is about managing the document's content. Receiving a close notification\r\n * doesn't mean that the document was open in an editor before. A close\r\n * notification requires a previous open notification to be sent.\r\n */\r\nvar DidCloseTextDocumentNotification;\r\n(function (DidCloseTextDocumentNotification) {\r\n    DidCloseTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/didClose');\r\n})(DidCloseTextDocumentNotification = exports.DidCloseTextDocumentNotification || (exports.DidCloseTextDocumentNotification = {}));\r\n/**\r\n * The document save notification is sent from the client to the server when\r\n * the document got saved in the client.\r\n */\r\nvar DidSaveTextDocumentNotification;\r\n(function (DidSaveTextDocumentNotification) {\r\n    DidSaveTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/didSave');\r\n})(DidSaveTextDocumentNotification = exports.DidSaveTextDocumentNotification || (exports.DidSaveTextDocumentNotification = {}));\r\n/**\r\n * A document will save notification is sent from the client to the server before\r\n * the document is actually saved.\r\n */\r\nvar WillSaveTextDocumentNotification;\r\n(function (WillSaveTextDocumentNotification) {\r\n    WillSaveTextDocumentNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/willSave');\r\n})(WillSaveTextDocumentNotification = exports.WillSaveTextDocumentNotification || (exports.WillSaveTextDocumentNotification = {}));\r\n/**\r\n * A document will save request is sent from the client to the server before\r\n * the document is actually saved. The request can return an array of TextEdits\r\n * which will be applied to the text document before it is saved. Please note that\r\n * clients might drop results if computing the text edits took too long or if a\r\n * server constantly fails on this request. This is done to keep the save fast and\r\n * reliable.\r\n */\r\nvar WillSaveTextDocumentWaitUntilRequest;\r\n(function (WillSaveTextDocumentWaitUntilRequest) {\r\n    WillSaveTextDocumentWaitUntilRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/willSaveWaitUntil');\r\n})(WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentWaitUntilRequest || (exports.WillSaveTextDocumentWaitUntilRequest = {}));\r\n//---- File eventing ----\r\n/**\r\n * The watched files notification is sent from the client to the server when\r\n * the client detects changes to file watched by the language client.\r\n */\r\nvar DidChangeWatchedFilesNotification;\r\n(function (DidChangeWatchedFilesNotification) {\r\n    DidChangeWatchedFilesNotification.type = new vscode_jsonrpc_1.NotificationType('workspace/didChangeWatchedFiles');\r\n})(DidChangeWatchedFilesNotification = exports.DidChangeWatchedFilesNotification || (exports.DidChangeWatchedFilesNotification = {}));\r\n/**\r\n * The file event type\r\n */\r\nvar FileChangeType;\r\n(function (FileChangeType) {\r\n    /**\r\n     * The file got created.\r\n     */\r\n    FileChangeType.Created = 1;\r\n    /**\r\n     * The file got changed.\r\n     */\r\n    FileChangeType.Changed = 2;\r\n    /**\r\n     * The file got deleted.\r\n     */\r\n    FileChangeType.Deleted = 3;\r\n})(FileChangeType = exports.FileChangeType || (exports.FileChangeType = {}));\r\nvar WatchKind;\r\n(function (WatchKind) {\r\n    /**\r\n     * Interested in create events.\r\n     */\r\n    WatchKind.Create = 1;\r\n    /**\r\n     * Interested in change events\r\n     */\r\n    WatchKind.Change = 2;\r\n    /**\r\n     * Interested in delete events\r\n     */\r\n    WatchKind.Delete = 4;\r\n})(WatchKind = exports.WatchKind || (exports.WatchKind = {}));\r\n//---- Diagnostic notification ----\r\n/**\r\n * Diagnostics notification are sent from the server to the client to signal\r\n * results of validation runs.\r\n */\r\nvar PublishDiagnosticsNotification;\r\n(function (PublishDiagnosticsNotification) {\r\n    PublishDiagnosticsNotification.type = new vscode_jsonrpc_1.NotificationType('textDocument/publishDiagnostics');\r\n})(PublishDiagnosticsNotification = exports.PublishDiagnosticsNotification || (exports.PublishDiagnosticsNotification = {}));\r\n/**\r\n * How a completion was triggered\r\n */\r\nvar CompletionTriggerKind;\r\n(function (CompletionTriggerKind) {\r\n    /**\r\n     * Completion was triggered by typing an identifier (24x7 code\r\n     * complete), manual invocation (e.g Ctrl+Space) or via API.\r\n     */\r\n    CompletionTriggerKind.Invoked = 1;\r\n    /**\r\n     * Completion was triggered by a trigger character specified by\r\n     * the `triggerCharacters` properties of the `CompletionRegistrationOptions`.\r\n     */\r\n    CompletionTriggerKind.TriggerCharacter = 2;\r\n    /**\r\n     * Completion was re-triggered as current completion list is incomplete\r\n     */\r\n    CompletionTriggerKind.TriggerForIncompleteCompletions = 3;\r\n})(CompletionTriggerKind = exports.CompletionTriggerKind || (exports.CompletionTriggerKind = {}));\r\n/**\r\n * Request to request completion at a given text document position. The request's\r\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response\r\n * is of type [CompletionItem[]](#CompletionItem) or [CompletionList](#CompletionList)\r\n * or a Thenable that resolves to such.\r\n *\r\n * The request can delay the computation of the [`detail`](#CompletionItem.detail)\r\n * and [`documentation`](#CompletionItem.documentation) properties to the `completionItem/resolve`\r\n * request. However, properties that are needed for the initial sorting and filtering, like `sortText`,\r\n * `filterText`, `insertText`, and `textEdit`, must not be changed during resolve.\r\n */\r\nvar CompletionRequest;\r\n(function (CompletionRequest) {\r\n    CompletionRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/completion');\r\n})(CompletionRequest = exports.CompletionRequest || (exports.CompletionRequest = {}));\r\n/**\r\n * Request to resolve additional information for a given completion item.The request's\r\n * parameter is of type [CompletionItem](#CompletionItem) the response\r\n * is of type [CompletionItem](#CompletionItem) or a Thenable that resolves to such.\r\n */\r\nvar CompletionResolveRequest;\r\n(function (CompletionResolveRequest) {\r\n    CompletionResolveRequest.type = new vscode_jsonrpc_1.RequestType('completionItem/resolve');\r\n})(CompletionResolveRequest = exports.CompletionResolveRequest || (exports.CompletionResolveRequest = {}));\r\n//---- Hover Support -------------------------------\r\n/**\r\n * Request to request hover information at a given text document position. The request's\r\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response is of\r\n * type [Hover](#Hover) or a Thenable that resolves to such.\r\n */\r\nvar HoverRequest;\r\n(function (HoverRequest) {\r\n    HoverRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/hover');\r\n})(HoverRequest = exports.HoverRequest || (exports.HoverRequest = {}));\r\nvar SignatureHelpRequest;\r\n(function (SignatureHelpRequest) {\r\n    SignatureHelpRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/signatureHelp');\r\n})(SignatureHelpRequest = exports.SignatureHelpRequest || (exports.SignatureHelpRequest = {}));\r\n//---- Goto Definition -------------------------------------\r\n/**\r\n * A request to resolve the definition location of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPosition]\r\n * (#TextDocumentPosition) the response is of either type [Definition](#Definition)\r\n * or a typed array of [DefinitionLink](#DefinitionLink) or a Thenable that resolves\r\n * to such.\r\n */\r\nvar DefinitionRequest;\r\n(function (DefinitionRequest) {\r\n    DefinitionRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/definition');\r\n})(DefinitionRequest = exports.DefinitionRequest || (exports.DefinitionRequest = {}));\r\n/**\r\n * A request to resolve project-wide references for the symbol denoted\r\n * by the given text document position. The request's parameter is of\r\n * type [ReferenceParams](#ReferenceParams) the response is of type\r\n * [Location[]](#Location) or a Thenable that resolves to such.\r\n */\r\nvar ReferencesRequest;\r\n(function (ReferencesRequest) {\r\n    ReferencesRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/references');\r\n})(ReferencesRequest = exports.ReferencesRequest || (exports.ReferencesRequest = {}));\r\n//---- Document Highlight ----------------------------------\r\n/**\r\n * Request to resolve a [DocumentHighlight](#DocumentHighlight) for a given\r\n * text document position. The request's parameter is of type [TextDocumentPosition]\r\n * (#TextDocumentPosition) the request response is of type [DocumentHighlight[]]\r\n * (#DocumentHighlight) or a Thenable that resolves to such.\r\n */\r\nvar DocumentHighlightRequest;\r\n(function (DocumentHighlightRequest) {\r\n    DocumentHighlightRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/documentHighlight');\r\n})(DocumentHighlightRequest = exports.DocumentHighlightRequest || (exports.DocumentHighlightRequest = {}));\r\n//---- Document Symbol Provider ---------------------------\r\n/**\r\n * A request to list all symbols found in a given text document. The request's\r\n * parameter is of type [TextDocumentIdentifier](#TextDocumentIdentifier) the\r\n * response is of type [SymbolInformation[]](#SymbolInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar DocumentSymbolRequest;\r\n(function (DocumentSymbolRequest) {\r\n    DocumentSymbolRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/documentSymbol');\r\n})(DocumentSymbolRequest = exports.DocumentSymbolRequest || (exports.DocumentSymbolRequest = {}));\r\n//---- Workspace Symbol Provider ---------------------------\r\n/**\r\n * A request to list project-wide symbols matching the query string given\r\n * by the [WorkspaceSymbolParams](#WorkspaceSymbolParams). The response is\r\n * of type [SymbolInformation[]](#SymbolInformation) or a Thenable that\r\n * resolves to such.\r\n */\r\nvar WorkspaceSymbolRequest;\r\n(function (WorkspaceSymbolRequest) {\r\n    WorkspaceSymbolRequest.type = new vscode_jsonrpc_1.RequestType('workspace/symbol');\r\n})(WorkspaceSymbolRequest = exports.WorkspaceSymbolRequest || (exports.WorkspaceSymbolRequest = {}));\r\n/**\r\n * A request to provide commands for the given text document and range.\r\n */\r\nvar CodeActionRequest;\r\n(function (CodeActionRequest) {\r\n    CodeActionRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/codeAction');\r\n})(CodeActionRequest = exports.CodeActionRequest || (exports.CodeActionRequest = {}));\r\n/**\r\n * A request to provide code lens for the given text document.\r\n */\r\nvar CodeLensRequest;\r\n(function (CodeLensRequest) {\r\n    CodeLensRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/codeLens');\r\n})(CodeLensRequest = exports.CodeLensRequest || (exports.CodeLensRequest = {}));\r\n/**\r\n * A request to resolve a command for a given code lens.\r\n */\r\nvar CodeLensResolveRequest;\r\n(function (CodeLensResolveRequest) {\r\n    CodeLensResolveRequest.type = new vscode_jsonrpc_1.RequestType('codeLens/resolve');\r\n})(CodeLensResolveRequest = exports.CodeLensResolveRequest || (exports.CodeLensResolveRequest = {}));\r\n/**\r\n * A request to to format a whole document.\r\n */\r\nvar DocumentFormattingRequest;\r\n(function (DocumentFormattingRequest) {\r\n    DocumentFormattingRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/formatting');\r\n})(DocumentFormattingRequest = exports.DocumentFormattingRequest || (exports.DocumentFormattingRequest = {}));\r\n/**\r\n * A request to to format a range in a document.\r\n */\r\nvar DocumentRangeFormattingRequest;\r\n(function (DocumentRangeFormattingRequest) {\r\n    DocumentRangeFormattingRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/rangeFormatting');\r\n})(DocumentRangeFormattingRequest = exports.DocumentRangeFormattingRequest || (exports.DocumentRangeFormattingRequest = {}));\r\n/**\r\n * A request to format a document on type.\r\n */\r\nvar DocumentOnTypeFormattingRequest;\r\n(function (DocumentOnTypeFormattingRequest) {\r\n    DocumentOnTypeFormattingRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/onTypeFormatting');\r\n})(DocumentOnTypeFormattingRequest = exports.DocumentOnTypeFormattingRequest || (exports.DocumentOnTypeFormattingRequest = {}));\r\n/**\r\n * A request to rename a symbol.\r\n */\r\nvar RenameRequest;\r\n(function (RenameRequest) {\r\n    RenameRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/rename');\r\n})(RenameRequest = exports.RenameRequest || (exports.RenameRequest = {}));\r\n/**\r\n * A request to test and perform the setup necessary for a rename.\r\n */\r\nvar PrepareRenameRequest;\r\n(function (PrepareRenameRequest) {\r\n    PrepareRenameRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/prepareRename');\r\n})(PrepareRenameRequest = exports.PrepareRenameRequest || (exports.PrepareRenameRequest = {}));\r\n/**\r\n * A request to provide document links\r\n */\r\nvar DocumentLinkRequest;\r\n(function (DocumentLinkRequest) {\r\n    DocumentLinkRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/documentLink');\r\n})(DocumentLinkRequest = exports.DocumentLinkRequest || (exports.DocumentLinkRequest = {}));\r\n/**\r\n * Request to resolve additional information for a given document link. The request's\r\n * parameter is of type [DocumentLink](#DocumentLink) the response\r\n * is of type [DocumentLink](#DocumentLink) or a Thenable that resolves to such.\r\n */\r\nvar DocumentLinkResolveRequest;\r\n(function (DocumentLinkResolveRequest) {\r\n    DocumentLinkResolveRequest.type = new vscode_jsonrpc_1.RequestType('documentLink/resolve');\r\n})(DocumentLinkResolveRequest = exports.DocumentLinkResolveRequest || (exports.DocumentLinkResolveRequest = {}));\r\n/**\r\n * A request send from the client to the server to execute a command. The request might return\r\n * a workspace edit which the client will apply to the workspace.\r\n */\r\nvar ExecuteCommandRequest;\r\n(function (ExecuteCommandRequest) {\r\n    ExecuteCommandRequest.type = new vscode_jsonrpc_1.RequestType('workspace/executeCommand');\r\n})(ExecuteCommandRequest = exports.ExecuteCommandRequest || (exports.ExecuteCommandRequest = {}));\r\n/**\r\n * A request sent from the server to the client to modified certain resources.\r\n */\r\nvar ApplyWorkspaceEditRequest;\r\n(function (ApplyWorkspaceEditRequest) {\r\n    ApplyWorkspaceEditRequest.type = new vscode_jsonrpc_1.RequestType('workspace/applyEdit');\r\n})(ApplyWorkspaceEditRequest = exports.ApplyWorkspaceEditRequest || (exports.ApplyWorkspaceEditRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\n/**\r\n * A request to resolve the type definition locations of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPositioParams]\r\n * (#TextDocumentPositionParams) the response is of type [Definition](#Definition) or a\r\n * Thenable that resolves to such.\r\n */\r\nvar TypeDefinitionRequest;\r\n(function (TypeDefinitionRequest) {\r\n    TypeDefinitionRequest.type = new vscode_jsonrpc_1.RequestType('textDocument/typeDefinition');\r\n})(TypeDefinitionRequest = exports.TypeDefinitionRequest || (exports.TypeDefinitionRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\n/**\r\n * The `workspace/workspaceFolders` is sent from the server to the client to fetch the open workspace folders.\r\n */\r\nvar WorkspaceFoldersRequest;\r\n(function (WorkspaceFoldersRequest) {\r\n    WorkspaceFoldersRequest.type = new vscode_jsonrpc_1.RequestType0('workspace/workspaceFolders');\r\n})(WorkspaceFoldersRequest = exports.WorkspaceFoldersRequest || (exports.WorkspaceFoldersRequest = {}));\r\n/**\r\n * The `workspace/didChangeWorkspaceFolders` notification is sent from the client to the server when the workspace\r\n * folder configuration changes.\r\n */\r\nvar DidChangeWorkspaceFoldersNotification;\r\n(function (DidChangeWorkspaceFoldersNotification) {\r\n    DidChangeWorkspaceFoldersNotification.type = new vscode_jsonrpc_1.NotificationType('workspace/didChangeWorkspaceFolders');\r\n})(DidChangeWorkspaceFoldersNotification = exports.DidChangeWorkspaceFoldersNotification || (exports.DidChangeWorkspaceFoldersNotification = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return typeof value === 'number' || value instanceof Number;\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return value instanceof Error;\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return typeof value === 'function';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(elem => string(elem));\r\n}\r\nexports.stringArray = stringArray;\r\nfunction typedArray(value, check) {\r\n    return Array.isArray(value) && value.every(check);\r\n}\r\nexports.typedArray = typedArray;\r\nfunction thenable(value) {\r\n    return value && func(value.then);\r\n}\r\nexports.thenable = thenable;\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nvar CancellationToken;\r\n(function (CancellationToken) {\r\n    CancellationToken.None = Object.freeze({\r\n        isCancellationRequested: false,\r\n        onCancellationRequested: events_1.Event.None\r\n    });\r\n    CancellationToken.Cancelled = Object.freeze({\r\n        isCancellationRequested: true,\r\n        onCancellationRequested: events_1.Event.None\r\n    });\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && (candidate === CancellationToken.None\r\n            || candidate === CancellationToken.Cancelled\r\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\r\n    }\r\n    CancellationToken.is = is;\r\n})(CancellationToken = exports.CancellationToken || (exports.CancellationToken = {}));\r\nconst shortcutEvent = Object.freeze(function (callback, context) {\r\n    let handle = setTimeout(callback.bind(context), 0);\r\n    return { dispose() { clearTimeout(handle); } };\r\n});\r\nclass MutableToken {\r\n    constructor() {\r\n        this._isCancelled = false;\r\n    }\r\n    cancel() {\r\n        if (!this._isCancelled) {\r\n            this._isCancelled = true;\r\n            if (this._emitter) {\r\n                this._emitter.fire(undefined);\r\n                this._emitter = undefined;\r\n            }\r\n        }\r\n    }\r\n    get isCancellationRequested() {\r\n        return this._isCancelled;\r\n    }\r\n    get onCancellationRequested() {\r\n        if (this._isCancelled) {\r\n            return shortcutEvent;\r\n        }\r\n        if (!this._emitter) {\r\n            this._emitter = new events_1.Emitter();\r\n        }\r\n        return this._emitter.event;\r\n    }\r\n}\r\nclass CancellationTokenSource {\r\n    get token() {\r\n        if (!this._token) {\r\n            // be lazy and create the token only when\r\n            // actually needed\r\n            this._token = new MutableToken();\r\n        }\r\n        return this._token;\r\n    }\r\n    cancel() {\r\n        if (!this._token) {\r\n            // save an object by returning the default\r\n            // cancelled token when cancellation happens\r\n            // before someone asks for the token\r\n            this._token = CancellationToken.Cancelled;\r\n        }\r\n        else {\r\n            this._token.cancel();\r\n        }\r\n    }\r\n    dispose() {\r\n        this.cancel();\r\n    }\r\n}\r\nexports.CancellationTokenSource = CancellationTokenSource;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Disposable;\r\n(function (Disposable) {\r\n    function create(func) {\r\n        return {\r\n            dispose: func\r\n        };\r\n    }\r\n    Disposable.create = create;\r\n})(Disposable = exports.Disposable || (exports.Disposable = {}));\r\nvar Event;\r\n(function (Event) {\r\n    const _disposable = { dispose() { } };\r\n    Event.None = function () { return _disposable; };\r\n})(Event = exports.Event || (exports.Event = {}));\r\nclass CallbackList {\r\n    add(callback, context = null, bucket) {\r\n        if (!this._callbacks) {\r\n            this._callbacks = [];\r\n            this._contexts = [];\r\n        }\r\n        this._callbacks.push(callback);\r\n        this._contexts.push(context);\r\n        if (Array.isArray(bucket)) {\r\n            bucket.push({ dispose: () => this.remove(callback, context) });\r\n        }\r\n    }\r\n    remove(callback, context = null) {\r\n        if (!this._callbacks) {\r\n            return;\r\n        }\r\n        var foundCallbackWithDifferentContext = false;\r\n        for (var i = 0, len = this._callbacks.length; i < len; i++) {\r\n            if (this._callbacks[i] === callback) {\r\n                if (this._contexts[i] === context) {\r\n                    // callback & context match => remove it\r\n                    this._callbacks.splice(i, 1);\r\n                    this._contexts.splice(i, 1);\r\n                    return;\r\n                }\r\n                else {\r\n                    foundCallbackWithDifferentContext = true;\r\n                }\r\n            }\r\n        }\r\n        if (foundCallbackWithDifferentContext) {\r\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\r\n        }\r\n    }\r\n    invoke(...args) {\r\n        if (!this._callbacks) {\r\n            return [];\r\n        }\r\n        var ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\r\n        for (var i = 0, len = callbacks.length; i < len; i++) {\r\n            try {\r\n                ret.push(callbacks[i].apply(contexts[i], args));\r\n            }\r\n            catch (e) {\r\n                console.error(e);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    isEmpty() {\r\n        return !this._callbacks || this._callbacks.length === 0;\r\n    }\r\n    dispose() {\r\n        this._callbacks = undefined;\r\n        this._contexts = undefined;\r\n    }\r\n}\r\nclass Emitter {\r\n    constructor(_options) {\r\n        this._options = _options;\r\n    }\r\n    /**\r\n     * For the public to allow to subscribe\r\n     * to events from this Emitter\r\n     */\r\n    get event() {\r\n        if (!this._event) {\r\n            this._event = (listener, thisArgs, disposables) => {\r\n                if (!this._callbacks) {\r\n                    this._callbacks = new CallbackList();\r\n                }\r\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\r\n                    this._options.onFirstListenerAdd(this);\r\n                }\r\n                this._callbacks.add(listener, thisArgs);\r\n                let result;\r\n                result = {\r\n                    dispose: () => {\r\n                        this._callbacks.remove(listener, thisArgs);\r\n                        result.dispose = Emitter._noop;\r\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\r\n                            this._options.onLastListenerRemove(this);\r\n                        }\r\n                    }\r\n                };\r\n                if (Array.isArray(disposables)) {\r\n                    disposables.push(result);\r\n                }\r\n                return result;\r\n            };\r\n        }\r\n        return this._event;\r\n    }\r\n    /**\r\n     * To be kept private to fire an event to\r\n     * subscribers\r\n     */\r\n    fire(event) {\r\n        if (this._callbacks) {\r\n            this._callbacks.invoke.call(this._callbacks, event);\r\n        }\r\n    }\r\n    dispose() {\r\n        if (this._callbacks) {\r\n            this._callbacks.dispose();\r\n            this._callbacks = undefined;\r\n        }\r\n    }\r\n}\r\nEmitter._noop = function () { };\r\nexports.Emitter = Emitter;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return typeof value === 'number' || value instanceof Number;\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return value instanceof Error;\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return typeof value === 'function';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(elem => string(elem));\r\n}\r\nexports.stringArray = stringArray;\r\n","\"use strict\";\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Touch;\r\n(function (Touch) {\r\n    Touch.None = 0;\r\n    Touch.First = 1;\r\n    Touch.Last = 2;\r\n})(Touch = exports.Touch || (exports.Touch = {}));\r\nclass LinkedMap {\r\n    constructor() {\r\n        this._map = new Map();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    }\r\n    clear() {\r\n        this._map.clear();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    }\r\n    isEmpty() {\r\n        return !this._head && !this._tail;\r\n    }\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    has(key) {\r\n        return this._map.has(key);\r\n    }\r\n    get(key) {\r\n        const item = this._map.get(key);\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        return item.value;\r\n    }\r\n    set(key, value, touch = Touch.None) {\r\n        let item = this._map.get(key);\r\n        if (item) {\r\n            item.value = value;\r\n            if (touch !== Touch.None) {\r\n                this.touch(item, touch);\r\n            }\r\n        }\r\n        else {\r\n            item = { key, value, next: undefined, previous: undefined };\r\n            switch (touch) {\r\n                case Touch.None:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                case Touch.First:\r\n                    this.addItemFirst(item);\r\n                    break;\r\n                case Touch.Last:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                default:\r\n                    this.addItemLast(item);\r\n                    break;\r\n            }\r\n            this._map.set(key, item);\r\n            this._size++;\r\n        }\r\n    }\r\n    delete(key) {\r\n        const item = this._map.get(key);\r\n        if (!item) {\r\n            return false;\r\n        }\r\n        this._map.delete(key);\r\n        this.removeItem(item);\r\n        this._size--;\r\n        return true;\r\n    }\r\n    shift() {\r\n        if (!this._head && !this._tail) {\r\n            return undefined;\r\n        }\r\n        if (!this._head || !this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        const item = this._head;\r\n        this._map.delete(item.key);\r\n        this.removeItem(item);\r\n        this._size--;\r\n        return item.value;\r\n    }\r\n    forEach(callbackfn, thisArg) {\r\n        let current = this._head;\r\n        while (current) {\r\n            if (thisArg) {\r\n                callbackfn.bind(thisArg)(current.value, current.key, this);\r\n            }\r\n            else {\r\n                callbackfn(current.value, current.key, this);\r\n            }\r\n            current = current.next;\r\n        }\r\n    }\r\n    forEachReverse(callbackfn, thisArg) {\r\n        let current = this._tail;\r\n        while (current) {\r\n            if (thisArg) {\r\n                callbackfn.bind(thisArg)(current.value, current.key, this);\r\n            }\r\n            else {\r\n                callbackfn(current.value, current.key, this);\r\n            }\r\n            current = current.previous;\r\n        }\r\n    }\r\n    values() {\r\n        let result = [];\r\n        let current = this._head;\r\n        while (current) {\r\n            result.push(current.value);\r\n            current = current.next;\r\n        }\r\n        return result;\r\n    }\r\n    keys() {\r\n        let result = [];\r\n        let current = this._head;\r\n        while (current) {\r\n            result.push(current.key);\r\n            current = current.next;\r\n        }\r\n        return result;\r\n    }\r\n    /* JSON RPC run on es5 which has no Symbol.iterator\r\n    public keys(): IterableIterator<K> {\r\n        let current = this._head;\r\n        let iterator: IterableIterator<K> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<K> {\r\n                if (current) {\r\n                    let result = { value: current.key, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n\r\n    public values(): IterableIterator<V> {\r\n        let current = this._head;\r\n        let iterator: IterableIterator<V> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<V> {\r\n                if (current) {\r\n                    let result = { value: current.value, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n    */\r\n    addItemFirst(item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._tail = item;\r\n        }\r\n        else if (!this._head) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n        }\r\n        this._head = item;\r\n    }\r\n    addItemLast(item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._head = item;\r\n        }\r\n        else if (!this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n        }\r\n        this._tail = item;\r\n    }\r\n    removeItem(item) {\r\n        if (item === this._head && item === this._tail) {\r\n            this._head = undefined;\r\n            this._tail = undefined;\r\n        }\r\n        else if (item === this._head) {\r\n            this._head = item.next;\r\n        }\r\n        else if (item === this._tail) {\r\n            this._tail = item.previous;\r\n        }\r\n        else {\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            if (!next || !previous) {\r\n                throw new Error('Invalid list');\r\n            }\r\n            next.previous = previous;\r\n            previous.next = next;\r\n        }\r\n    }\r\n    touch(item, touch) {\r\n        if (!this._head || !this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        if ((touch !== Touch.First && touch !== Touch.Last)) {\r\n            return;\r\n        }\r\n        if (touch === Touch.First) {\r\n            if (item === this._head) {\r\n                return;\r\n            }\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            // Unlink the item\r\n            if (item === this._tail) {\r\n                // previous must be defined since item was not head but is tail\r\n                // So there are more than on item in the map\r\n                previous.next = undefined;\r\n                this._tail = previous;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            // Insert the node at head\r\n            item.previous = undefined;\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n            this._head = item;\r\n        }\r\n        else if (touch === Touch.Last) {\r\n            if (item === this._tail) {\r\n                return;\r\n            }\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            // Unlink the item.\r\n            if (item === this._head) {\r\n                // next must be defined since item was not tail but is head\r\n                // So there are more than on item in the map\r\n                next.previous = undefined;\r\n                this._head = next;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            item.next = undefined;\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n            this._tail = item;\r\n        }\r\n    }\r\n}\r\nexports.LinkedMap = LinkedMap;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n/// <reference path=\"./thenable.ts\" />\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Is = require(\"./is\");\r\nconst messages_1 = require(\"./messages\");\r\nexports.RequestType = messages_1.RequestType;\r\nexports.RequestType0 = messages_1.RequestType0;\r\nexports.RequestType1 = messages_1.RequestType1;\r\nexports.RequestType2 = messages_1.RequestType2;\r\nexports.RequestType3 = messages_1.RequestType3;\r\nexports.RequestType4 = messages_1.RequestType4;\r\nexports.RequestType5 = messages_1.RequestType5;\r\nexports.RequestType6 = messages_1.RequestType6;\r\nexports.RequestType7 = messages_1.RequestType7;\r\nexports.RequestType8 = messages_1.RequestType8;\r\nexports.RequestType9 = messages_1.RequestType9;\r\nexports.ResponseError = messages_1.ResponseError;\r\nexports.ErrorCodes = messages_1.ErrorCodes;\r\nexports.NotificationType = messages_1.NotificationType;\r\nexports.NotificationType0 = messages_1.NotificationType0;\r\nexports.NotificationType1 = messages_1.NotificationType1;\r\nexports.NotificationType2 = messages_1.NotificationType2;\r\nexports.NotificationType3 = messages_1.NotificationType3;\r\nexports.NotificationType4 = messages_1.NotificationType4;\r\nexports.NotificationType5 = messages_1.NotificationType5;\r\nexports.NotificationType6 = messages_1.NotificationType6;\r\nexports.NotificationType7 = messages_1.NotificationType7;\r\nexports.NotificationType8 = messages_1.NotificationType8;\r\nexports.NotificationType9 = messages_1.NotificationType9;\r\nconst messageReader_1 = require(\"./messageReader\");\r\nexports.MessageReader = messageReader_1.MessageReader;\r\nexports.StreamMessageReader = messageReader_1.StreamMessageReader;\r\nexports.IPCMessageReader = messageReader_1.IPCMessageReader;\r\nexports.SocketMessageReader = messageReader_1.SocketMessageReader;\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nexports.MessageWriter = messageWriter_1.MessageWriter;\r\nexports.StreamMessageWriter = messageWriter_1.StreamMessageWriter;\r\nexports.IPCMessageWriter = messageWriter_1.IPCMessageWriter;\r\nexports.SocketMessageWriter = messageWriter_1.SocketMessageWriter;\r\nconst events_1 = require(\"./events\");\r\nexports.Disposable = events_1.Disposable;\r\nexports.Event = events_1.Event;\r\nexports.Emitter = events_1.Emitter;\r\nconst cancellation_1 = require(\"./cancellation\");\r\nexports.CancellationTokenSource = cancellation_1.CancellationTokenSource;\r\nexports.CancellationToken = cancellation_1.CancellationToken;\r\nconst linkedMap_1 = require(\"./linkedMap\");\r\n__export(require(\"./pipeSupport\"));\r\n__export(require(\"./socketSupport\"));\r\nvar CancelNotification;\r\n(function (CancelNotification) {\r\n    CancelNotification.type = new messages_1.NotificationType('$/cancelRequest');\r\n})(CancelNotification || (CancelNotification = {}));\r\nexports.NullLogger = Object.freeze({\r\n    error: () => { },\r\n    warn: () => { },\r\n    info: () => { },\r\n    log: () => { }\r\n});\r\nvar Trace;\r\n(function (Trace) {\r\n    Trace[Trace[\"Off\"] = 0] = \"Off\";\r\n    Trace[Trace[\"Messages\"] = 1] = \"Messages\";\r\n    Trace[Trace[\"Verbose\"] = 2] = \"Verbose\";\r\n})(Trace = exports.Trace || (exports.Trace = {}));\r\n(function (Trace) {\r\n    function fromString(value) {\r\n        value = value.toLowerCase();\r\n        switch (value) {\r\n            case 'off':\r\n                return Trace.Off;\r\n            case 'messages':\r\n                return Trace.Messages;\r\n            case 'verbose':\r\n                return Trace.Verbose;\r\n            default:\r\n                return Trace.Off;\r\n        }\r\n    }\r\n    Trace.fromString = fromString;\r\n    function toString(value) {\r\n        switch (value) {\r\n            case Trace.Off:\r\n                return 'off';\r\n            case Trace.Messages:\r\n                return 'messages';\r\n            case Trace.Verbose:\r\n                return 'verbose';\r\n            default:\r\n                return 'off';\r\n        }\r\n    }\r\n    Trace.toString = toString;\r\n})(Trace = exports.Trace || (exports.Trace = {}));\r\nvar TraceFormat;\r\n(function (TraceFormat) {\r\n    TraceFormat[\"Text\"] = \"text\";\r\n    TraceFormat[\"JSON\"] = \"json\";\r\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\r\n(function (TraceFormat) {\r\n    function fromString(value) {\r\n        value = value.toLowerCase();\r\n        if (value === 'json') {\r\n            return TraceFormat.JSON;\r\n        }\r\n        else {\r\n            return TraceFormat.Text;\r\n        }\r\n    }\r\n    TraceFormat.fromString = fromString;\r\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\r\nvar SetTraceNotification;\r\n(function (SetTraceNotification) {\r\n    SetTraceNotification.type = new messages_1.NotificationType('$/setTraceNotification');\r\n})(SetTraceNotification = exports.SetTraceNotification || (exports.SetTraceNotification = {}));\r\nvar LogTraceNotification;\r\n(function (LogTraceNotification) {\r\n    LogTraceNotification.type = new messages_1.NotificationType('$/logTraceNotification');\r\n})(LogTraceNotification = exports.LogTraceNotification || (exports.LogTraceNotification = {}));\r\nvar ConnectionErrors;\r\n(function (ConnectionErrors) {\r\n    /**\r\n     * The connection is closed.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"Closed\"] = 1] = \"Closed\";\r\n    /**\r\n     * The connection got disposed.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"Disposed\"] = 2] = \"Disposed\";\r\n    /**\r\n     * The connection is already in listening mode.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"AlreadyListening\"] = 3] = \"AlreadyListening\";\r\n})(ConnectionErrors = exports.ConnectionErrors || (exports.ConnectionErrors = {}));\r\nclass ConnectionError extends Error {\r\n    constructor(code, message) {\r\n        super(message);\r\n        this.code = code;\r\n        Object.setPrototypeOf(this, ConnectionError.prototype);\r\n    }\r\n}\r\nexports.ConnectionError = ConnectionError;\r\nvar ConnectionStrategy;\r\n(function (ConnectionStrategy) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.cancelUndispatched);\r\n    }\r\n    ConnectionStrategy.is = is;\r\n})(ConnectionStrategy = exports.ConnectionStrategy || (exports.ConnectionStrategy = {}));\r\nvar ConnectionState;\r\n(function (ConnectionState) {\r\n    ConnectionState[ConnectionState[\"New\"] = 1] = \"New\";\r\n    ConnectionState[ConnectionState[\"Listening\"] = 2] = \"Listening\";\r\n    ConnectionState[ConnectionState[\"Closed\"] = 3] = \"Closed\";\r\n    ConnectionState[ConnectionState[\"Disposed\"] = 4] = \"Disposed\";\r\n})(ConnectionState || (ConnectionState = {}));\r\nfunction _createMessageConnection(messageReader, messageWriter, logger, strategy) {\r\n    let sequenceNumber = 0;\r\n    let notificationSquenceNumber = 0;\r\n    let unknownResponseSquenceNumber = 0;\r\n    const version = '2.0';\r\n    let starRequestHandler = undefined;\r\n    let requestHandlers = Object.create(null);\r\n    let starNotificationHandler = undefined;\r\n    let notificationHandlers = Object.create(null);\r\n    let timer;\r\n    let messageQueue = new linkedMap_1.LinkedMap();\r\n    let responsePromises = Object.create(null);\r\n    let requestTokens = Object.create(null);\r\n    let trace = Trace.Off;\r\n    let traceFormat = TraceFormat.Text;\r\n    let tracer;\r\n    let state = ConnectionState.New;\r\n    let errorEmitter = new events_1.Emitter();\r\n    let closeEmitter = new events_1.Emitter();\r\n    let unhandledNotificationEmitter = new events_1.Emitter();\r\n    let disposeEmitter = new events_1.Emitter();\r\n    function createRequestQueueKey(id) {\r\n        return 'req-' + id.toString();\r\n    }\r\n    function createResponseQueueKey(id) {\r\n        if (id === null) {\r\n            return 'res-unknown-' + (++unknownResponseSquenceNumber).toString();\r\n        }\r\n        else {\r\n            return 'res-' + id.toString();\r\n        }\r\n    }\r\n    function createNotificationQueueKey() {\r\n        return 'not-' + (++notificationSquenceNumber).toString();\r\n    }\r\n    function addMessageToQueue(queue, message) {\r\n        if (messages_1.isRequestMessage(message)) {\r\n            queue.set(createRequestQueueKey(message.id), message);\r\n        }\r\n        else if (messages_1.isResponseMessage(message)) {\r\n            queue.set(createResponseQueueKey(message.id), message);\r\n        }\r\n        else {\r\n            queue.set(createNotificationQueueKey(), message);\r\n        }\r\n    }\r\n    function cancelUndispatched(_message) {\r\n        return undefined;\r\n    }\r\n    function isListening() {\r\n        return state === ConnectionState.Listening;\r\n    }\r\n    function isClosed() {\r\n        return state === ConnectionState.Closed;\r\n    }\r\n    function isDisposed() {\r\n        return state === ConnectionState.Disposed;\r\n    }\r\n    function closeHandler() {\r\n        if (state === ConnectionState.New || state === ConnectionState.Listening) {\r\n            state = ConnectionState.Closed;\r\n            closeEmitter.fire(undefined);\r\n        }\r\n        // If the connection is disposed don't sent close events.\r\n    }\r\n    ;\r\n    function readErrorHandler(error) {\r\n        errorEmitter.fire([error, undefined, undefined]);\r\n    }\r\n    function writeErrorHandler(data) {\r\n        errorEmitter.fire(data);\r\n    }\r\n    messageReader.onClose(closeHandler);\r\n    messageReader.onError(readErrorHandler);\r\n    messageWriter.onClose(closeHandler);\r\n    messageWriter.onError(writeErrorHandler);\r\n    function triggerMessageQueue() {\r\n        if (timer || messageQueue.size === 0) {\r\n            return;\r\n        }\r\n        timer = setImmediate(() => {\r\n            timer = undefined;\r\n            processMessageQueue();\r\n        });\r\n    }\r\n    function processMessageQueue() {\r\n        if (messageQueue.size === 0) {\r\n            return;\r\n        }\r\n        let message = messageQueue.shift();\r\n        try {\r\n            if (messages_1.isRequestMessage(message)) {\r\n                handleRequest(message);\r\n            }\r\n            else if (messages_1.isNotificationMessage(message)) {\r\n                handleNotification(message);\r\n            }\r\n            else if (messages_1.isResponseMessage(message)) {\r\n                handleResponse(message);\r\n            }\r\n            else {\r\n                handleInvalidMessage(message);\r\n            }\r\n        }\r\n        finally {\r\n            triggerMessageQueue();\r\n        }\r\n    }\r\n    let callback = (message) => {\r\n        try {\r\n            // We have received a cancellation message. Check if the message is still in the queue\r\n            // and cancel it if allowed to do so.\r\n            if (messages_1.isNotificationMessage(message) && message.method === CancelNotification.type.method) {\r\n                let key = createRequestQueueKey(message.params.id);\r\n                let toCancel = messageQueue.get(key);\r\n                if (messages_1.isRequestMessage(toCancel)) {\r\n                    let response = strategy && strategy.cancelUndispatched ? strategy.cancelUndispatched(toCancel, cancelUndispatched) : cancelUndispatched(toCancel);\r\n                    if (response && (response.error !== void 0 || response.result !== void 0)) {\r\n                        messageQueue.delete(key);\r\n                        response.id = toCancel.id;\r\n                        traceSendingResponse(response, message.method, Date.now());\r\n                        messageWriter.write(response);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            addMessageToQueue(messageQueue, message);\r\n        }\r\n        finally {\r\n            triggerMessageQueue();\r\n        }\r\n    };\r\n    function handleRequest(requestMessage) {\r\n        if (isDisposed()) {\r\n            // we return here silently since we fired an event when the\r\n            // connection got disposed.\r\n            return;\r\n        }\r\n        function reply(resultOrError, method, startTime) {\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id\r\n            };\r\n            if (resultOrError instanceof messages_1.ResponseError) {\r\n                message.error = resultOrError.toJson();\r\n            }\r\n            else {\r\n                message.result = resultOrError === void 0 ? null : resultOrError;\r\n            }\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        function replyError(error, method, startTime) {\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id,\r\n                error: error.toJson()\r\n            };\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        function replySuccess(result, method, startTime) {\r\n            // The JSON RPC defines that a response must either have a result or an error\r\n            // So we can't treat undefined as a valid response result.\r\n            if (result === void 0) {\r\n                result = null;\r\n            }\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id,\r\n                result: result\r\n            };\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        traceReceivedRequest(requestMessage);\r\n        let element = requestHandlers[requestMessage.method];\r\n        let type;\r\n        let requestHandler;\r\n        if (element) {\r\n            type = element.type;\r\n            requestHandler = element.handler;\r\n        }\r\n        let startTime = Date.now();\r\n        if (requestHandler || starRequestHandler) {\r\n            let cancellationSource = new cancellation_1.CancellationTokenSource();\r\n            let tokenKey = String(requestMessage.id);\r\n            requestTokens[tokenKey] = cancellationSource;\r\n            try {\r\n                let handlerResult;\r\n                if (requestMessage.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, cancellationSource.token);\r\n                }\r\n                else if (Is.array(requestMessage.params) && (type === void 0 || type.numberOfParams > 1)) {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(...requestMessage.params, cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, ...requestMessage.params, cancellationSource.token);\r\n                }\r\n                else {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(requestMessage.params, cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, requestMessage.params, cancellationSource.token);\r\n                }\r\n                let promise = handlerResult;\r\n                if (!handlerResult) {\r\n                    delete requestTokens[tokenKey];\r\n                    replySuccess(handlerResult, requestMessage.method, startTime);\r\n                }\r\n                else if (promise.then) {\r\n                    promise.then((resultOrError) => {\r\n                        delete requestTokens[tokenKey];\r\n                        reply(resultOrError, requestMessage.method, startTime);\r\n                    }, error => {\r\n                        delete requestTokens[tokenKey];\r\n                        if (error instanceof messages_1.ResponseError) {\r\n                            replyError(error, requestMessage.method, startTime);\r\n                        }\r\n                        else if (error && Is.string(error.message)) {\r\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\r\n                        }\r\n                        else {\r\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    delete requestTokens[tokenKey];\r\n                    reply(handlerResult, requestMessage.method, startTime);\r\n                }\r\n            }\r\n            catch (error) {\r\n                delete requestTokens[tokenKey];\r\n                if (error instanceof messages_1.ResponseError) {\r\n                    reply(error, requestMessage.method, startTime);\r\n                }\r\n                else if (error && Is.string(error.message)) {\r\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\r\n                }\r\n                else {\r\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.MethodNotFound, `Unhandled method ${requestMessage.method}`), requestMessage.method, startTime);\r\n        }\r\n    }\r\n    function handleResponse(responseMessage) {\r\n        if (isDisposed()) {\r\n            // See handle request.\r\n            return;\r\n        }\r\n        if (responseMessage.id === null) {\r\n            if (responseMessage.error) {\r\n                logger.error(`Received response message without id: Error is: \\n${JSON.stringify(responseMessage.error, undefined, 4)}`);\r\n            }\r\n            else {\r\n                logger.error(`Received response message without id. No further error information provided.`);\r\n            }\r\n        }\r\n        else {\r\n            let key = String(responseMessage.id);\r\n            let responsePromise = responsePromises[key];\r\n            traceReceivedResponse(responseMessage, responsePromise);\r\n            if (responsePromise) {\r\n                delete responsePromises[key];\r\n                try {\r\n                    if (responseMessage.error) {\r\n                        let error = responseMessage.error;\r\n                        responsePromise.reject(new messages_1.ResponseError(error.code, error.message, error.data));\r\n                    }\r\n                    else if (responseMessage.result !== void 0) {\r\n                        responsePromise.resolve(responseMessage.result);\r\n                    }\r\n                    else {\r\n                        throw new Error('Should never happen.');\r\n                    }\r\n                }\r\n                catch (error) {\r\n                    if (error.message) {\r\n                        logger.error(`Response handler '${responsePromise.method}' failed with message: ${error.message}`);\r\n                    }\r\n                    else {\r\n                        logger.error(`Response handler '${responsePromise.method}' failed unexpectedly.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function handleNotification(message) {\r\n        if (isDisposed()) {\r\n            // See handle request.\r\n            return;\r\n        }\r\n        let type = undefined;\r\n        let notificationHandler;\r\n        if (message.method === CancelNotification.type.method) {\r\n            notificationHandler = (params) => {\r\n                let id = params.id;\r\n                let source = requestTokens[String(id)];\r\n                if (source) {\r\n                    source.cancel();\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            let element = notificationHandlers[message.method];\r\n            if (element) {\r\n                notificationHandler = element.handler;\r\n                type = element.type;\r\n            }\r\n        }\r\n        if (notificationHandler || starNotificationHandler) {\r\n            try {\r\n                traceReceivedNotification(message);\r\n                if (message.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\r\n                    notificationHandler ? notificationHandler() : starNotificationHandler(message.method);\r\n                }\r\n                else if (Is.array(message.params) && (type === void 0 || type.numberOfParams > 1)) {\r\n                    notificationHandler ? notificationHandler(...message.params) : starNotificationHandler(message.method, ...message.params);\r\n                }\r\n                else {\r\n                    notificationHandler ? notificationHandler(message.params) : starNotificationHandler(message.method, message.params);\r\n                }\r\n            }\r\n            catch (error) {\r\n                if (error.message) {\r\n                    logger.error(`Notification handler '${message.method}' failed with message: ${error.message}`);\r\n                }\r\n                else {\r\n                    logger.error(`Notification handler '${message.method}' failed unexpectedly.`);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            unhandledNotificationEmitter.fire(message);\r\n        }\r\n    }\r\n    function handleInvalidMessage(message) {\r\n        if (!message) {\r\n            logger.error('Received empty message.');\r\n            return;\r\n        }\r\n        logger.error(`Received message which is neither a response nor a notification message:\\n${JSON.stringify(message, null, 4)}`);\r\n        // Test whether we find an id to reject the promise\r\n        let responseMessage = message;\r\n        if (Is.string(responseMessage.id) || Is.number(responseMessage.id)) {\r\n            let key = String(responseMessage.id);\r\n            let responseHandler = responsePromises[key];\r\n            if (responseHandler) {\r\n                responseHandler.reject(new Error('The received response has neither a result nor an error property.'));\r\n            }\r\n        }\r\n    }\r\n    function traceSendingRequest(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose && message.params) {\r\n                data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n            }\r\n            tracer.log(`Sending request '${message.method} - (${message.id})'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-request', message);\r\n        }\r\n    }\r\n    function traceSendingNotification(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.params) {\r\n                    data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    data = 'No parameters provided.\\n\\n';\r\n                }\r\n            }\r\n            tracer.log(`Sending notification '${message.method}'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-notification', message);\r\n        }\r\n    }\r\n    function traceSendingResponse(message, method, startTime) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.error && message.error.data) {\r\n                    data = `Error data: ${JSON.stringify(message.error.data, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    if (message.result) {\r\n                        data = `Result: ${JSON.stringify(message.result, null, 4)}\\n\\n`;\r\n                    }\r\n                    else if (message.error === void 0) {\r\n                        data = 'No result returned.\\n\\n';\r\n                    }\r\n                }\r\n            }\r\n            tracer.log(`Sending response '${method} - (${message.id})'. Processing request took ${Date.now() - startTime}ms`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-response', message);\r\n        }\r\n    }\r\n    function traceReceivedRequest(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose && message.params) {\r\n                data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n            }\r\n            tracer.log(`Received request '${message.method} - (${message.id})'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('receive-request', message);\r\n        }\r\n    }\r\n    function traceReceivedNotification(message) {\r\n        if (trace === Trace.Off || !tracer || message.method === LogTraceNotification.type.method) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.params) {\r\n                    data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    data = 'No parameters provided.\\n\\n';\r\n                }\r\n            }\r\n            tracer.log(`Received notification '${message.method}'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('receive-notification', message);\r\n        }\r\n    }\r\n    function traceReceivedResponse(message, responsePromise) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.error && message.error.data) {\r\n                    data = `Error data: ${JSON.stringify(message.error.data, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    if (message.result) {\r\n                        data = `Result: ${JSON.stringify(message.result, null, 4)}\\n\\n`;\r\n                    }\r\n                    else if (message.error === void 0) {\r\n                        data = 'No result returned.\\n\\n';\r\n                    }\r\n                }\r\n            }\r\n            if (responsePromise) {\r\n                let error = message.error ? ` Request failed: ${message.error.message} (${message.error.code}).` : '';\r\n                tracer.log(`Received response '${responsePromise.method} - (${message.id})' in ${Date.now() - responsePromise.timerStart}ms.${error}`, data);\r\n            }\r\n            else {\r\n                tracer.log(`Received response ${message.id} without active response promise.`, data);\r\n            }\r\n        }\r\n        else {\r\n            logLSPMessage('receive-response', message);\r\n        }\r\n    }\r\n    function logLSPMessage(type, message) {\r\n        if (!tracer || trace === Trace.Off) {\r\n            return;\r\n        }\r\n        const lspMessage = {\r\n            isLSPMessage: true,\r\n            type,\r\n            message,\r\n            timestamp: Date.now()\r\n        };\r\n        tracer.log(lspMessage);\r\n    }\r\n    function throwIfClosedOrDisposed() {\r\n        if (isClosed()) {\r\n            throw new ConnectionError(ConnectionErrors.Closed, 'Connection is closed.');\r\n        }\r\n        if (isDisposed()) {\r\n            throw new ConnectionError(ConnectionErrors.Disposed, 'Connection is disposed.');\r\n        }\r\n    }\r\n    function throwIfListening() {\r\n        if (isListening()) {\r\n            throw new ConnectionError(ConnectionErrors.AlreadyListening, 'Connection is already listening');\r\n        }\r\n    }\r\n    function throwIfNotListening() {\r\n        if (!isListening()) {\r\n            throw new Error('Call listen() first.');\r\n        }\r\n    }\r\n    function undefinedToNull(param) {\r\n        if (param === void 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return param;\r\n        }\r\n    }\r\n    function computeMessageParams(type, params) {\r\n        let result;\r\n        let numberOfParams = type.numberOfParams;\r\n        switch (numberOfParams) {\r\n            case 0:\r\n                result = null;\r\n                break;\r\n            case 1:\r\n                result = undefinedToNull(params[0]);\r\n                break;\r\n            default:\r\n                result = [];\r\n                for (let i = 0; i < params.length && i < numberOfParams; i++) {\r\n                    result.push(undefinedToNull(params[i]));\r\n                }\r\n                if (params.length < numberOfParams) {\r\n                    for (let i = params.length; i < numberOfParams; i++) {\r\n                        result.push(null);\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        return result;\r\n    }\r\n    let connection = {\r\n        sendNotification: (type, ...params) => {\r\n            throwIfClosedOrDisposed();\r\n            let method;\r\n            let messageParams;\r\n            if (Is.string(type)) {\r\n                method = type;\r\n                switch (params.length) {\r\n                    case 0:\r\n                        messageParams = null;\r\n                        break;\r\n                    case 1:\r\n                        messageParams = params[0];\r\n                        break;\r\n                    default:\r\n                        messageParams = params;\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                method = type.method;\r\n                messageParams = computeMessageParams(type, params);\r\n            }\r\n            let notificationMessage = {\r\n                jsonrpc: version,\r\n                method: method,\r\n                params: messageParams\r\n            };\r\n            traceSendingNotification(notificationMessage);\r\n            messageWriter.write(notificationMessage);\r\n        },\r\n        onNotification: (type, handler) => {\r\n            throwIfClosedOrDisposed();\r\n            if (Is.func(type)) {\r\n                starNotificationHandler = type;\r\n            }\r\n            else if (handler) {\r\n                if (Is.string(type)) {\r\n                    notificationHandlers[type] = { type: undefined, handler };\r\n                }\r\n                else {\r\n                    notificationHandlers[type.method] = { type, handler };\r\n                }\r\n            }\r\n        },\r\n        sendRequest: (type, ...params) => {\r\n            throwIfClosedOrDisposed();\r\n            throwIfNotListening();\r\n            let method;\r\n            let messageParams;\r\n            let token = undefined;\r\n            if (Is.string(type)) {\r\n                method = type;\r\n                switch (params.length) {\r\n                    case 0:\r\n                        messageParams = null;\r\n                        break;\r\n                    case 1:\r\n                        // The cancellation token is optional so it can also be undefined.\r\n                        if (cancellation_1.CancellationToken.is(params[0])) {\r\n                            messageParams = null;\r\n                            token = params[0];\r\n                        }\r\n                        else {\r\n                            messageParams = undefinedToNull(params[0]);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        const last = params.length - 1;\r\n                        if (cancellation_1.CancellationToken.is(params[last])) {\r\n                            token = params[last];\r\n                            if (params.length === 2) {\r\n                                messageParams = undefinedToNull(params[0]);\r\n                            }\r\n                            else {\r\n                                messageParams = params.slice(0, last).map(value => undefinedToNull(value));\r\n                            }\r\n                        }\r\n                        else {\r\n                            messageParams = params.map(value => undefinedToNull(value));\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                method = type.method;\r\n                messageParams = computeMessageParams(type, params);\r\n                let numberOfParams = type.numberOfParams;\r\n                token = cancellation_1.CancellationToken.is(params[numberOfParams]) ? params[numberOfParams] : undefined;\r\n            }\r\n            let id = sequenceNumber++;\r\n            let result = new Promise((resolve, reject) => {\r\n                let requestMessage = {\r\n                    jsonrpc: version,\r\n                    id: id,\r\n                    method: method,\r\n                    params: messageParams\r\n                };\r\n                let responsePromise = { method: method, timerStart: Date.now(), resolve, reject };\r\n                traceSendingRequest(requestMessage);\r\n                try {\r\n                    messageWriter.write(requestMessage);\r\n                }\r\n                catch (e) {\r\n                    // Writing the message failed. So we need to reject the promise.\r\n                    responsePromise.reject(new messages_1.ResponseError(messages_1.ErrorCodes.MessageWriteError, e.message ? e.message : 'Unknown reason'));\r\n                    responsePromise = null;\r\n                }\r\n                if (responsePromise) {\r\n                    responsePromises[String(id)] = responsePromise;\r\n                }\r\n            });\r\n            if (token) {\r\n                token.onCancellationRequested(() => {\r\n                    connection.sendNotification(CancelNotification.type, { id });\r\n                });\r\n            }\r\n            return result;\r\n        },\r\n        onRequest: (type, handler) => {\r\n            throwIfClosedOrDisposed();\r\n            if (Is.func(type)) {\r\n                starRequestHandler = type;\r\n            }\r\n            else if (handler) {\r\n                if (Is.string(type)) {\r\n                    requestHandlers[type] = { type: undefined, handler };\r\n                }\r\n                else {\r\n                    requestHandlers[type.method] = { type, handler };\r\n                }\r\n            }\r\n        },\r\n        trace: (_value, _tracer, sendNotificationOrTraceOptions) => {\r\n            let _sendNotification = false;\r\n            let _traceFormat = TraceFormat.Text;\r\n            if (sendNotificationOrTraceOptions !== void 0) {\r\n                if (Is.boolean(sendNotificationOrTraceOptions)) {\r\n                    _sendNotification = sendNotificationOrTraceOptions;\r\n                }\r\n                else {\r\n                    _sendNotification = sendNotificationOrTraceOptions.sendNotification || false;\r\n                    _traceFormat = sendNotificationOrTraceOptions.traceFormat || TraceFormat.Text;\r\n                }\r\n            }\r\n            trace = _value;\r\n            traceFormat = _traceFormat;\r\n            if (trace === Trace.Off) {\r\n                tracer = undefined;\r\n            }\r\n            else {\r\n                tracer = _tracer;\r\n            }\r\n            if (_sendNotification && !isClosed() && !isDisposed()) {\r\n                connection.sendNotification(SetTraceNotification.type, { value: Trace.toString(_value) });\r\n            }\r\n        },\r\n        onError: errorEmitter.event,\r\n        onClose: closeEmitter.event,\r\n        onUnhandledNotification: unhandledNotificationEmitter.event,\r\n        onDispose: disposeEmitter.event,\r\n        dispose: () => {\r\n            if (isDisposed()) {\r\n                return;\r\n            }\r\n            state = ConnectionState.Disposed;\r\n            disposeEmitter.fire(undefined);\r\n            let error = new Error('Connection got disposed.');\r\n            Object.keys(responsePromises).forEach((key) => {\r\n                responsePromises[key].reject(error);\r\n            });\r\n            responsePromises = Object.create(null);\r\n            requestTokens = Object.create(null);\r\n            messageQueue = new linkedMap_1.LinkedMap();\r\n            // Test for backwards compatibility\r\n            if (Is.func(messageWriter.dispose)) {\r\n                messageWriter.dispose();\r\n            }\r\n            if (Is.func(messageReader.dispose)) {\r\n                messageReader.dispose();\r\n            }\r\n        },\r\n        listen: () => {\r\n            throwIfClosedOrDisposed();\r\n            throwIfListening();\r\n            state = ConnectionState.Listening;\r\n            messageReader.listen(callback);\r\n        },\r\n        inspect: () => {\r\n            console.log(\"inspect\");\r\n        }\r\n    };\r\n    connection.onNotification(LogTraceNotification.type, (params) => {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        tracer.log(params.message, trace === Trace.Verbose ? params.verbose : undefined);\r\n    });\r\n    return connection;\r\n}\r\nfunction isMessageReader(value) {\r\n    return value.listen !== void 0 && value.read === void 0;\r\n}\r\nfunction isMessageWriter(value) {\r\n    return value.write !== void 0 && value.end === void 0;\r\n}\r\nfunction createMessageConnection(input, output, logger, strategy) {\r\n    if (!logger) {\r\n        logger = exports.NullLogger;\r\n    }\r\n    let reader = isMessageReader(input) ? input : new messageReader_1.StreamMessageReader(input);\r\n    let writer = isMessageWriter(output) ? output : new messageWriter_1.StreamMessageWriter(output);\r\n    return _createMessageConnection(reader, writer, logger, strategy);\r\n}\r\nexports.createMessageConnection = createMessageConnection;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nlet DefaultSize = 8192;\r\nlet CR = Buffer.from('\\r', 'ascii')[0];\r\nlet LF = Buffer.from('\\n', 'ascii')[0];\r\nlet CRLF = '\\r\\n';\r\nclass MessageBuffer {\r\n    constructor(encoding = 'utf8') {\r\n        this.encoding = encoding;\r\n        this.index = 0;\r\n        this.buffer = Buffer.allocUnsafe(DefaultSize);\r\n    }\r\n    append(chunk) {\r\n        var toAppend = chunk;\r\n        if (typeof (chunk) === 'string') {\r\n            var str = chunk;\r\n            var bufferLen = Buffer.byteLength(str, this.encoding);\r\n            toAppend = Buffer.allocUnsafe(bufferLen);\r\n            toAppend.write(str, 0, bufferLen, this.encoding);\r\n        }\r\n        if (this.buffer.length - this.index >= toAppend.length) {\r\n            toAppend.copy(this.buffer, this.index, 0, toAppend.length);\r\n        }\r\n        else {\r\n            var newSize = (Math.ceil((this.index + toAppend.length) / DefaultSize) + 1) * DefaultSize;\r\n            if (this.index === 0) {\r\n                this.buffer = Buffer.allocUnsafe(newSize);\r\n                toAppend.copy(this.buffer, 0, 0, toAppend.length);\r\n            }\r\n            else {\r\n                this.buffer = Buffer.concat([this.buffer.slice(0, this.index), toAppend], newSize);\r\n            }\r\n        }\r\n        this.index += toAppend.length;\r\n    }\r\n    tryReadHeaders() {\r\n        let result = undefined;\r\n        let current = 0;\r\n        while (current + 3 < this.index && (this.buffer[current] !== CR || this.buffer[current + 1] !== LF || this.buffer[current + 2] !== CR || this.buffer[current + 3] !== LF)) {\r\n            current++;\r\n        }\r\n        // No header / body separator found (e.g CRLFCRLF)\r\n        if (current + 3 >= this.index) {\r\n            return result;\r\n        }\r\n        result = Object.create(null);\r\n        let headers = this.buffer.toString('ascii', 0, current).split(CRLF);\r\n        headers.forEach((header) => {\r\n            let index = header.indexOf(':');\r\n            if (index === -1) {\r\n                throw new Error('Message header must separate key and value using :');\r\n            }\r\n            let key = header.substr(0, index);\r\n            let value = header.substr(index + 1).trim();\r\n            result[key] = value;\r\n        });\r\n        let nextStart = current + 4;\r\n        this.buffer = this.buffer.slice(nextStart);\r\n        this.index = this.index - nextStart;\r\n        return result;\r\n    }\r\n    tryReadContent(length) {\r\n        if (this.index < length) {\r\n            return null;\r\n        }\r\n        let result = this.buffer.toString(this.encoding, 0, length);\r\n        let nextStart = length;\r\n        this.buffer.copy(this.buffer, 0, nextStart);\r\n        this.index = this.index - nextStart;\r\n        return result;\r\n    }\r\n    get numberOfBytes() {\r\n        return this.index;\r\n    }\r\n}\r\nvar MessageReader;\r\n(function (MessageReader) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.listen) && Is.func(candidate.dispose) &&\r\n            Is.func(candidate.onError) && Is.func(candidate.onClose) && Is.func(candidate.onPartialMessage);\r\n    }\r\n    MessageReader.is = is;\r\n})(MessageReader = exports.MessageReader || (exports.MessageReader = {}));\r\nclass AbstractMessageReader {\r\n    constructor() {\r\n        this.errorEmitter = new events_1.Emitter();\r\n        this.closeEmitter = new events_1.Emitter();\r\n        this.partialMessageEmitter = new events_1.Emitter();\r\n    }\r\n    dispose() {\r\n        this.errorEmitter.dispose();\r\n        this.closeEmitter.dispose();\r\n    }\r\n    get onError() {\r\n        return this.errorEmitter.event;\r\n    }\r\n    fireError(error) {\r\n        this.errorEmitter.fire(this.asError(error));\r\n    }\r\n    get onClose() {\r\n        return this.closeEmitter.event;\r\n    }\r\n    fireClose() {\r\n        this.closeEmitter.fire(undefined);\r\n    }\r\n    get onPartialMessage() {\r\n        return this.partialMessageEmitter.event;\r\n    }\r\n    firePartialMessage(info) {\r\n        this.partialMessageEmitter.fire(info);\r\n    }\r\n    asError(error) {\r\n        if (error instanceof Error) {\r\n            return error;\r\n        }\r\n        else {\r\n            return new Error(`Reader recevied error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\r\n        }\r\n    }\r\n}\r\nexports.AbstractMessageReader = AbstractMessageReader;\r\nclass StreamMessageReader extends AbstractMessageReader {\r\n    constructor(readable, encoding = 'utf8') {\r\n        super();\r\n        this.readable = readable;\r\n        this.buffer = new MessageBuffer(encoding);\r\n        this._partialMessageTimeout = 10000;\r\n    }\r\n    set partialMessageTimeout(timeout) {\r\n        this._partialMessageTimeout = timeout;\r\n    }\r\n    get partialMessageTimeout() {\r\n        return this._partialMessageTimeout;\r\n    }\r\n    listen(callback) {\r\n        this.nextMessageLength = -1;\r\n        this.messageToken = 0;\r\n        this.partialMessageTimer = undefined;\r\n        this.callback = callback;\r\n        this.readable.on('data', (data) => {\r\n            this.onData(data);\r\n        });\r\n        this.readable.on('error', (error) => this.fireError(error));\r\n        this.readable.on('close', () => this.fireClose());\r\n    }\r\n    onData(data) {\r\n        this.buffer.append(data);\r\n        while (true) {\r\n            if (this.nextMessageLength === -1) {\r\n                let headers = this.buffer.tryReadHeaders();\r\n                if (!headers) {\r\n                    return;\r\n                }\r\n                let contentLength = headers['Content-Length'];\r\n                if (!contentLength) {\r\n                    throw new Error('Header must provide a Content-Length property.');\r\n                }\r\n                let length = parseInt(contentLength);\r\n                if (isNaN(length)) {\r\n                    throw new Error('Content-Length value must be a number.');\r\n                }\r\n                this.nextMessageLength = length;\r\n                // Take the encoding form the header. For compatibility\r\n                // treat both utf-8 and utf8 as node utf8\r\n            }\r\n            var msg = this.buffer.tryReadContent(this.nextMessageLength);\r\n            if (msg === null) {\r\n                /** We haven't recevied the full message yet. */\r\n                this.setPartialMessageTimer();\r\n                return;\r\n            }\r\n            this.clearPartialMessageTimer();\r\n            this.nextMessageLength = -1;\r\n            this.messageToken++;\r\n            var json = JSON.parse(msg);\r\n            this.callback(json);\r\n        }\r\n    }\r\n    clearPartialMessageTimer() {\r\n        if (this.partialMessageTimer) {\r\n            clearTimeout(this.partialMessageTimer);\r\n            this.partialMessageTimer = undefined;\r\n        }\r\n    }\r\n    setPartialMessageTimer() {\r\n        this.clearPartialMessageTimer();\r\n        if (this._partialMessageTimeout <= 0) {\r\n            return;\r\n        }\r\n        this.partialMessageTimer = setTimeout((token, timeout) => {\r\n            this.partialMessageTimer = undefined;\r\n            if (token === this.messageToken) {\r\n                this.firePartialMessage({ messageToken: token, waitingTime: timeout });\r\n                this.setPartialMessageTimer();\r\n            }\r\n        }, this._partialMessageTimeout, this.messageToken, this._partialMessageTimeout);\r\n    }\r\n}\r\nexports.StreamMessageReader = StreamMessageReader;\r\nclass IPCMessageReader extends AbstractMessageReader {\r\n    constructor(process) {\r\n        super();\r\n        this.process = process;\r\n        let eventEmitter = this.process;\r\n        eventEmitter.on('error', (error) => this.fireError(error));\r\n        eventEmitter.on('close', () => this.fireClose());\r\n    }\r\n    listen(callback) {\r\n        this.process.on('message', callback);\r\n    }\r\n}\r\nexports.IPCMessageReader = IPCMessageReader;\r\nclass SocketMessageReader extends StreamMessageReader {\r\n    constructor(socket, encoding = 'utf-8') {\r\n        super(socket, encoding);\r\n    }\r\n}\r\nexports.SocketMessageReader = SocketMessageReader;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nlet ContentLength = 'Content-Length: ';\r\nlet CRLF = '\\r\\n';\r\nvar MessageWriter;\r\n(function (MessageWriter) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.dispose) && Is.func(candidate.onClose) &&\r\n            Is.func(candidate.onError) && Is.func(candidate.write);\r\n    }\r\n    MessageWriter.is = is;\r\n})(MessageWriter = exports.MessageWriter || (exports.MessageWriter = {}));\r\nclass AbstractMessageWriter {\r\n    constructor() {\r\n        this.errorEmitter = new events_1.Emitter();\r\n        this.closeEmitter = new events_1.Emitter();\r\n    }\r\n    dispose() {\r\n        this.errorEmitter.dispose();\r\n        this.closeEmitter.dispose();\r\n    }\r\n    get onError() {\r\n        return this.errorEmitter.event;\r\n    }\r\n    fireError(error, message, count) {\r\n        this.errorEmitter.fire([this.asError(error), message, count]);\r\n    }\r\n    get onClose() {\r\n        return this.closeEmitter.event;\r\n    }\r\n    fireClose() {\r\n        this.closeEmitter.fire(undefined);\r\n    }\r\n    asError(error) {\r\n        if (error instanceof Error) {\r\n            return error;\r\n        }\r\n        else {\r\n            return new Error(`Writer recevied error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\r\n        }\r\n    }\r\n}\r\nexports.AbstractMessageWriter = AbstractMessageWriter;\r\nclass StreamMessageWriter extends AbstractMessageWriter {\r\n    constructor(writable, encoding = 'utf8') {\r\n        super();\r\n        this.writable = writable;\r\n        this.encoding = encoding;\r\n        this.errorCount = 0;\r\n        this.writable.on('error', (error) => this.fireError(error));\r\n        this.writable.on('close', () => this.fireClose());\r\n    }\r\n    write(msg) {\r\n        let json = JSON.stringify(msg);\r\n        let contentLength = Buffer.byteLength(json, this.encoding);\r\n        let headers = [\r\n            ContentLength, contentLength.toString(), CRLF,\r\n            CRLF\r\n        ];\r\n        try {\r\n            // Header must be written in ASCII encoding\r\n            this.writable.write(headers.join(''), 'ascii');\r\n            // Now write the content. This can be written in any encoding\r\n            this.writable.write(json, this.encoding);\r\n            this.errorCount = 0;\r\n        }\r\n        catch (error) {\r\n            this.errorCount++;\r\n            this.fireError(error, msg, this.errorCount);\r\n        }\r\n    }\r\n}\r\nexports.StreamMessageWriter = StreamMessageWriter;\r\nclass IPCMessageWriter extends AbstractMessageWriter {\r\n    constructor(process) {\r\n        super();\r\n        this.process = process;\r\n        this.errorCount = 0;\r\n        this.queue = [];\r\n        this.sending = false;\r\n        let eventEmitter = this.process;\r\n        eventEmitter.on('error', (error) => this.fireError(error));\r\n        eventEmitter.on('close', () => this.fireClose);\r\n    }\r\n    write(msg) {\r\n        if (!this.sending && this.queue.length === 0) {\r\n            // See https://github.com/nodejs/node/issues/7657\r\n            this.doWriteMessage(msg);\r\n        }\r\n        else {\r\n            this.queue.push(msg);\r\n        }\r\n    }\r\n    doWriteMessage(msg) {\r\n        try {\r\n            if (this.process.send) {\r\n                this.sending = true;\r\n                this.process.send(msg, undefined, undefined, (error) => {\r\n                    this.sending = false;\r\n                    if (error) {\r\n                        this.errorCount++;\r\n                        this.fireError(error, msg, this.errorCount);\r\n                    }\r\n                    else {\r\n                        this.errorCount = 0;\r\n                    }\r\n                    if (this.queue.length > 0) {\r\n                        this.doWriteMessage(this.queue.shift());\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        catch (error) {\r\n            this.errorCount++;\r\n            this.fireError(error, msg, this.errorCount);\r\n        }\r\n    }\r\n}\r\nexports.IPCMessageWriter = IPCMessageWriter;\r\nclass SocketMessageWriter extends AbstractMessageWriter {\r\n    constructor(socket, encoding = 'utf8') {\r\n        super();\r\n        this.socket = socket;\r\n        this.queue = [];\r\n        this.sending = false;\r\n        this.encoding = encoding;\r\n        this.errorCount = 0;\r\n        this.socket.on('error', (error) => this.fireError(error));\r\n        this.socket.on('close', () => this.fireClose());\r\n    }\r\n    write(msg) {\r\n        if (!this.sending && this.queue.length === 0) {\r\n            // See https://github.com/nodejs/node/issues/7657\r\n            this.doWriteMessage(msg);\r\n        }\r\n        else {\r\n            this.queue.push(msg);\r\n        }\r\n    }\r\n    doWriteMessage(msg) {\r\n        let json = JSON.stringify(msg);\r\n        let contentLength = Buffer.byteLength(json, this.encoding);\r\n        let headers = [\r\n            ContentLength, contentLength.toString(), CRLF,\r\n            CRLF\r\n        ];\r\n        try {\r\n            // Header must be written in ASCII encoding\r\n            this.sending = true;\r\n            this.socket.write(headers.join(''), 'ascii', (error) => {\r\n                if (error) {\r\n                    this.handleError(error, msg);\r\n                }\r\n                try {\r\n                    // Now write the content. This can be written in any encoding\r\n                    this.socket.write(json, this.encoding, (error) => {\r\n                        this.sending = false;\r\n                        if (error) {\r\n                            this.handleError(error, msg);\r\n                        }\r\n                        else {\r\n                            this.errorCount = 0;\r\n                        }\r\n                        if (this.queue.length > 0) {\r\n                            this.doWriteMessage(this.queue.shift());\r\n                        }\r\n                    });\r\n                }\r\n                catch (error) {\r\n                    this.handleError(error, msg);\r\n                }\r\n            });\r\n        }\r\n        catch (error) {\r\n            this.handleError(error, msg);\r\n        }\r\n    }\r\n    handleError(error, msg) {\r\n        this.errorCount++;\r\n        this.fireError(error, msg, this.errorCount);\r\n    }\r\n}\r\nexports.SocketMessageWriter = SocketMessageWriter;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst is = require(\"./is\");\r\n/**\r\n * Predefined error codes.\r\n */\r\nvar ErrorCodes;\r\n(function (ErrorCodes) {\r\n    // Defined by JSON RPC\r\n    ErrorCodes.ParseError = -32700;\r\n    ErrorCodes.InvalidRequest = -32600;\r\n    ErrorCodes.MethodNotFound = -32601;\r\n    ErrorCodes.InvalidParams = -32602;\r\n    ErrorCodes.InternalError = -32603;\r\n    ErrorCodes.serverErrorStart = -32099;\r\n    ErrorCodes.serverErrorEnd = -32000;\r\n    ErrorCodes.ServerNotInitialized = -32002;\r\n    ErrorCodes.UnknownErrorCode = -32001;\r\n    // Defined by the protocol.\r\n    ErrorCodes.RequestCancelled = -32800;\r\n    // Defined by VSCode library.\r\n    ErrorCodes.MessageWriteError = 1;\r\n    ErrorCodes.MessageReadError = 2;\r\n})(ErrorCodes = exports.ErrorCodes || (exports.ErrorCodes = {}));\r\n/**\r\n * An error object return in a response in case a request\r\n * has failed.\r\n */\r\nclass ResponseError extends Error {\r\n    constructor(code, message, data) {\r\n        super(message);\r\n        this.code = is.number(code) ? code : ErrorCodes.UnknownErrorCode;\r\n        this.data = data;\r\n        Object.setPrototypeOf(this, ResponseError.prototype);\r\n    }\r\n    toJson() {\r\n        return {\r\n            code: this.code,\r\n            message: this.message,\r\n            data: this.data,\r\n        };\r\n    }\r\n}\r\nexports.ResponseError = ResponseError;\r\n/**\r\n * An abstract implementation of a MessageType.\r\n */\r\nclass AbstractMessageType {\r\n    constructor(_method, _numberOfParams) {\r\n        this._method = _method;\r\n        this._numberOfParams = _numberOfParams;\r\n    }\r\n    get method() {\r\n        return this._method;\r\n    }\r\n    get numberOfParams() {\r\n        return this._numberOfParams;\r\n    }\r\n}\r\nexports.AbstractMessageType = AbstractMessageType;\r\n/**\r\n * Classes to type request response pairs\r\n */\r\nclass RequestType0 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 0);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType0 = RequestType0;\r\nclass RequestType extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType = RequestType;\r\nclass RequestType1 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType1 = RequestType1;\r\nclass RequestType2 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 2);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType2 = RequestType2;\r\nclass RequestType3 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 3);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType3 = RequestType3;\r\nclass RequestType4 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 4);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType4 = RequestType4;\r\nclass RequestType5 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 5);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType5 = RequestType5;\r\nclass RequestType6 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 6);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType6 = RequestType6;\r\nclass RequestType7 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 7);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType7 = RequestType7;\r\nclass RequestType8 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 8);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType8 = RequestType8;\r\nclass RequestType9 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 9);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.RequestType9 = RequestType9;\r\nclass NotificationType extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType = NotificationType;\r\nclass NotificationType0 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 0);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType0 = NotificationType0;\r\nclass NotificationType1 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType1 = NotificationType1;\r\nclass NotificationType2 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 2);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType2 = NotificationType2;\r\nclass NotificationType3 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 3);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType3 = NotificationType3;\r\nclass NotificationType4 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 4);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType4 = NotificationType4;\r\nclass NotificationType5 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 5);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType5 = NotificationType5;\r\nclass NotificationType6 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 6);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType6 = NotificationType6;\r\nclass NotificationType7 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 7);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType7 = NotificationType7;\r\nclass NotificationType8 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 8);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType8 = NotificationType8;\r\nclass NotificationType9 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 9);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType9 = NotificationType9;\r\n/**\r\n * Tests if the given message is a request message\r\n */\r\nfunction isRequestMessage(message) {\r\n    let candidate = message;\r\n    return candidate && is.string(candidate.method) && (is.string(candidate.id) || is.number(candidate.id));\r\n}\r\nexports.isRequestMessage = isRequestMessage;\r\n/**\r\n * Tests if the given message is a notification message\r\n */\r\nfunction isNotificationMessage(message) {\r\n    let candidate = message;\r\n    return candidate && is.string(candidate.method) && message.id === void 0;\r\n}\r\nexports.isNotificationMessage = isNotificationMessage;\r\n/**\r\n * Tests if the given message is a response message\r\n */\r\nfunction isResponseMessage(message) {\r\n    let candidate = message;\r\n    return candidate && (candidate.result !== void 0 || !!candidate.error) && (is.string(candidate.id) || is.number(candidate.id) || candidate.id === null);\r\n}\r\nexports.isResponseMessage = isResponseMessage;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst path_1 = require(\"path\");\r\nconst os_1 = require(\"os\");\r\nconst crypto_1 = require(\"crypto\");\r\nconst net_1 = require(\"net\");\r\nconst messageReader_1 = require(\"./messageReader\");\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nfunction generateRandomPipeName() {\r\n    const randomSuffix = crypto_1.randomBytes(21).toString('hex');\r\n    if (process.platform === 'win32') {\r\n        return `\\\\\\\\.\\\\pipe\\\\vscode-jsonrpc-${randomSuffix}-sock`;\r\n    }\r\n    else {\r\n        // Mac/Unix: use socket file\r\n        return path_1.join(os_1.tmpdir(), `vscode-${randomSuffix}.sock`);\r\n    }\r\n}\r\nexports.generateRandomPipeName = generateRandomPipeName;\r\nfunction createClientPipeTransport(pipeName, encoding = 'utf-8') {\r\n    let connectResolve;\r\n    let connected = new Promise((resolve, _reject) => {\r\n        connectResolve = resolve;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n        let server = net_1.createServer((socket) => {\r\n            server.close();\r\n            connectResolve([\r\n                new messageReader_1.SocketMessageReader(socket, encoding),\r\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n            ]);\r\n        });\r\n        server.on('error', reject);\r\n        server.listen(pipeName, () => {\r\n            server.removeListener('error', reject);\r\n            resolve({\r\n                onConnected: () => { return connected; }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.createClientPipeTransport = createClientPipeTransport;\r\nfunction createServerPipeTransport(pipeName, encoding = 'utf-8') {\r\n    const socket = net_1.createConnection(pipeName);\r\n    return [\r\n        new messageReader_1.SocketMessageReader(socket, encoding),\r\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n    ];\r\n}\r\nexports.createServerPipeTransport = createServerPipeTransport;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst net_1 = require(\"net\");\r\nconst messageReader_1 = require(\"./messageReader\");\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nfunction createClientSocketTransport(port, encoding = 'utf-8') {\r\n    let connectResolve;\r\n    let connected = new Promise((resolve, _reject) => {\r\n        connectResolve = resolve;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n        let server = net_1.createServer((socket) => {\r\n            server.close();\r\n            connectResolve([\r\n                new messageReader_1.SocketMessageReader(socket, encoding),\r\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n            ]);\r\n        });\r\n        server.on('error', reject);\r\n        server.listen(port, '127.0.0.1', () => {\r\n            server.removeListener('error', reject);\r\n            resolve({\r\n                onConnected: () => { return connected; }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.createClientSocketTransport = createClientSocketTransport;\r\nfunction createServerSocketTransport(port, encoding = 'utf-8') {\r\n    const socket = net_1.createConnection(port, '127.0.0.1');\r\n    return [\r\n        new messageReader_1.SocketMessageReader(socket, encoding),\r\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n    ];\r\n}\r\nexports.createServerSocketTransport = createServerSocketTransport;\r\n"],"sourceRoot":""}