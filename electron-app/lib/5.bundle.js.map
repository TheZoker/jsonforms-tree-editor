{"version":3,"sources":["webpack:///../node_modules/@theia/output/src/browser/output-contribution.ts","webpack:///../node_modules/@theia/output/src/browser/output-widget.tsx","webpack:///../node_modules/@theia/output/src/common/output-channel.ts","webpack:///../node_modules/@theia/output/src/common/output-preferences.ts","webpack:///../node_modules/@theia/output/src/browser/style/output.css?577e","webpack:///../node_modules/@theia/output/src/browser/style/output.css"],"names":[],"mappings":"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","file":"5.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { AbstractViewContribution } from '@theia/core/lib/browser/shell/view-contribution';\nimport { OUTPUT_WIDGET_KIND, OutputWidget } from './output-widget';\n\n@injectable()\nexport class OutputContribution extends AbstractViewContribution<OutputWidget> {\n\n    constructor() {\n        super({\n            widgetId: OUTPUT_WIDGET_KIND,\n            widgetName: 'Output',\n            defaultWidgetOptions: {\n                area: 'bottom'\n            },\n            toggleCommandId: 'output:toggle',\n            toggleKeybinding: 'ctrlcmd+shift+u'\n        });\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, postConstruct } from 'inversify';\nimport { Message } from '@theia/core/lib/browser';\nimport { OutputChannelManager, OutputChannel } from '../common/output-channel';\nimport { ReactWidget } from '@theia/core/lib/browser/widgets/react-widget';\nimport * as React from 'react';\n\nimport '../../src/browser/style/output.css';\n\nexport const OUTPUT_WIDGET_KIND = 'outputView';\n\n@injectable()\nexport class OutputWidget extends ReactWidget {\n\n    protected selectedChannel: OutputChannel | undefined;\n\n    @inject(OutputChannelManager)\n    protected readonly outputChannelManager: OutputChannelManager;\n\n    constructor() {\n        super();\n        this.id = OUTPUT_WIDGET_KIND;\n        this.title.label = 'Output';\n        this.title.caption = 'Output';\n        this.title.iconClass = 'fa output-tab-icon';\n        this.title.closable = true;\n        this.addClass('theia-output');\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.outputChannelManager.getChannels().forEach(this.registerListener.bind(this));\n        this.toDispose.push(this.outputChannelManager.onChannelAdded(channel => {\n            this.registerListener(channel);\n            this.update();\n        }));\n        this.toDispose.push(this.outputChannelManager.onChannelDelete(event => {\n            if (this.selectedChannel && this.selectedChannel.name === event.channelName) {\n                this.selectedChannel = this.getVisibleChannels()[0];\n            }\n            this.update();\n        }));\n        this.update();\n    }\n\n    protected onActivateRequest(msg: Message): void {\n        super.onActivateRequest(msg);\n        const channelSelector = document.getElementById(OutputWidget.IDs.CHANNEL_LIST);\n        if (channelSelector) {\n            channelSelector.focus();\n        } else {\n            this.node.focus();\n        }\n    }\n\n    protected registerListener(outputChannel: OutputChannel): void {\n        if (!this.selectedChannel) {\n            this.selectedChannel = outputChannel;\n        }\n        this.toDispose.push(outputChannel.onContentChange(c => {\n            if (outputChannel === this.selectedChannel) {\n                this.update();\n            }\n        }));\n        this.toDispose.push(outputChannel.onVisibilityChange(event => {\n            if (event.visible) {\n                this.selectedChannel = outputChannel;\n            } else if (outputChannel === this.selectedChannel) {\n                this.selectedChannel = this.getVisibleChannels()[0];\n            }\n            this.update();\n        }));\n    }\n\n    protected render(): React.ReactNode {\n        return <React.Fragment>\n            <div id={OutputWidget.IDs.OVERLAY}>\n                {this.renderChannelSelector()}\n                {this.renderClearButton()}\n            </div>\n            {this.renderChannelContents()}\n        </React.Fragment>;\n    }\n\n    protected renderClearButton(): React.ReactNode {\n        return <span title='Clear'\n            className={this.selectedChannel ? 'enabled' : ''}\n            id={OutputWidget.IDs.CLEAR_BUTTON} onClick={() => this.clear()} />;\n    }\n\n    protected clear(): void {\n        if (this.selectedChannel) {\n            this.selectedChannel.clear();\n        }\n    }\n\n    protected renderChannelContents(): React.ReactNode {\n        return <div id={OutputWidget.IDs.CONTENTS}>{this.renderLines()}</div>;\n    }\n\n    protected renderLines(): React.ReactNode[] {\n        let id = 0;\n        const result = [];\n\n        const style: React.CSSProperties = {\n            whiteSpace: 'pre',\n            fontFamily: 'monospace',\n        };\n\n        if (this.selectedChannel) {\n            for (const text of this.selectedChannel.getLines()) {\n                const lines = text.split(/[\\n\\r]+/);\n                for (const line of lines) {\n                    result.push(<div style={style} key={id++}>{line}</div>);\n                }\n            }\n        }\n        if (result.length === 0) {\n            result.push(<div style={style} key={id++}>{'<no output yet>'}</div>);\n        }\n        return result;\n    }\n\n    private readonly NONE = '<no channels>';\n\n    protected renderChannelSelector(): React.ReactNode {\n        const channelOptionElements: React.ReactNode[] = [];\n        this.getVisibleChannels().forEach(channel => {\n            channelOptionElements.push(<option value={channel.name} key={channel.name}>{channel.name}</option>);\n        });\n        if (channelOptionElements.length === 0) {\n            channelOptionElements.push(<option key={this.NONE} value={this.NONE}>{this.NONE}</option>);\n        }\n        return <select\n            id={OutputWidget.IDs.CHANNEL_LIST}\n            value={this.selectedChannel ? this.selectedChannel.name : this.NONE}\n            onChange={\n                async event => {\n                    const channelName = (event.target as HTMLSelectElement).value;\n                    if (channelName !== this.NONE) {\n                        this.selectedChannel = this.outputChannelManager.getChannel(channelName);\n                        this.update();\n                    }\n                }\n            }>\n            {channelOptionElements}\n        </select>;\n    }\n\n    protected onUpdateRequest(msg: Message): void {\n        super.onUpdateRequest(msg);\n        setTimeout(() => {\n            const div = document.getElementById(OutputWidget.IDs.CONTENTS) as HTMLDivElement;\n            if (div && div.children.length > 0) {\n                div.children[div.children.length - 1].scrollIntoView(false);\n            }\n        });\n    }\n\n    protected getVisibleChannels(): OutputChannel[] {\n        return this.outputChannelManager.getChannels().filter(channel => channel.isVisible);\n    }\n}\n\nexport namespace OutputWidget {\n    export namespace IDs {\n        export const CLEAR_BUTTON = 'outputClear';\n        export const CONTENTS = 'outputContents';\n        export const OVERLAY = 'outputOverlay';\n        export const CHANNEL_LIST = 'outputChannelList';\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { Emitter, Event } from '@theia/core';\nimport { injectable, inject } from 'inversify';\nimport { OutputPreferences } from './output-preferences';\n\n@injectable()\nexport class OutputChannelManager {\n    protected readonly channels = new Map<string, OutputChannel>();\n\n    private readonly channelDeleteEmitter = new Emitter<{channelName: string}>();\n    private readonly channelAddedEmitter = new Emitter<OutputChannel>();\n    readonly onChannelDelete = this.channelDeleteEmitter.event;\n    readonly onChannelAdded = this.channelAddedEmitter.event;\n\n    constructor(@inject(OutputPreferences) protected preferences: OutputPreferences) {\n    }\n\n    getChannel(name: string): OutputChannel {\n        const existing = this.channels.get(name);\n        if (existing) {\n            return existing;\n        }\n        const channel = new OutputChannel(name, this.preferences);\n        this.channels.set(name, channel);\n        this.channelAddedEmitter.fire(channel);\n        return channel;\n    }\n\n    deleteChannel(name: string): void {\n        this.channels.delete(name);\n        this.channelDeleteEmitter.fire({channelName: name});\n    }\n\n    getChannels(): OutputChannel[] {\n        return Array.from(this.channels.values());\n    }\n}\n\nexport class OutputChannel {\n\n    private readonly visibilityChangeEmitter = new Emitter<{visible: boolean}>();\n    private readonly contentChangeEmitter = new Emitter<OutputChannel>();\n    private lines: string[] = [];\n    private currentLine: string | undefined;\n    private visible: boolean = true;\n\n    readonly onVisibilityChange: Event<{visible: boolean}> = this.visibilityChangeEmitter.event;\n    readonly onContentChange: Event<OutputChannel> = this.contentChangeEmitter.event;\n\n    constructor(readonly name: string, readonly preferences: OutputPreferences) { }\n\n    append(value: string): void {\n        if (this.currentLine === undefined) {\n            this.currentLine = value;\n        } else {\n            this.currentLine += value;\n        }\n        this.contentChangeEmitter.fire(this);\n    }\n\n    appendLine(line: string): void {\n        if (this.currentLine !== undefined) {\n            this.lines.push(this.currentLine + line);\n            this.currentLine = undefined;\n        } else {\n            this.lines.push(line);\n        }\n        const maxChannelHistory = this.preferences['output.maxChannelHistory'];\n        if (this.lines.length > maxChannelHistory) {\n            this.lines.splice(0, this.lines.length - maxChannelHistory);\n        }\n        this.contentChangeEmitter.fire(this);\n    }\n\n    clear(): void {\n        this.lines.length = 0;\n        this.currentLine = undefined;\n        this.contentChangeEmitter.fire(this);\n    }\n\n    setVisibility(visible: boolean): void {\n        this.visible = visible;\n        this.visibilityChangeEmitter.fire({visible});\n    }\n\n    getLines(): string[] {\n        if (this.currentLine !== undefined) {\n            return [...this.lines, this.currentLine];\n        } else {\n            return this.lines;\n        }\n    }\n\n    get isVisible(): boolean {\n        return this.visible;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { interfaces } from 'inversify';\nimport {\n    createPreferenceProxy,\n    PreferenceProxy,\n    PreferenceService,\n    PreferenceContribution,\n    PreferenceSchema\n} from '@theia/core/lib/browser/preferences';\n\nexport const OutputConfigSchema: PreferenceSchema = {\n    'type': 'object',\n    'properties': {\n        'output.maxChannelHistory': {\n            'type': 'number',\n            'description': 'The maximum number of entries in an output channel.',\n            'default': 1000\n        }\n    }\n};\n\nexport interface OutputConfiguration {\n    'output.maxChannelHistory': number\n}\n\nexport const OutputPreferences = Symbol('OutputPreferences');\nexport type OutputPreferences = PreferenceProxy<OutputConfiguration>;\n\nexport function createOutputPreferences(preferences: PreferenceService): OutputPreferences {\n    return createPreferenceProxy(preferences, OutputConfigSchema);\n}\n\nexport function bindOutputPreferences(bind: interfaces.Bind): void {\n    bind(OutputPreferences).toDynamicValue(ctx => {\n        const preferences = ctx.container.get<PreferenceService>(PreferenceService);\n        return createOutputPreferences(preferences);\n    });\n\n    bind(PreferenceContribution).toConstantValue({ schema: OutputConfigSchema });\n}\n","\nvar content = require(\"!!../../../../../css-loader/index.js!./output.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../css-loader/index.js!./output.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../css-loader/index.js!./output.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/********************************************************************************\\n * Copyright (C) 2018 TypeFox and others.\\n *\\n * This program and the accompanying materials are made available under the\\n * terms of the Eclipse Public License v. 2.0 which is available at\\n * http://www.eclipse.org/legal/epl-2.0.\\n *\\n * This Source Code may also be made available under the following Secondary\\n * Licenses when the conditions for such availability set forth in the Eclipse\\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\\n * with the GNU Classpath Exception which is available at\\n * https://www.gnu.org/software/classpath/license.html.\\n *\\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\\n ********************************************************************************/\\n\\n #outputView {\\n\\tfont-size: var(--theia-ui-font-size1);\\n    color: var(--theia-ui-font-color1);\\n}\\n\\n#outputView #outputContents {\\n    overflow: auto;\\n    height: inherit;\\n    padding: 6px;\\n    box-sizing: border-box;\\n}\\n\\n#outputView #outputOverlay {\\n    position: absolute;\\n    right: 24px;\\n    margin: 6px;\\n    display: flex;\\n}\\n\\n#outputView #outputOverlay > * {\\n    /* Separation between elements.  */\\n    margin-left: 6px;\\n\\n    height: 21px;\\n    border-width: 1px;\\n    border-style: solid;\\n    border-color: var(--theia-border-color1);\\n    box-sizing: border-box;\\n\\n    background: var(--theia-layout-color2);\\n}\\n\\n#outputView #outputChannelList {\\n    line-height: var(--theia-content-line-height);\\n    font-size: var(--theia-ui-font-size1);\\n    color: var(--theia-ui-font-color1);\\n\\n    -webkit-appearance: none;\\n    -moz-appearance: none;\\n    background-image: linear-gradient(45deg, transparent 50%, var(--theia-ui-font-color1) 50%), linear-gradient(135deg, var(--theia-ui-font-color1) 50%, transparent 50%);\\n    background-position: calc(100% - 6px) 8px, calc(100% - 2px) 8px, 100% 0;\\n    background-size: 4px 5px;\\n    background-repeat: no-repeat;\\n    padding-left: 3px;\\n    padding-right: 15px;\\n}\\n\\n#outputView #outputClear {\\n    background-image: var(--theia-icon-clear);\\n    background-position: center;\\n    background-repeat: no-repeat;\\n    display: inline-block;\\n    width: 21px;\\n    opacity: 0.25;\\n}\\n\\n#outputView #outputClear.enabled {\\n    opacity: 0.7;\\n    cursor: pointer;\\n}\\n\\n#outputView #outputClear.enabled:hover {\\n    opacity: 1;\\n}\\n\\n.output-tab-icon::before {\\n    content: \\\"\\\\F024\\\"\\n}\\n\", \"\"]);\n\n// exports\n"],"sourceRoot":""}